<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" docName="draft-ietf-oauth-v2-bearer-23" indexInclude="true" number="6750" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-bearer-23" rel="prev"/>
<link href="https://dx.doi.org/10.17487/rfc6750" rel="alternate"/>
  <front>
    <title>The OAuth 2.0 Authorization Framework: Bearer Token Usage</title>
    <seriesInfo name="RFC" value="6750" stream="IETF"/>
    <date year="2012" month="October"/>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This specification describes how to use bearer tokens in HTTP
requests to access OAuth 2.0 protected resources.  Any party in
possession of a bearer token (a &quot;bearer&quot;) can use it to get access to
the associated resources (without demonstrating possession of a
cryptographic key).  To prevent misuse, bearer tokens need to be
protected from disclosure in storage and in transport.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1.1">This is an Internet Standards Track document.</t>
        <t indent="0" pn="section-boilerplate.1.2">This document is a product of the Internet Engineering Task Force
(IETF).  It represents the consensus of the IETF community.  It has
received public review and has been approved for publication by the
Internet Engineering Steering Group (IESG).  Further information on
Internet Standards is available in Section 2 of RFC 5741.</t>
        <t indent="0" pn="section-boilerplate.1.3">Information about the current status of this document, any errata,
and how to provide feedback on it may be obtained at
http://www.rfc-editor.org/info/rfc6750.</t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">Copyright (c) 2012 IETF Trust and the persons identified as the
document authors.  All rights reserved.</t>
        <t indent="0" pn="section-boilerplate.2-2">This document is subject to BCP 78 and the IETF Trust's Legal
Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info) in effect on the date of
publication of this document.  Please review these documents
carefully, as they describe your rights and restrictions with respect
to this document.  Code Components extracted from this document must
include Simplified BSD License text as described in Section 4.e of
the Trust Legal Provisions and are provided without warranty as
described in the Simplified BSD License.</t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
            <li pn="section-toc.1-1.1.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notational-conventions">Notational Conventions</xref></t>
            </li>
            <li pn="section-toc.1-1.1.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
            </li>
            <li pn="section-toc.1-1.1.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">Overview</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authenticated-requests">Authenticated Requests</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
            <li pn="section-toc.1-1.2.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-request-header-field">Authorization Request Header Field</xref></t>
            </li>
            <li pn="section-toc.1-1.2.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-form-encoded-body-parameter">Form-Encoded Body Parameter</xref></t>
            </li>
            <li pn="section-toc.1-1.2.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-query-parameter">URI Query Parameter</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-www-authenticate-response-header-field">The WWW-Authenticate Response Header Field</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
            <li pn="section-toc.1-1.3.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-error-codes">Error Codes</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-access-token-response">Example Access Token Response</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
            <li pn="section-toc.1-1.5.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-threats">Security Threats</xref></t>
            </li>
            <li pn="section-toc.1-1.5.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-mitigation">Threat Mitigation</xref></t>
            </li>
            <li pn="section-toc.1-1.5.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-recommendations">Summary of Recommendations</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
            <li pn="section-toc.1-1.6.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-access-token-type-registration">OAuth Access Token Type Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.1.2">
              <li pn="section-toc.1-1.6.1.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1.1"><xref derivedContent="6.1.1" format="counter" sectionFormat="of" target="section-6.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;bearer&quot;-oauth-access-token-type">The &quot;Bearer&quot; OAuth Access Token Type</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.6.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-extensions-error-registration">OAuth Extensions Error Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_request&quot;-error-value">The &quot;invalid_request&quot; Error Value</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2.2" format="counter" sectionFormat="of" target="section-6.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_token&quot;-error-value">The &quot;invalid_token&quot; Error Value</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.2.3" format="counter" sectionFormat="of" target="section-6.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;insufficient_scope&quot;-error-value">The &quot;insufficient_scope&quot; Error Value</xref></t>
              </li>
              </ul>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
            <li pn="section-toc.1-1.7.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
            </li>
            <li pn="section-toc.1-1.7.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.A">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.1"><xref derivedContent="A" format="counter" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
      </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">OAuth enables clients to access protected resources by obtaining an
access token, which is defined in &quot;The OAuth 2.0 Authorization
Framework&quot; <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/> as &quot;a string representing an access
authorization issued to the client&quot;, rather than using the resource
owner's credentials directly.</t>
      <t indent="0" pn="section-1-2">Tokens are issued to clients by an authorization server with the
approval of the resource owner.  The client uses the access token to
access the protected resources hosted by the resource server.  This
specification describes how to make protected resource requests when
the OAuth access token is a bearer token.</t>
      <t indent="0" pn="section-1-3">This specification defines the use of bearer tokens over HTTP/1.1
<xref target="RFC2616" format="default" sectionFormat="of" derivedContent="RFC2616"/> using Transport Layer Security (TLS) <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/> to access
protected resources.  TLS is mandatory to implement and use with this
specification; other specifications may extend this specification for
use with other protocols.  While designed for use with access tokens
resulting from OAuth 2.0 authorization <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/> flows to access
OAuth protected resources, this specification actually defines a
general HTTP authorization method that can be used with bearer tokens
from any source to access any resources protected by those bearer
tokens.  The Bearer authentication scheme is intended primarily for
server authentication using the WWW-Authenticate and Authorization
HTTP headers but does not preclude its use for proxy authentication.</t>
      <section anchor="notational-conventions" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-notational-conventions">Notational Conventions</name>
        <t indent="0" pn="section-1.1-1">The key words &quot;<bcp14>MUST</bcp14>&quot;, &quot;<bcp14>MUST NOT</bcp14>&quot;, &quot;<bcp14>REQUIRED</bcp14>&quot;, &quot;<bcp14>SHALL</bcp14>&quot;, &quot;<bcp14>SHALL NOT</bcp14>&quot;,
&quot;<bcp14>SHOULD</bcp14>&quot;, &quot;<bcp14>SHOULD NOT</bcp14>&quot;, &quot;<bcp14>RECOMMENDED</bcp14>&quot;, &quot;<bcp14>MAY</bcp14>&quot;, and &quot;<bcp14>OPTIONAL</bcp14>&quot; in this
document are to be interpreted as described in &quot;Key words for use in
RFCs to Indicate Requirement Levels&quot; <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/>.</t>
        <t indent="0" pn="section-1.1-2">This document uses the Augmented Backus-Naur Form (ABNF) notation of
<xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>.  Additionally, the following rules are included from
HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>: auth-param and auth-scheme; and from &quot;Uniform
Resource Identifier (URI): Generic Syntax&quot; <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>: URI-reference.</t>
        <t indent="0" pn="section-1.1-3">Unless otherwise noted, all the protocol parameter names and values
are case sensitive.</t>
      </section>
      <section anchor="terminology" numbered="true" removeInRFC="false" toc="include" pn="section-1.2">
        <name slugifiedName="name-terminology">Terminology</name>
        <t indent="0" pn="section-1.2-1">Bearer Token
   A security token with the property that any party in possession of
   the token (a &quot;bearer&quot;) can use the token in any way that any other
   party in possession of it can.  Using a bearer token does not
   require a bearer to prove possession of cryptographic key material
   (proof-of-possession).</t>
        <t indent="0" pn="section-1.2-2">All other terms are as defined in &quot;The OAuth 2.0 Authorization
Framework&quot; <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
      </section>
      <section anchor="overview" numbered="true" removeInRFC="false" toc="include" pn="section-1.3">
        <name slugifiedName="name-overview">Overview</name>
        <t indent="0" pn="section-1.3-1">OAuth provides a method for clients to access a protected resource on
behalf of a resource owner.  In the general case, before a client can
access a protected resource, it must first obtain an authorization
grant from the resource owner and then exchange the authorization
grant for an access token.  The access token represents the grant's
scope, duration, and other attributes granted by the authorization
grant.  The client accesses the protected resource by presenting the
access token to the resource server.  In some cases, a client can
directly present its own credentials to an authorization server to
obtain an access token without having to first obtain an
authorization grant from a resource owner.</t>
        <t indent="0" pn="section-1.3-2">The access token provides an abstraction, replacing different
authorization constructs (e.g., username and password, assertion) for
a single token understood by the resource server.  This abstraction
enables issuing access tokens valid for a short time period, as well
as removing the resource server's need to understand a wide range of
authentication schemes.</t>
        <t indent="0" pn="section-1.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  +--------+                               +---------------+
  |        |--(A)- Authorization Request ->|   Resource    |
  |        |                               |     Owner     |
  |        |<-(B)-- Authorization Grant ---|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(C)-- Authorization Grant -->| Authorization |
  | Client |                               |     Server    |
  |        |<-(D)----- Access Token -------|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(E)----- Access Token ------>|    Resource   |
  |        |                               |     Server    |
  |        |<-(F)--- Protected Resource ---|               |
  +--------+                               +---------------+
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-4"><artwork name="" type="" align="left" alt=""><![CDATA[
                  Figure 1: Abstract Protocol Flow
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-5">The abstract OAuth 2.0 flow illustrated in Figure 1 describes the
interaction between the client, resource owner, authorization server,
and resource server (described in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>).  The following two
steps are specified within this document:</t>
        <t indent="0" pn="section-1.3-6">(E)  The client requests the protected resource from the resource
     server and authenticates by presenting the access token.</t>
        <t indent="0" pn="section-1.3-7">(F)  The resource server validates the access token, and if valid,
     serves the request.</t>
        <t indent="0" pn="section-1.3-8">This document also imposes semantic requirements upon the access
token returned in step (D).</t>
      </section>
    </section>
    <section anchor="authenticated-requests" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-authenticated-requests">Authenticated Requests</name>
      <t indent="0" pn="section-2-1">This section defines three methods of sending bearer access tokens in
resource requests to resource servers.  Clients <bcp14>MUST NOT</bcp14> use more
than one method to transmit the token in each request.</t>
      <section anchor="authorization-request-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-authorization-request-header-field">Authorization Request Header Field</name>
        <t indent="0" pn="section-2.1-1">When sending the access token in the &quot;Authorization&quot; request header
field defined by HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>, the client uses the &quot;Bearer&quot;
authentication scheme to transmit the access token.</t>
        <t indent="0" pn="section-2.1-2">For example:</t>
        <t indent="0" pn="section-2.1-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource HTTP/1.1
  Host: server.example.com
  Authorization: Bearer mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-4">The syntax of the &quot;Authorization&quot; header field for this scheme
follows the usage of the Basic scheme defined in <xref target="RFC2617" section="2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-2" derivedContent="RFC2617"/>.  Note that, as with Basic, it does not conform to the
generic syntax defined in <xref target="RFC2617" section="1.2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-1.2" derivedContent="RFC2617"/> but is compatible
with the general authentication framework being developed for
HTTP 1.1 <xref target="HTTP-AUTH" format="default" sectionFormat="of" derivedContent="HTTP-AUTH"/>, although it does not follow the preferred
practice outlined therein in order to reflect existing deployments.
The syntax for Bearer credentials is as follows:</t>
        <t indent="0" pn="section-2.1-5"><artwork name="" type="" align="left" alt=""><![CDATA[
  b64token    = 1*( ALPHA / DIGIT /
                    "-" / "." / "_" / "~" / "+" / "/" ) *"="
  credentials = "Bearer" 1*SP b64token
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-6">Clients <bcp14>SHOULD</bcp14> make authenticated requests with a bearer token using
the &quot;Authorization&quot; request header field with the &quot;Bearer&quot; HTTP
authorization scheme.  Resource servers <bcp14>MUST</bcp14> support this method.</t>
      </section>
      <section anchor="form-encoded-body-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.2">
        <name slugifiedName="name-form-encoded-body-parameter">Form-Encoded Body Parameter</name>
        <t indent="0" pn="section-2.2-1">When sending the access token in the HTTP request entity-body, the
client adds the access token to the request-body using the
&quot;access_token&quot; parameter.  The client <bcp14>MUST NOT</bcp14> use this method unless
all of the following conditions are met:</t>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-2">
          <li pn="section-2.2-2.1"> The HTTP request entity-header includes the &quot;Content-Type&quot; header
   field set to &quot;application/x-www-form-urlencoded&quot;.</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-3">
          <li pn="section-2.2-3.1"> The entity-body follows the encoding requirements of the
   &quot;application/x-www-form-urlencoded&quot; content-type as defined by
   HTML 4.01 [W3C.REC-html401-19991224].</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-4">
          <li pn="section-2.2-4.1"> The HTTP request entity-body is single-part.</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-5">
          <li pn="section-2.2-5.1"> The content to be encoded in the entity-body MUST consist entirely
   of ASCII [USASCII] characters.</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-6">
          <li pn="section-2.2-6.1"> The HTTP request method is one for which the request-body has
   defined semantics.  In particular, this means that the &quot;GET&quot;
   method MUST NOT be used.</li>
        </ul>
        <t indent="0" pn="section-2.2-7">The entity-body <bcp14>MAY</bcp14> include other request-specific parameters, in
which case the &quot;access_token&quot; parameter <bcp14>MUST</bcp14> be properly separated
from the request-specific parameters using &quot;&amp;&quot; character(s) (ASCII
code 38).</t>
        <t indent="0" pn="section-2.2-8">For example, the client makes the following HTTP request using
transport-layer security:</t>
        <t indent="0" pn="section-2.2-9"><artwork name="" type="" align="left" alt=""><![CDATA[
  POST /resource HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-10"><artwork name="" type="" align="left" alt=""><![CDATA[
  access_token=mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-11">The &quot;application/x-www-form-urlencoded&quot; method <bcp14>SHOULD NOT</bcp14> be used
except in application contexts where participating browsers do not
have access to the &quot;Authorization&quot; request header field.  Resource
servers <bcp14>MAY</bcp14> support this method.</t>
      </section>
      <section anchor="uri-query-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.3">
        <name slugifiedName="name-uri-query-parameter">URI Query Parameter</name>
        <t indent="0" pn="section-2.3-1">When sending the access token in the HTTP request URI, the client
adds the access token to the request URI query component as defined
by &quot;Uniform Resource Identifier (URI): Generic Syntax&quot; <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>,
using the &quot;access_token&quot; parameter.</t>
        <t indent="0" pn="section-2.3-2">For example, the client makes the following HTTP request using
transport-layer security:</t>
        <t indent="0" pn="section-2.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource?access_token=mF_9.B5f-4.1JqM HTTP/1.1
  Host: server.example.com
]]></artwork>
</t>
        <t indent="0" pn="section-2.3-4">The HTTP request URI query can include other request-specific
parameters, in which case the &quot;access_token&quot; parameter <bcp14>MUST</bcp14> be
properly separated from the request-specific parameters using &quot;&amp;&quot;
character(s) (ASCII code 38).</t>
        <t indent="0" pn="section-2.3-5">For example:</t>
        <t indent="0" pn="section-2.3-6"> https://server.example.com/resource?access_token=mF_9.B5f-4.1JqM&amp;p=q</t>
        <t indent="0" pn="section-2.3-7">Clients using the URI Query Parameter method <bcp14>SHOULD</bcp14> also send a
Cache-Control header containing the &quot;no-store&quot; option.  Server
success (2XX status) responses to these requests <bcp14>SHOULD</bcp14> contain a
Cache-Control header with the &quot;private&quot; option.</t>
        <t indent="0" pn="section-2.3-8">Because of the security weaknesses associated with the URI method
(see Section 5), including the high likelihood that the URL
containing the access token will be logged, it <bcp14>SHOULD NOT</bcp14> be used
unless it is impossible to transport the access token in the
&quot;Authorization&quot; request header field or the HTTP request entity-body.
Resource servers <bcp14>MAY</bcp14> support this method.</t>
        <t indent="0" pn="section-2.3-9">This method is included to document current use; its use is not
recommended, due to its security deficiencies (see Section 5) and
also because it uses a reserved query parameter name, which is
counter to URI namespace best practices, per &quot;Architecture of the
World Wide Web, Volume One&quot; <xref target="W3C.REC-webarch-20041215" format="default" sectionFormat="of" derivedContent="W3C.REC-webarch-20041215"/>.</t>
      </section>
    </section>
    <section anchor="the-www-authenticate-response-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-the-www-authenticate-response-header-field">The WWW-Authenticate Response Header Field</name>
      <t indent="0" pn="section-3-1">If the protected resource request does not include authentication
credentials or does not contain an access token that enables access
to the protected resource, the resource server <bcp14>MUST</bcp14> include the HTTP
&quot;WWW-Authenticate&quot; response header field; it <bcp14>MAY</bcp14> include it in
response to other conditions as well.  The &quot;WWW-Authenticate&quot; header
field uses the framework defined by HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>.</t>
      <t indent="0" pn="section-3-2">All challenges defined by this specification <bcp14>MUST</bcp14> use the auth-scheme
value &quot;Bearer&quot;.  This scheme <bcp14>MUST</bcp14> be followed by one or more
auth-param values.  The auth-param attributes used or defined by this
specification are as follows.  Other auth-param attributes <bcp14>MAY</bcp14> be
used as well.</t>
      <t indent="0" pn="section-3-3">A &quot;realm&quot; attribute <bcp14>MAY</bcp14> be included to indicate the scope of
protection in the manner described in HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>.  The
&quot;realm&quot; attribute <bcp14>MUST NOT</bcp14> appear more than once.</t>
      <t indent="0" pn="section-3-4">The &quot;scope&quot; attribute is defined in <xref target="RFC6749" section="3.3" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc6749#section-3.3" derivedContent="RFC6749"/>.  The
&quot;scope&quot; attribute is a space-delimited list of case-sensitive scope
values indicating the required scope of the access token for
accessing the requested resource. &quot;scope&quot; values are implementation
defined; there is no centralized registry for them; allowed values
are defined by the authorization server.  The order of &quot;scope&quot; values
is not significant.  In some cases, the &quot;scope&quot; value will be used
when requesting a new access token with sufficient scope of access to
utilize the protected resource.  Use of the &quot;scope&quot; attribute is
<bcp14>OPTIONAL</bcp14>.  The &quot;scope&quot; attribute <bcp14>MUST NOT</bcp14> appear more than once.  The
&quot;scope&quot; value is intended for programmatic use and is not meant to be
displayed to end-users.</t>
      <t indent="0" pn="section-3-5">Two example scope values follow; these are taken from the OpenID
Connect <xref target="OpenID.Messages" format="default" sectionFormat="of" derivedContent="OpenID.Messages"/> and the Open Authentication Technology
Committee (OATC) Online Multimedia Authorization Protocol <xref target="OMAP" format="default" sectionFormat="of" derivedContent="OMAP"/>
OAuth 2.0 use cases, respectively:</t>
      <t indent="0" pn="section-3-6"><artwork name="" type="" align="left" alt=""><![CDATA[
  scope="openid profile email"
  scope="urn:example:channel=HBO&urn:example:rating=G,PG-13"
]]></artwork>
</t>
      <t indent="0" pn="section-3-7">If the protected resource request included an access token and failed
authentication, the resource server <bcp14>SHOULD</bcp14> include the &quot;error&quot;
attribute to provide the client with the reason why the access
request was declined.  The parameter value is described in
Section 3.1.  In addition, the resource server <bcp14>MAY</bcp14> include the
&quot;error_description&quot; attribute to provide developers a human-readable
explanation that is not meant to be displayed to end-users.  It also
<bcp14>MAY</bcp14> include the &quot;error_uri&quot; attribute with an absolute URI
identifying a human-readable web page explaining the error.  The
&quot;error&quot;, &quot;error_description&quot;, and &quot;error_uri&quot; attributes <bcp14>MUST NOT</bcp14>
appear more than once.</t>
      <t indent="0" pn="section-3-8">Values for the &quot;scope&quot; attribute (specified in Appendix A.4 of
<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST NOT</bcp14> include characters outside the set %x21 / %x23-5B
/ %x5D-7E for representing scope values and %x20 for delimiters
between scope values.  Values for the &quot;error&quot; and &quot;error_description&quot;
attributes (specified in Appendixes A.7 and A.8 of <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST
NOT</bcp14> include characters outside the set %x20-21 / %x23-5B / %x5D-7E.
Values for the &quot;error_uri&quot; attribute (specified in Appendix A.9 of
<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST</bcp14> conform to the URI-reference syntax and thus <bcp14>MUST NOT</bcp14>
include characters outside the set %x21 / %x23-5B / %x5D-7E.</t>
      <t indent="0" pn="section-3-9">For example, in response to a protected resource request without
authentication:</t>
      <t indent="0" pn="section-3-10"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      <t indent="0" pn="section-3-11">And in response to a protected resource request with an
authentication attempt using an expired access token:</t>
      <t indent="0" pn="section-3-12"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example",
                    error="invalid_token",
                    error_description="The access token expired"
]]></artwork>
</t>
      <section anchor="error-codes" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-error-codes">Error Codes</name>
        <t indent="0" pn="section-3.1-1">When a request fails, the resource server responds using the
appropriate HTTP status code (typically, 400, 401, 403, or 405) and
includes one of the following error codes in the response:</t>
        <t indent="0" pn="section-3.1-2">invalid_request
      The request is missing a required parameter, includes an
      unsupported parameter or parameter value, repeats the same
      parameter, uses more than one method for including an access
      token, or is otherwise malformed.  The resource server <bcp14>SHOULD</bcp14>
      respond with the HTTP 400 (Bad Request) status code.</t>
        <t indent="0" pn="section-3.1-3">invalid_token
      The access token provided is expired, revoked, malformed, or
      invalid for other reasons.  The resource <bcp14>SHOULD</bcp14> respond with
      the HTTP 401 (Unauthorized) status code.  The client <bcp14>MAY</bcp14>
      request a new access token and retry the protected resource
      request.</t>
        <t indent="0" pn="section-3.1-4">insufficient_scope
      The request requires higher privileges than provided by the
      access token.  The resource server <bcp14>SHOULD</bcp14> respond with the HTTP
      403 (Forbidden) status code and <bcp14>MAY</bcp14> include the &quot;scope&quot;
      attribute with the scope necessary to access the protected
      resource.</t>
        <t indent="0" pn="section-3.1-5">If the request lacks any authentication information (e.g., the client
was unaware that authentication is necessary or attempted using an
unsupported authentication method), the resource server <bcp14>SHOULD NOT</bcp14>
include an error code or other error information.</t>
        <t indent="0" pn="section-3.1-6">For example:</t>
        <t indent="0" pn="section-3.1-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      </section>
    </section>
    <section anchor="example-access-token-response" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-example-access-token-response">Example Access Token Response</name>
      <t indent="0" pn="section-4-1">Typically, a bearer token is returned to the client as part of an
OAuth 2.0 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/> access token response.  An example of such a
response is:</t>
      <t indent="0" pn="section-4-2"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json;charset=UTF-8
  Cache-Control: no-store
  Pragma: no-cache
]]></artwork>
</t>
      <t indent="0" pn="section-4-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  {
    "access_token":"mF_9.B5f-4.1JqM",
    "token_type":"Bearer",
    "expires_in":3600,
    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA"
  }
]]></artwork>
</t>
    </section>
    <section anchor="security-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-5-1">This section describes the relevant security threats regarding token
handling when using bearer tokens and describes how to mitigate these
threats.</t>
      <section anchor="security-threats" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-security-threats">Security Threats</name>
        <t indent="0" pn="section-5.1-1">The following list presents several common threats against protocols
utilizing some form of tokens.  This list of threats is based on NIST
Special Publication 800-63 <xref target="NIST800-63" format="default" sectionFormat="of" derivedContent="NIST800-63"/>.  Since this document builds
on the OAuth 2.0 Authorization specification <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, we exclude a
discussion of threats that are described there or in related
documents.</t>
        <t indent="0" pn="section-5.1-2">Token manufacture/modification:  An attacker may generate a bogus
   token or modify the token contents (such as the authentication or
   attribute statements) of an existing token, causing the resource
   server to grant inappropriate access to the client.  For example,
   an attacker may modify the token to extend the validity period; a
   malicious client may modify the assertion to gain access to
   information that they should not be able to view.</t>
        <t indent="0" pn="section-5.1-3">Token disclosure:  Tokens may contain authentication and attribute
   statements that include sensitive information.</t>
        <t indent="0" pn="section-5.1-4">Token redirect:  An attacker uses a token generated for consumption
   by one resource server to gain access to a different resource
   server that mistakenly believes the token to be for it.</t>
        <t indent="0" pn="section-5.1-5">Token replay:  An attacker attempts to use a token that has already
   been used with that resource server in the past.</t>
      </section>
      <section anchor="threat-mitigation" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-threat-mitigation">Threat Mitigation</name>
        <t indent="0" pn="section-5.2-1">A large range of threats can be mitigated by protecting the contents
of the token by using a digital signature or a Message Authentication
Code (MAC).  Alternatively, a bearer token can contain a reference to
authorization information, rather than encoding the information
directly.  Such references <bcp14>MUST</bcp14> be infeasible for an attacker to
guess; using a reference may require an extra interaction between a
server and the token issuer to resolve the reference to the
authorization information.  The mechanics of such an interaction are
not defined by this specification.</t>
        <t indent="0" pn="section-5.2-2">This document does not specify the encoding or the contents of the
token; hence, detailed recommendations about the means of
guaranteeing token integrity protection are outside the scope of this
document.  The token integrity protection <bcp14>MUST</bcp14> be sufficient to
prevent the token from being modified.</t>
        <t indent="0" pn="section-5.2-3">To deal with token redirect, it is important for the authorization
server to include the identity of the intended recipients (the
audience), typically a single resource server (or a list of resource
servers), in the token.  Restricting the use of the token to a
specific scope is also <bcp14>RECOMMENDED</bcp14>.</t>
        <t indent="0" pn="section-5.2-4">The authorization server <bcp14>MUST</bcp14> implement TLS.  Which version(s) ought
to be implemented will vary over time and will depend on the
widespread deployment and known security vulnerabilities at the time
of implementation.  At the time of this writing, TLS version 1.2
<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/> is the most recent version, but it has very limited actual
deployment and might not be readily available in implementation
toolkits.  TLS version 1.0 <xref target="RFC2246" format="default" sectionFormat="of" derivedContent="RFC2246"/> is the most widely deployed
version and will give the broadest interoperability.</t>
        <t indent="0" pn="section-5.2-5">To protect against token disclosure, confidentiality protection <bcp14>MUST</bcp14>
be applied using TLS <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/> with a ciphersuite that provides
confidentiality and integrity protection.  This requires that the
communication interaction between the client and the authorization
server, as well as the interaction between the client and the
resource server, utilize confidentiality and integrity protection.
Since TLS is mandatory to implement and to use with this
specification, it is the preferred approach for preventing token
disclosure via the communication channel.  For those cases where the
client is prevented from observing the contents of the token, token
encryption <bcp14>MUST</bcp14> be applied in addition to the usage of TLS
protection.  As a further defense against token disclosure, the
client <bcp14>MUST</bcp14> validate the TLS certificate chain when making requests
to protected resources, including checking the Certificate Revocation
List (CRL) <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.</t>
        <t indent="0" pn="section-5.2-6">Cookies are typically transmitted in the clear.  Thus, any
information contained in them is at risk of disclosure.  Therefore,
bearer tokens <bcp14>MUST NOT</bcp14> be stored in cookies that can be sent in the
clear.  See &quot;HTTP State Management Mechanism&quot; <xref target="RFC6265" format="default" sectionFormat="of" derivedContent="RFC6265"/> for security
considerations about cookies.</t>
        <t indent="0" pn="section-5.2-7">In some deployments, including those utilizing load balancers, the
TLS connection to the resource server terminates prior to the actual
server that provides the resource.  This could leave the token
unprotected between the front-end server where the TLS connection
terminates and the back-end server that provides the resource.  In
such deployments, sufficient measures <bcp14>MUST</bcp14> be employed to ensure
confidentiality of the token between the front-end and back-end
servers; encryption of the token is one such possible measure.</t>
        <t indent="0" pn="section-5.2-8">To deal with token capture and replay, the following recommendations
are made: First, the lifetime of the token <bcp14>MUST</bcp14> be limited; one means
of achieving this is by putting a validity time field inside the
protected part of the token.  Note that using short-lived (one hour
or less) tokens reduces the impact of them being leaked.  Second,
confidentiality protection of the exchanges between the client and
the authorization server and between the client and the resource
server <bcp14>MUST</bcp14> be applied.  As a consequence, no eavesdropper along the
communication path is able to observe the token exchange.
Consequently, such an on-path adversary cannot replay the token.
Furthermore, when presenting the token to a resource server, the
client <bcp14>MUST</bcp14> verify the identity of that resource server, as per
Section 3.1 of &quot;HTTP Over TLS&quot; <xref target="RFC2818" format="default" sectionFormat="of" derivedContent="RFC2818"/>.  Note that the client <bcp14>MUST</bcp14>
validate the TLS certificate chain when making these requests to
protected resources.  Presenting the token to an unauthenticated and
unauthorized resource server or failing to validate the certificate
chain will allow adversaries to steal the token and gain unauthorized
access to protected resources.</t>
      </section>
      <section anchor="summary-of-recommendations" numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-summary-of-recommendations">Summary of Recommendations</name>
        <t indent="0" pn="section-5.3-1">Safeguard bearer tokens:  Client implementations <bcp14>MUST</bcp14> ensure that
   bearer tokens are not leaked to unintended parties, as they will
   be able to use them to gain access to protected resources.  This
   is the primary security consideration when using bearer tokens and
   underlies all the more specific recommendations that follow.</t>
        <t indent="0" pn="section-5.3-2">Validate TLS certificate chains:  The client <bcp14>MUST</bcp14> validate the TLS
   certificate chain when making requests to protected resources.
   Failing to do so may enable DNS hijacking attacks to steal the
   token and gain unintended access.</t>
        <t indent="0" pn="section-5.3-3">Always use TLS (https):  Clients <bcp14>MUST</bcp14> always use TLS <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>
   (https) or equivalent transport security when making requests with
   bearer tokens.  Failing to do so exposes the token to numerous
   attacks that could give attackers unintended access.</t>
        <t indent="0" pn="section-5.3-4">Don't store bearer tokens in cookies:  Implementations <bcp14>MUST NOT</bcp14> store
   bearer tokens within cookies that can be sent in the clear (which
   is the default transmission mode for cookies).  Implementations
   that do store bearer tokens in cookies <bcp14>MUST</bcp14> take precautions
   against cross-site request forgery.</t>
        <t indent="0" pn="section-5.3-5">Issue short-lived bearer tokens:  Token servers <bcp14>SHOULD</bcp14> issue
   short-lived (one hour or less) bearer tokens, particularly when
   issuing tokens to clients that run within a web browser or other
   environments where information leakage may occur.  Using
   short-lived bearer tokens can reduce the impact of them being
   leaked.</t>
        <t indent="0" pn="section-5.3-6">Issue scoped bearer tokens:  Token servers <bcp14>SHOULD</bcp14> issue bearer tokens
   that contain an audience restriction, scoping their use to the
   intended relying party or set of relying parties.</t>
        <t indent="0" pn="section-5.3-7">Don't pass bearer tokens in page URLs:  Bearer tokens <bcp14>SHOULD NOT</bcp14> be
   passed in page URLs (for example, as query string parameters).
   Instead, bearer tokens <bcp14>SHOULD</bcp14> be passed in HTTP message headers or
   message bodies for which confidentiality measures are taken.
   Browsers, web servers, and other software may not adequately
   secure URLs in the browser history, web server logs, and other
   data structures.  If bearer tokens are passed in page URLs,
   attackers might be able to steal them from the history data, logs,
   or other unsecured locations.</t>
      </section>
    </section>
    <section anchor="iana-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="oauth-access-token-type-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-oauth-access-token-type-registration">OAuth Access Token Type Registration</name>
        <t indent="0" pn="section-6.1-1">This specification registers the following access token type in the
OAuth Access Token Types registry defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <section anchor="the-&quot;bearer&quot;-oauth-access-token-type" numbered="true" removeInRFC="false" toc="include" pn="section-6.1.1">
          <name slugifiedName="name-the-&quot;bearer&quot;-oauth-access-token-type">The &quot;Bearer&quot; OAuth Access Token Type</name>
          <t indent="0" pn="section-6.1.1-1">Type name:
   Bearer</t>
          <t indent="0" pn="section-6.1.1-2">Additional Token Endpoint Response Parameters:
   (none)</t>
          <t indent="0" pn="section-6.1.1-3">HTTP Authentication Scheme(s):
   Bearer</t>
          <t indent="0" pn="section-6.1.1-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.1.1-5">Specification document(s):
   RFC 6750</t>
        </section>
      </section>
      <section anchor="oauth-extensions-error-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-oauth-extensions-error-registration">OAuth Extensions Error Registration</name>
        <t indent="0" pn="section-6.2-1">This specification registers the following error values in the OAuth
Extensions Error registry defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <section anchor="the-&quot;invalid_request&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.1">
          <name slugifiedName="name-the-&quot;invalid_request&quot;-error-value">The &quot;invalid_request&quot; Error Value</name>
          <t indent="0" pn="section-6.2.1-1">Error name:
   invalid_request</t>
          <t indent="0" pn="section-6.2.1-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.1-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.1-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.1-5">Specification document(s):
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;invalid_token&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.2">
          <name slugifiedName="name-the-&quot;invalid_token&quot;-error-value">The &quot;invalid_token&quot; Error Value</name>
          <t indent="0" pn="section-6.2.2-1">Error name:
   invalid_token</t>
          <t indent="0" pn="section-6.2.2-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.2-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.2-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.2-5">Specification document(s):
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;insufficient_scope&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.3">
          <name slugifiedName="name-the-&quot;insufficient_scope&quot;-error-value">The &quot;insufficient_scope&quot; Error Value</name>
          <t indent="0" pn="section-6.2.3-1">Error name:
   insufficient_scope</t>
          <t indent="0" pn="section-6.2.3-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.3-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.3-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.3-5">Specification document(s):
   RFC 6750</t>
        </section>
      </section>
    </section>
  </middle>
  <back>
    <references pn="section-7">
      <name slugifiedName="name-references">References</name>
      <references pn="section-7.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <date year="1997" month="March"/>
          </front>
          <seriesInfo name="BCP">14</seriesInfo>
          <seriesInfo name="RFC">2119</seriesInfo>
        </reference>
        <reference anchor="RFC2246" quoteTitle="true" derivedAnchor="RFC2246">
          <front>
            <title>The TLS Protocol Version 1.0</title>
            <date year="1999" month="January"/>
          </front>
          <seriesInfo name="RFC">2246</seriesInfo>
        </reference>
        <reference anchor="RFC2616" quoteTitle="true" derivedAnchor="RFC2616">
          <front>
            <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2616</seriesInfo>
        </reference>
        <reference anchor="RFC2617" quoteTitle="true" derivedAnchor="RFC2617">
          <front>
            <title>HTTP Authentication: Basic and Digest Access Authentication</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2617</seriesInfo>
        </reference>
        <reference anchor="RFC2818" quoteTitle="true" derivedAnchor="RFC2818">
          <front>
            <title>HTTP Over TLS</title>
            <date year="2000" month="May"/>
          </front>
          <seriesInfo name="RFC">2818</seriesInfo>
        </reference>
        <reference anchor="RFC3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <date year="2005" month="January"/>
          </front>
          <seriesInfo name="STD">66</seriesInfo>
          <seriesInfo name="RFC">3986</seriesInfo>
        </reference>
        <reference anchor="RFC5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <date year="2008" month="January"/>
          </front>
          <seriesInfo name="STD">68</seriesInfo>
          <seriesInfo name="RFC">5234</seriesInfo>
        </reference>
        <reference anchor="RFC5246" quoteTitle="true" derivedAnchor="RFC5246">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
            <date year="2008" month="August"/>
          </front>
          <seriesInfo name="RFC">5246</seriesInfo>
        </reference>
        <reference anchor="RFC5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <date year="2008" month="May"/>
          </front>
          <seriesInfo name="RFC">5280</seriesInfo>
        </reference>
        <reference anchor="RFC6265" quoteTitle="true" derivedAnchor="RFC6265">
          <front>
            <title>HTTP State Management Mechanism</title>
            <date year="2011" month="April"/>
          </front>
          <seriesInfo name="RFC">6265</seriesInfo>
        </reference>
        <reference anchor="RFC6749" quoteTitle="true" derivedAnchor="RFC6749">
          <front>
            <title>The OAuth 2.0 Authorization Framework</title>
            <date year="2012" month="October"/>
          </front>
          <seriesInfo name="RFC">6749</seriesInfo>
        </reference>
        <reference anchor="USASCII" quoteTitle="true" derivedAnchor="USASCII">
          <front>
            <title>Coded Character Set -- 7-bit American Standard Code for Information Interchange</title>
            <date year="1986"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-html401-19991224" target="http://www.w3.org/TR/1999/REC-html401-19991224" quoteTitle="true" derivedAnchor="W3C.REC-html401-19991224">
          <front>
            <title>HTML 4.01 Specification</title>
            <date year="1999" month="December"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-webarch-20041215" target="http://www.w3.org/TR/2004/REC-webarch-20041215" quoteTitle="true" derivedAnchor="W3C.REC-webarch-20041215">
          <front>
            <title>Architecture of the World Wide Web, Volume One</title>
            <date year="2004" month="December"/>
          </front>
        </reference>
      </references>
      <references pn="section-7.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="HTTP-AUTH" quoteTitle="true" derivedAnchor="HTTP-AUTH">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
            <date year="2012" month="October"/>
          </front>
        </reference>
        <reference anchor="NIST800-63" target="http://csrc.nist.gov/publications/" quoteTitle="true" derivedAnchor="NIST800-63">
          <front>
            <title>NIST Special Publication 800-63-1, INFORMATION SECURITY</title>
            <date year="2011" month="December"/>
          </front>
        </reference>
        <reference anchor="OMAP" target="http://www.oatc.us/Standards/Download.aspx" quoteTitle="true" derivedAnchor="OMAP">
          <front>
            <title>Online Multimedia Authorization Protocol: An Industry Standard for Authorized Access to Internet Multimedia Resources</title>
            <date year="2012" month="April"/>
          </front>
        </reference>
        <reference anchor="OpenID.Messages" target="http://openid.net/specs/ openid-connect-messages-1_0.html" quoteTitle="true" derivedAnchor="OpenID.Messages">
          <front>
            <title>OpenID Connect Messages 1.0</title>
            <date year="2012" month="June"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="acknowledgements" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.a-1">The following people contributed to preliminary versions of this
document: Blaine Cook (BT), Brian Eaton (Google), Yaron Y. Goland
(Microsoft), Brent Goldman (Facebook), Raffi Krikorian (Twitter),
Luke Shepard (Facebook), and Allen Tom (Yahoo!).  The content and
concepts within are a product of the OAuth community, the Web
Resource Authorization Profiles (WRAP) community, and the OAuth
Working Group.  David Recordon created a preliminary version of this
specification based upon an early draft of the specification that
evolved into OAuth 2.0 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.  Michael B. Jones in turn created
the first version (00) of this specification using portions of
David's preliminary document and edited all subsequent versions.</t>
      <t indent="0" pn="section-appendix.a-2">The OAuth Working Group has dozens of very active contributors who
proposed ideas and wording for this document, including Michael
Adams, Amanda Anganes, Andrew Arnott, Derek Atkins, Dirk Balfanz,
John Bradley, Brian Campbell, Francisco Corella, Leah Culver, Bill de
hOra, Breno de Medeiros, Brian Ellin, Stephen Farrell, Igor Faynberg,
George Fletcher, Tim Freeman, Evan Gilbert, Yaron Y. Goland, Eran
Hammer, Thomas Hardjono, Dick Hardt, Justin Hart, Phil Hunt, John
Kemp, Chasen Le Hara, Barry Leiba, Amos Jeffries, Michael B. Jones,
Torsten Lodderstedt, Paul Madsen, Eve Maler, James Manger, Laurence
Miao, William J. Mills, Chuck Mortimore, Anthony Nadalin, Axel
Nennker, Mark Nottingham, David Recordon, Julian Reschke, Rob
Richards, Justin Richer, Peter Saint-Andre, Nat Sakimura, Rob Sayre,
Marius Scurtescu, Naitik Shah, Justin Smith, Christian Stuebner,
Jeremy Suriel, Doug Tangren, Paul Tarjan, Hannes Tschofenig, Franklin
Tse, Sean Turner, Paul Walker, Shane Weeden, Skylar Woodward, and
Zachary Zeltsan.</t>
    </section>
  </back>
</rfc>
