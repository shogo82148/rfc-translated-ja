<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" category="std" consensus="true" submissionType="IETF" ipr="trust200902" docName="draft-ietf-netconf-trust-anchors-28" number="9641" updates="" obsoletes="" tocInclude="true" symRefs="true" sortRefs="true" xml:lang="en" prepTime="2024-10-10T13:20:50" indexInclude="true" scripts="Common,Latin" tocDepth="3">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-netconf-trust-anchors-28" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9641" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="A YANG Data Model for a Truststore">A YANG Data Model for a Truststore</title>
    <seriesInfo name="RFC" value="9641" stream="IETF"/>
    <author initials="K." surname="Watsen" fullname="Kent Watsen">
      <organization showOnFrontPage="true">Watsen Networks</organization>
      <address>
        <email>kent+ietf@watsen.net</email>
      </address>
    </author>
    <date month="10" year="2024"/>
    <area>OPS</area>
    <workgroup>netconf</workgroup>
    <keyword>IETF</keyword>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">This document presents a YANG module for configuring
          bags of certificates and bags of public keys that can be
          referenced by other data models for trust.  Notifications
          are sent when certificates are about to expire.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9641" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2024 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
              <li pn="section-toc.1-1.1.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relation-to-other-rfcs">Relation to Other RFCs</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-specification-language">Specification Language</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-adherence-to-the-nmda">Adherence to the NMDA</xref></t>
              </li>
              <li pn="section-toc.1-1.1.2.4">
                <t indent="0" pn="section-toc.1-1.1.2.4.1"><xref derivedContent="1.4" format="counter" sectionFormat="of" target="section-1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-conventions">Conventions</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-ietf-truststore-module">The "ietf-truststore" Module</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
              <li pn="section-toc.1-1.2.2.1">
                <t indent="0" pn="section-toc.1-1.2.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-data-model-overview">Data Model Overview</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.2">
                <t indent="0" pn="section-toc.1-1.2.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-usage">Example Usage</xref></t>
              </li>
              <li pn="section-toc.1-1.2.2.3">
                <t indent="0" pn="section-toc.1-1.2.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-yang-module">YANG Module</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-support-for-built-in-trust-">Support for Built-In Trust Anchors</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
              <li pn="section-toc.1-1.4.2.1">
                <t indent="0" pn="section-toc.1-1.4.2.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-of-data-at-rest">Security of Data at Rest</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.2">
                <t indent="0" pn="section-toc.1-1.4.2.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-unconstrained-public-key-us">Unconstrained Public Key Usage</xref></t>
              </li>
              <li pn="section-toc.1-1.4.2.3">
                <t indent="0" pn="section-toc.1-1.4.2.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-considerations-for-the-ietf">Considerations for the "ietf-truststore" YANG Module</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-ietf-xml-registry">The IETF XML Registry</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-yang-module-names-regis">The YANG Module Names Registry</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-address">Author's Address</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">This document presents a YANG 1.1 <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/> module that has
          the following characteristics:
      </t>
      <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-1-2">
        <li pn="section-1-2.1">Provide a central truststore for storing raw public keys and/or certificates.</li>
        <li pn="section-1-2.2">Provide support for storing named bags of raw public keys and/or named bags
            of certificates.</li>
        <li pn="section-1-2.3">Provide types that can be used to reference raw public keys or certificates
            stored in the central truststore.</li>
        <li pn="section-1-2.4">Provide groupings that enable raw public keys and certificates to be
            configured inline or as references to truststore instances.</li>
        <li pn="section-1-2.5">Enable the truststore to be instantiated in other data models, in addition
            to or in lieu of the central truststore instance.</li>
      </ul>
      <section anchor="collective-effort" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-relation-to-other-rfcs">Relation to Other RFCs</name>
        <t indent="0" pn="section-1.1-1">This document presents a YANG module <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/>
            that is part of a collection of RFCs that work together
            to ultimately support the configuration of both the clients
            and servers of both the Network Configuration Protocol (NETCONF) <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> and
            RESTCONF <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.</t>
        <t indent="0" pn="section-1.1-2"> The dependency relationship between the primary YANG groupings
            defined in the various RFCs is presented in the below diagram.
            In some cases, a document may define secondary groupings that
            introduce dependencies not illustrated in the diagram.
            The labels in the diagram are shorthand names for the defining
            RFCs.  The citation references for shorthand names are provided below
            the diagram.</t>
        <t indent="0" pn="section-1.1-3">Please note that the arrows in the diagram point from referencer
            to referenced.  For example, the "crypto-types" RFC does not
            have any dependencies, whilst the "keystore" RFC depends on the
            "crypto-types" RFC.</t>
        <artwork align="left" pn="section-1.1-4">
                               crypto-types
                                 ^      ^
                                /        \
                               /          \
                      truststore         keystore
                       ^     ^             ^  ^
                       |     +---------+   |  |
                       |               |   |  |
                       |      +------------+  |
tcp-client-server      |     /         |      |
   ^    ^        ssh-client-server     |      |
   |    |           ^            tls-client-server
   |    |           |              ^     ^        http-client-server
   |    |           |              |     |                 ^
   |    |           |        +-----+     +---------+       |
   |    |           |        |                     |       |
   |    +-----------|--------|--------------+      |       |
   |                |        |              |      |       |
   +-----------+    |        |              |      |       |
               |    |        |              |      |       |
               |    |        |              |      |       |
            netconf-client-server       restconf-client-server

</artwork>
        <table align="left" pn="table-1">
          <name slugifiedName="name-label-in-diagram-to-rfc-map">Label in Diagram to RFC Mapping</name>
          <tbody>
            <tr>
              <th align="left" colspan="1" rowspan="1">Label in Diagram</th>
              <th align="left" colspan="1" rowspan="1">Reference</th>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">crypto-types</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9640" format="default" sectionFormat="of" derivedContent="RFC9640"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">truststore</td>
              <td align="left" colspan="1" rowspan="1">
                RFC 9641</td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">keystore</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9642" format="default" sectionFormat="of" derivedContent="RFC9642"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">tcp-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9643" format="default" sectionFormat="of" derivedContent="RFC9643"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">ssh-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9644" format="default" sectionFormat="of" derivedContent="RFC9644"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">tls-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="RFC9645" format="default" sectionFormat="of" derivedContent="RFC9645"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">http-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="I-D.ietf-netconf-http-client-server" format="default" sectionFormat="of" derivedContent="HTTP-CLIENT-SERVER"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">netconf-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="I-D.ietf-netconf-netconf-client-server" format="default" sectionFormat="of" derivedContent="NETCONF-CLIENT-SERVER"/></td>
            </tr>
            <tr>
              <td align="left" colspan="1" rowspan="1">restconf-client-server</td>
              <td align="left" colspan="1" rowspan="1">
                <xref target="I-D.ietf-netconf-restconf-client-server" format="default" sectionFormat="of" derivedContent="RESTCONF-CLIENT-SERVER"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-1.2">
        <name slugifiedName="name-specification-language">Specification Language</name>
        <t indent="0" pn="section-1.2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> 
    when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-1.3">
        <name slugifiedName="name-adherence-to-the-nmda">Adherence to the NMDA</name>
        <t indent="0" pn="section-1.3-1">This document is compliant with the Network Management Datastore Architecture
            (NMDA) <xref target="RFC8342" format="default" sectionFormat="of" derivedContent="RFC8342"/>.  For instance, trust anchors installed
            during manufacturing (e.g., for trusted, well-known services) are expected
            to appear in &lt;operational&gt; (see <xref target="built-ins" format="default" sectionFormat="of" derivedContent="Section 3"/>).</t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-1.4">
        <name slugifiedName="name-conventions">Conventions</name>
        <t indent="0" pn="section-1.4-1">Various examples in this document use "BASE64VALUE=" as a
            placeholder value for binary data that has been base64
            encoded (see <xref target="RFC7950" sectionFormat="of" section="9.8" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7950#section-9.8" derivedContent="RFC7950"/>).  This
            placeholder value is used because real base64-encoded structures
            are often many lines long and hence distracting to the example
        being presented.</t>
        <t indent="0" pn="section-1.4-2"> Various examples in this document use the XML
  <xref target="W3C.REC-xml-20081126" format="default" sectionFormat="of" derivedContent="W3C.REC-xml-20081126"/> encoding. Other encodings, such as JSON <xref target="RFC8259" format="default" sectionFormat="of" derivedContent="RFC8259"/>,
	could alternatively be used.</t>
        <t indent="0" pn="section-1.4-3">Various examples in this document contain long lines that may be folded,
  as described in <xref target="RFC8792" format="default" sectionFormat="of" derivedContent="RFC8792"/>.</t>
        <t indent="0" pn="section-1.4-4">This document uses the adjective "central" with the word "truststore" 
            to refer to the top-level instance of the "truststore-grouping" grouping when 
            the "central-truststore-supported" feature is enabled.  Please be 
            aware that consuming YANG modules <bcp14>MAY</bcp14> instantiate the "truststore-grouping" grouping
            in other locations.  All such other instances are not the "central" 
            instance.</t>
      </section>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-the-ietf-truststore-module">The "ietf-truststore" Module</name>
      <t indent="0" pn="section-2-1">This section defines a YANG 1.1 <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/> module called
          "ietf-truststore".  A high-level overview of the module is provided in
          <xref target="truststore-verview" format="default" sectionFormat="of" derivedContent="Section 2.1"/>. Examples illustrating the module's use
          are provided in <xref target="truststore-examples" format="default" sectionFormat="of" derivedContent="Section 2.2"/> ("Example Usage"). The YANG
          module itself is defined in <xref target="truststore-yang-module" format="default" sectionFormat="of" derivedContent="Section 2.3"/>.</t>
      <section anchor="truststore-verview" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-data-model-overview">Data Model Overview</name>
        <t indent="0" pn="section-2.1-1">This section provides an overview of the "ietf-truststore" module
            in terms of its features, typedefs, groupings, and protocol-accessible
            nodes.</t>
        <section anchor="features" toc="exclude" numbered="true" removeInRFC="false" pn="section-2.1.1">
          <name slugifiedName="name-features">Features</name>
          <t indent="0" pn="section-2.1.1-1">The following diagram lists all the "feature" statements
              defined in the "ietf-truststore" module:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.1.1-2">
Features:
  +-- central-truststore-supported
  +-- inline-definitions-supported
  +-- certificates
  +-- public-keys
</sourcecode>
          <t indent="0" pn="section-2.1.1-3">The diagram above uses syntax that is similar to but not
                defined in <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>.</t>
        </section>
        <section anchor="typedefs" toc="exclude" numbered="true" removeInRFC="false" pn="section-2.1.2">
          <name slugifiedName="name-typedefs">Typedefs</name>
          <t indent="0" pn="section-2.1.2-1">The following diagram lists the "typedef" statements defined in
              the "ietf-truststore" module:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.1.2-2">
Typedefs:
  leafref
    +-- central-certificate-bag-ref
    +-- central-certificate-ref
    +-- central-public-key-bag-ref
    +-- central-public-key-ref
</sourcecode>
          <t indent="0" pn="section-2.1.2-3">The diagram above uses syntax that is similar to but not
                defined in <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>.</t>
          <t indent="0" pn="section-2.1.2-4">Comments:</t>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.2-5">
            <li pn="section-2.1.2-5.1">All the typedefs defined in the "ietf-truststore" module
                extend the base "leafref" type defined in <xref target="RFC7950" format="default" sectionFormat="of" derivedContent="RFC7950"/>.</li>
            <li pn="section-2.1.2-5.2">The leafrefs refer to certificates, public keys, and bags
                in the central truststore when this module is implemented.</li>
            <li pn="section-2.1.2-5.3">These typedefs are provided to aid consuming
                modules that import the "ietf-truststore" module.</li>
          </ul>
        </section>
        <section toc="exclude" numbered="true" removeInRFC="false" pn="section-2.1.3">
          <name slugifiedName="name-groupings">Groupings</name>
          <t indent="0" pn="section-2.1.3-1">The "ietf-truststore" module defines the following "grouping" statements:</t>
          <ul spacing="normal" bare="false" empty="false" indent="3" pn="section-2.1.3-2">
            <li pn="section-2.1.3-2.1">central-certificate-ref-grouping</li>
            <li pn="section-2.1.3-2.2">central-public-key-ref-grouping</li>
            <li pn="section-2.1.3-2.3">inline-or-truststore-certs-grouping</li>
            <li pn="section-2.1.3-2.4">inline-or-truststore-public-keys-grouping</li>
            <li pn="section-2.1.3-2.5">truststore-grouping</li>
          </ul>
          <t indent="0" pn="section-2.1.3-3">Each of these groupings are presented in the following subsections.</t>
          <section anchor="central-certificate-ref-grouping" numbered="true" removeInRFC="false" toc="exclude" pn="section-2.1.3.1">
            <name slugifiedName="name-the-central-certificate-ref">The "central-certificate-ref-grouping" Grouping</name>
            <t indent="0" pn="section-2.1.3.1-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> illustrates the
                "central-certificate-ref-grouping" grouping:</t>
            <sourcecode type="yangtree" markers="false" pn="section-2.1.3.1-2">
  grouping central-certificate-ref-grouping:
    +-- certificate-bag?   ts:central-certificate-bag-ref
    |       {central-truststore-supported,certificates}?
    +-- certificate?       ts:central-certificate-ref
            {central-truststore-supported,certificates}?
</sourcecode>
            <t indent="0" pn="section-2.1.3.1-3">Comments:</t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.3.1-4">
              <li pn="section-2.1.3.1-4.1">The "central-certificate-ref-grouping" grouping is provided
                  solely as a convenience to consuming modules that wish to
                  enable the configuration of a reference to a certificate
                  in a certificate-bag in the truststore.</li>
              <li pn="section-2.1.3.1-4.2">The "certificate-bag" leaf uses the "central-certificate-bag-ref"
                  typedef defined in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
              <li pn="section-2.1.3.1-4.3">The "certificate" leaf uses the "central-certificate-ref"
                  typedef defined in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
            </ul>
          </section>
          <section anchor="central-public-key-ref-grouping" numbered="true" removeInRFC="false" toc="exclude" pn="section-2.1.3.2">
            <name slugifiedName="name-the-central-public-key-ref-">The "central-public-key-ref-grouping" Grouping</name>
            <t indent="0" pn="section-2.1.3.2-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> illustrates the
                "central-public-key-ref-grouping" grouping:</t>
            <sourcecode type="yangtree" markers="false" pn="section-2.1.3.2-2">
  grouping central-public-key-ref-grouping:
    +-- public-key-bag?   ts:central-public-key-bag-ref
    |       {central-truststore-supported,public-keys}?
    +-- public-key?       ts:central-public-key-ref
            {central-truststore-supported,public-keys}?
</sourcecode>
            <t indent="0" pn="section-2.1.3.2-3">Comments:</t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.3.2-4">
              <li pn="section-2.1.3.2-4.1">The "central-public-key-ref-grouping" grouping is provided
                  solely as a convenience to consuming modules that wish to
                  enable the configuration of a reference to a public-key
              in a public-key-bag in the truststore.</li>
              <li pn="section-2.1.3.2-4.2">The "public-key-bag" leaf uses the "central-public-key-bag-ref"
                  typedef defined in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
              <li pn="section-2.1.3.2-4.3">The "public-key" leaf uses the "central-public-key-ref"
                  typedef defined in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
            </ul>
          </section>
          <section anchor="inline-or-truststore-certs-grouping" numbered="true" removeInRFC="false" toc="exclude" pn="section-2.1.3.3">
            <name slugifiedName="name-the-inline-or-truststore-ce">The "inline-or-truststore-certs-grouping" Grouping</name>
            <t indent="0" pn="section-2.1.3.3-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> illustrates the
                "inline-or-truststore-certs-grouping" grouping:</t>
            <sourcecode type="yangtree" markers="false" pn="section-2.1.3.3-2">
  grouping inline-or-truststore-certs-grouping:
    +-- (inline-or-truststore)
       +--:(inline) {inline-definitions-supported}?
       |  +-- inline-definition
       |     +-- certificate* [name]
       |        +-- name                             string
       |        +---u ct:trust-anchor-cert-grouping
       +--:(central-truststore)
                {central-truststore-supported,certificates}?
          +-- central-truststore-reference?
                  ts:central-certificate-bag-ref
</sourcecode>
            <t indent="0" pn="section-2.1.3.3-3">Comments:</t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.3.3-4">
              <li pn="section-2.1.3.3-4.1">The "inline-or-truststore-certs-grouping" grouping is provided
                  solely as a convenience to consuming modules that wish to offer
                  an option whether a bag of certificates can be defined inline
                  or as a reference to a bag in the truststore.</li>
              <li pn="section-2.1.3.3-4.2">A "choice" statement is used to expose the various options.
                  Each option is enabled by a "feature" statement.  Additional
                  "case" statements <bcp14>MAY</bcp14> be augmented in if, e.g., there is a
                  need to reference a bag in an alternate location.</li>
              <li pn="section-2.1.3.3-4.3">For the "inline-definition" option, the "certificate" node
                  uses the "trust-anchor-cert-grouping" grouping discussed in
              <xref section="2.1.4.8" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-2.1.4.8" derivedContent="RFC9640"/>.</li>
              <li pn="section-2.1.3.3-4.4">For the "central-truststore" option, the "central-truststore-reference" node is an
                  instance of the "central-certificate-bag-ref" discussed in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
            </ul>
          </section>
          <section anchor="inline-or-truststore-public-keys-grouping" numbered="true" removeInRFC="false" toc="exclude" pn="section-2.1.3.4">
            <name slugifiedName="name-the-inline-or-truststore-pu">The "inline-or-truststore-public-keys-grouping" Grouping</name>
            <t indent="0" pn="section-2.1.3.4-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> illustrates the
                "inline-or-truststore-public-keys-grouping" grouping:</t>
            <sourcecode type="yangtree" markers="false" pn="section-2.1.3.4-2">
  grouping inline-or-truststore-public-keys-grouping:
    +-- (inline-or-truststore)
       +--:(inline) {inline-definitions-supported}?
       |  +-- inline-definition
       |     +-- public-key* [name]
       |        +-- name                      string
       |        +---u ct:public-key-grouping
       +--:(central-truststore)
                {central-truststore-supported,public-keys}?
          +-- central-truststore-reference?
                  ts:central-public-key-bag-ref
</sourcecode>
            <t indent="0" pn="section-2.1.3.4-3">Comments:</t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.3.4-4">
              <li pn="section-2.1.3.4-4.1">The "inline-or-truststore-public-keys-grouping" grouping is provided
                  solely as a convenience to consuming modules that wish to offer
                  an option whether a bag of public keys can be defined inline
                  or as a reference to a bag in the truststore.</li>
              <li pn="section-2.1.3.4-4.2">A "choice" statement is used to expose the various options.
                  Each option is enabled by a "feature" statement.  Additional
                  "case" statements <bcp14>MAY</bcp14> be augmented in if, e.g., there is a
                  need to reference a bag in an alternate location.</li>
              <li pn="section-2.1.3.4-4.3">For the "inline-definition" option, the "public-key" node uses the
                  "public-key-grouping" grouping discussed in <xref section="2.1.4.4" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-2.1.4.4" derivedContent="RFC9640"/>.</li>
              <li pn="section-2.1.3.4-4.4">For the "central-truststore" option, the "central-truststore-reference" is an
                  instance of the "certificate-bag-ref" discussed in <xref target="typedefs" format="default" sectionFormat="of" derivedContent="Section 2.1.2"/>.</li>
            </ul>
          </section>
          <section anchor="truststore-grouping" numbered="true" removeInRFC="false" toc="exclude" pn="section-2.1.3.5">
            <name slugifiedName="name-the-truststore-grouping-gro">The "truststore-grouping" Grouping</name>
            <t indent="0" pn="section-2.1.3.5-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> illustrates the
                "truststore-grouping" grouping:</t>
            <sourcecode type="yangtree" markers="false" pn="section-2.1.3.5-2">
  grouping truststore-grouping:
    +-- certificate-bags {certificates}?
    |  +-- certificate-bag* [name]
    |     +-- name           string
    |     +-- description?   string
    |     +-- certificate* [name]
    |        +-- name                             string
    |        +---u ct:trust-anchor-cert-grouping
    +-- public-key-bags {public-keys}?
       +-- public-key-bag* [name]
          +-- name           string
          +-- description?   string
          +-- public-key* [name]
             +-- name                      string
             +---u ct:public-key-grouping
</sourcecode>
            <t indent="0" pn="section-2.1.3.5-3">Comments:</t>
            <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.3.5-4">
              <li pn="section-2.1.3.5-4.1">The "truststore-grouping" grouping defines a truststore instance
                  as being composed of certificates and/or public keys, both of which
                  are enabled by "feature" statements.  The structures supporting
                  certificates and public keys are essentially the same, having an
                  outer list of "bags" containing an inner list of objects
                  (i.e., certificates or public keys).  The bags enable trust anchors
                  serving a common purpose to be grouped and referenced together.</li>
              <li pn="section-2.1.3.5-4.2">For certificates, each certificate is defined by the
                  "trust-anchor-cert-grouping" grouping (<xref section="2.1.4.8" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-2.1.4.8" derivedContent="RFC9640"/>).  The "cert-data"
                  node is a Cryptographic Message Syntax (CMS) structure that can be composed of a chain of one or
                  more certificates.  Additionally, the "certificate-expiration"
                  notification enables the server to alert clients when certificates
                  are nearing expiration or have already expired.</li>
              <li pn="section-2.1.3.5-4.3">For public keys, each public key is defined by the
                  "public-key-grouping" grouping (<xref section="2.1.4.4" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-2.1.4.4" derivedContent="RFC9640"/>).  The "public-key"
                  node can be one of any number of structures specified by the
                  "public-key-format" identity node.</li>
            </ul>
          </section>
        </section>
        <section anchor="proto-access-nodes" toc="exclude" numbered="true" removeInRFC="false" pn="section-2.1.4">
          <name slugifiedName="name-protocol-accessible-nodes">Protocol-Accessible Nodes</name>
          <t indent="0" pn="section-2.1.4-1">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> lists all the
              protocol-accessible nodes defined in the "ietf-truststore" module without
              expanding the "grouping" statements:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.1.4-2">
module: ietf-truststore
  +--rw truststore {central-truststore-supported}?
     +---u truststore-grouping
</sourcecode>
          <t indent="0" pn="section-2.1.4-3">The following tree diagram <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/> lists all the
              protocol-accessible nodes defined in the "ietf-truststore" module with
              all "grouping" statements expanded, enabling the truststore's full
              structure to be seen:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.1.4-4">
module: ietf-truststore
  +--rw truststore {central-truststore-supported}?
     +--rw certificate-bags {certificates}?
     |  +--rw certificate-bag* [name]
     |     +--rw name           string
     |     +--rw description?   string
     |     +--rw certificate* [name]
     |        +--rw name                      string
     |        +--rw cert-data                 trust-anchor-cert-cms
     |        +---n certificate-expiration
     |                {certificate-expiration-notification}?
     |           +-- expiration-date    yang:date-and-time
     +--rw public-key-bags {public-keys}?
        +--rw public-key-bag* [name]
           +--rw name           string
           +--rw description?   string
           +--rw public-key* [name]
              +--rw name                 string
              +--rw public-key-format    identityref
              +--rw public-key           binary
</sourcecode>
          <t indent="0" pn="section-2.1.4-5">Comments:</t>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.1.4-6">
            <li pn="section-2.1.4-6.1">Protocol-accessible nodes are those nodes that are accessible
                when the module is "implemented", as described in <xref section="5.6.5" sectionFormat="of" target="RFC7950" format="default" derivedLink="https://rfc-editor.org/rfc/rfc7950#section-5.6.5" derivedContent="RFC7950"/>.</li>
            <li pn="section-2.1.4-6.2">The protocol-accessible nodes for the "ietf-truststore" module
                are instances of the "truststore-grouping" grouping discussed in
                <xref target="truststore-grouping" format="default" sectionFormat="of" derivedContent="Section 2.1.3.5"/>.</li>
            <li pn="section-2.1.4-6.3">The top-level "truststore" node is additionally constrained
                by the "central-truststore-supported" feature.</li>
            <li pn="section-2.1.4-6.4">The "truststore-grouping" grouping is discussed in
                <xref target="truststore-grouping" format="default" sectionFormat="of" derivedContent="Section 2.1.3.5"/>.</li>
            <li pn="section-2.1.4-6.5">The reason for why the "truststore-grouping" grouping exists separate
                from the protocol-accessible nodes definition is to enable
                instances of the truststore to be instantiated in other
                locations, as may be needed or desired by some modules.</li>
          </ul>
        </section>
      </section>
      <section anchor="truststore-examples" numbered="true" removeInRFC="false" toc="include" pn="section-2.2">
        <name slugifiedName="name-example-usage">Example Usage</name>
        <t indent="0" pn="section-2.2-1">The examples in this section are encoded using XML, such as might
            be the case when using the NETCONF protocol. Other encodings <bcp14>MAY</bcp14>
            be used, such as JSON when using the RESTCONF protocol.</t>
        <section anchor="ts-inst" toc="exclude" numbered="true" removeInRFC="false" pn="section-2.2.1">
          <name slugifiedName="name-a-truststore-instance">A Truststore Instance</name>
          <t indent="0" pn="section-2.2.1-1">This section presents an example illustrating trust anchors
              in &lt;intended&gt;, as per <xref target="proto-access-nodes" format="default" sectionFormat="of" derivedContent="Section 2.1.4"/>.
              Please see <xref target="built-ins" format="default" sectionFormat="of" derivedContent="Section 3"/> for an example illustrating
              built-in values in &lt;operational&gt;.</t>
          <t indent="0" pn="section-2.2.1-2">The example contained in this section defines eight bags of trust
              anchors.  There are four certificate-based bags and four public-key-based
              bags.  The following diagram provides an overview of the
              contents in the example:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.2.1-3">
Certificate Bags
  +-- Trust anchor certs for authenticating a set of remote servers
  +-- End entity certs for authenticating a set of remote servers
  +-- Trust anchor certs for authenticating a set of remote clients
  +-- End entity certs for authenticating a set of remote clients

Public Key Bags
  +-- SSH keys to authenticate a set of remote SSH servers
  +-- SSH keys to authenticate a set of remote SSH clients
  +-- Raw public keys to authenticate a set of remote SSH servers
  +-- Raw public keys to authenticate a set of remote SSH clients
</sourcecode>
          <sourcecode type="xml" markers="false" pn="section-2.2.1-4">
=============== NOTE: '\' line wrapping per RFC 8792 ================

&lt;truststore
  xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore"
  xmlns:ct="urn:ietf:params:xml:ns:yang:ietf-crypto-types"&gt;

  &lt;!-- A bag of Certificate Bags --&gt;
  &lt;certificate-bags&gt;

    &lt;!-- Trust Anchor Certs for Authenticating Servers --&gt;
    &lt;certificate-bag&gt;
      &lt;name&gt;trusted-server-ca-certs&lt;/name&gt;
      &lt;description&gt;
        Trust anchors (i.e., CA certs) used to authenticate server
        certificates.  A server certificate is authenticated if its
        end-entity certificate has a chain of trust to one of these
        certificates.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;Server Cert Issuer #1&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Server Cert Issuer #2&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;

    &lt;!-- End Entity Certs for Authenticating Servers --&gt;
    &lt;certificate-bag&gt;
      &lt;name&gt;trusted-server-ee-certs&lt;/name&gt;
      &lt;description&gt;
        Specific end-entity certificates used to authenticate server
        certificates.  A server certificate is authenticated if its
        end-entity certificate is an exact match to one of these
        certificates.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;My Application #1&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;My Application #2&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;

    &lt;!-- Trust Anchor Certs for Authenticating Clients --&gt;
    &lt;certificate-bag&gt;
      &lt;name&gt;trusted-client-ca-certs&lt;/name&gt;
      &lt;description&gt;
        Trust anchors (i.e., CA certs) used to authenticate client
        certificates.  A client certificate is authenticated if its
        end-entity certificate has a chain of trust to one of these
        certificates.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;Client Identity Issuer #1&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Client Identity Issuer #2&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;

    &lt;!-- End Entity Certs for Authenticating Clients --&gt;
    &lt;certificate-bag&gt;
      &lt;name&gt;trusted-client-ee-certs&lt;/name&gt;
      &lt;description&gt;
        Specific end-entity certificates used to authenticate client
        certificates.  A client certificate is authenticated if its
        end-entity certificate is an exact match to one of these
        certificates.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;George Jetson&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Fred Flintstone&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;
  &lt;/certificate-bags&gt;

  &lt;!-- A List of Public Key Bags --&gt;
  &lt;public-key-bags&gt;

    &lt;!-- Public Keys for Authenticating SSH Servers --&gt;
    &lt;public-key-bag&gt;
      &lt;name&gt;trusted-ssh-public-keys&lt;/name&gt;
      &lt;description&gt;
        Specific SSH public keys used to authenticate SSH server
        public keys.  An SSH server public key is authenticated if
        its public key is an exact match to one of these public keys.

        This list of SSH public keys is analogous to OpenSSH's
        "/etc/ssh/ssh_known_hosts" file.
      &lt;/description&gt;
      &lt;public-key&gt;
        &lt;name&gt;corp-fw1&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
      &lt;public-key&gt;
        &lt;name&gt;corp-fw2&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
    &lt;/public-key-bag&gt;

    &lt;!-- SSH Public Keys for Authenticating Application A --&gt;
    &lt;public-key-bag&gt;
      &lt;name&gt;SSH Public Keys for Application A&lt;/name&gt;
      &lt;description&gt;
        SSH public keys used to authenticate application A's SSH
        public keys.  An SSH public key is authenticated if it
        is an exact match to one of these public keys.
      &lt;/description&gt;
      &lt;public-key&gt;
        &lt;name&gt;Application Instance #1&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
      &lt;public-key&gt;
        &lt;name&gt;Application Instance #2&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
    &lt;/public-key-bag&gt;

    &lt;!-- Raw Public Keys for TLS Servers --&gt;
    &lt;public-key-bag&gt;
      &lt;name&gt;Raw Public Keys for TLS Servers&lt;/name&gt;
      &lt;public-key&gt;
        &lt;name&gt;Raw Public Key #1&lt;/name&gt;
        &lt;public-key-format&gt;ct:subject-public-key-info-format&lt;/public\
-key-format&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
      &lt;public-key&gt;
        &lt;name&gt;Raw Public Key #2&lt;/name&gt;
        &lt;public-key-format&gt;ct:subject-public-key-info-format&lt;/public\
-key-format&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
    &lt;/public-key-bag&gt;

    &lt;!-- Raw Public Keys for TLS Clients --&gt;
    &lt;public-key-bag&gt;
      &lt;name&gt;Raw Public Keys for TLS Clients&lt;/name&gt;
      &lt;public-key&gt;
        &lt;name&gt;Raw Public Key #1&lt;/name&gt;
        &lt;public-key-format&gt;ct:subject-public-key-info-format&lt;/public\
-key-format&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
      &lt;public-key&gt;
        &lt;name&gt;Raw Public Key #2&lt;/name&gt;
        &lt;public-key-format&gt;ct:subject-public-key-info-format&lt;/public\
-key-format&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
    &lt;/public-key-bag&gt;
  &lt;/public-key-bags&gt;
&lt;/truststore&gt;
</sourcecode>
        </section>
        <section toc="exclude" numbered="true" removeInRFC="false" pn="section-2.2.2">
          <name slugifiedName="name-a-certificate-expiration-no">A Certificate Expiration Notification</name>
          <t indent="0" pn="section-2.2.2-1">The following example illustrates the "certificate-expiration"
              notification (per <xref section="2.1.4.7" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-2.1.4.7" derivedContent="RFC9640"/>)
          for a certificate configured in the truststore described in <xref target="ts-inst" format="default" sectionFormat="of" derivedContent="Section 2.2.1"/>.</t>
          <sourcecode type="xml" markers="false" pn="section-2.2.2-2">
=============== NOTE: '\' line wrapping per RFC 8792 ================

&lt;notification
  xmlns="urn:ietf:params:xml:ns:netconf:notification:1.0"&gt;
  &lt;eventTime&gt;2018-05-25T00:01:00Z&lt;/eventTime&gt;
  &lt;truststore xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore"&gt;
    &lt;certificate-bags&gt;
      &lt;certificate-bag&gt;
        &lt;name&gt;trusted-client-ee-certs&lt;/name&gt;
        &lt;certificate&gt;
          &lt;name&gt;George Jetson&lt;/name&gt;
          &lt;certificate-expiration&gt;
            &lt;expiration-date&gt;2024-01-05T14:18:53-05:00&lt;/expiration-d\
ate&gt;
          &lt;/certificate-expiration&gt;
        &lt;/certificate&gt;
      &lt;/certificate-bag&gt;
    &lt;/certificate-bags&gt;
  &lt;/truststore&gt;
&lt;/notification&gt;
</sourcecode>
        </section>
        <section toc="exclude" numbered="true" removeInRFC="false" pn="section-2.2.3">
          <name slugifiedName="name-the-inline-or-truststore-gr">The "Inline or Truststore" Groupings</name>
          <t indent="0" pn="section-2.2.3-1">This section illustrates the various "inline-or-truststore" groupings
              defined in the "ietf-truststore" module, specifically the
              "inline-or-truststore-certs-grouping"
              (<xref target="inline-or-truststore-certs-grouping" format="default" sectionFormat="of" derivedContent="Section 2.1.3.3"/>) and
              "inline-or-truststore-public-keys-grouping"
              (<xref target="inline-or-truststore-public-keys-grouping" format="default" sectionFormat="of" derivedContent="Section 2.1.3.4"/>)
              groupings.</t>
          <t indent="0" pn="section-2.2.3-2">These examples assume the existence of an example module called "ex-truststore-usage"
              that has the namespace "https://example.com/ns/example-truststore-usage".</t>
          <t indent="0" pn="section-2.2.3-3">The "ex-truststore-usage" module is first presented using tree diagrams
              <xref target="RFC8340" format="default" sectionFormat="of" derivedContent="RFC8340"/>, followed by an instance example illustrating
              all the "inline-or-truststore" groupings in use, followed by the YANG
              module itself.</t>
          <t indent="0" pn="section-2.2.3-4">The following tree diagram illustrates the "ex-truststore-usage" module without
              expanding the "grouping" statements:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.2.3-5">
module: ex-truststore-usage
  +--rw truststore-usage
     +--rw cert* [name]
     |  +--rw name                                      string
     |  +---u ts:inline-or-truststore-certs-grouping
     +--rw public-key* [name]
        +--rw name                                            string
        +---u ts:inline-or-truststore-public-keys-grouping
</sourcecode>
          <t indent="0" pn="section-2.2.3-6">The following tree diagram illustrates the "ex-truststore-usage"
              module with all "grouping" statements expanded, enabling the
              truststore's full structure to be seen:</t>
          <sourcecode type="yangtree" markers="false" pn="section-2.2.3-7">
module: ex-truststore-usage
  +--rw truststore-usage
     +--rw cert* [name]
     |  +--rw name                                  string
     |  +--rw (inline-or-truststore)
     |     +--:(inline) {inline-definitions-supported}?
     |     |  +--rw inline-definition
     |     |     +--rw certificate* [name]
     |     |        +--rw name                      string
     |     |        +--rw cert-data
     |     |        |       trust-anchor-cert-cms
     |     |        +---n certificate-expiration
     |     |                {certificate-expiration-notification}?
     |     |           +-- expiration-date    yang:date-and-time
     |     +--:(central-truststore)
     |              {central-truststore-supported,certificates}?
     |        +--rw central-truststore-reference?
     |                ts:central-certificate-bag-ref
     +--rw public-key* [name]
        +--rw name                                  string
        +--rw (inline-or-truststore)
           +--:(inline) {inline-definitions-supported}?
           |  +--rw inline-definition
           |     +--rw public-key* [name]
           |        +--rw name                 string
           |        +--rw public-key-format    identityref
           |        +--rw public-key           binary
           +--:(central-truststore)
                    {central-truststore-supported,public-keys}?
              +--rw central-truststore-reference?
                      ts:central-public-key-bag-ref
</sourcecode>
          <t indent="0" pn="section-2.2.3-8">The following example provides two equivalent instances of
              each grouping, the first being a reference to a truststore
              and the second being defined inline.  The instance having
              a reference to a truststore is consistent with the truststore
              defined in <xref target="ts-inst" format="default" sectionFormat="of" derivedContent="Section 2.2.1"/>.  The two instances are
              equivalent, as the inlined instance example contains
              the same values defined by the truststore instance referenced
          by its sibling example.</t>
          <sourcecode type="xml" markers="false" pn="section-2.2.3-9">
=============== NOTE: '\' line wrapping per RFC 8792 ================

&lt;truststore-usage
  xmlns="https://example.com/ns/example-truststore-usage"
  xmlns:ct="urn:ietf:params:xml:ns:yang:ietf-crypto-types"&gt;

  &lt;!-- The following two equivalent examples illustrate   --&gt;
  &lt;!-- the "inline-or-truststore-certs-grouping" grouping: --&gt;

  &lt;cert&gt;
    &lt;name&gt;example 1a&lt;/name&gt;
    &lt;central-truststore-reference&gt;trusted-client-ca-certs&lt;/central-t\
ruststore-reference&gt;
  &lt;/cert&gt;

  &lt;cert&gt;
    &lt;name&gt;example 1b&lt;/name&gt;
    &lt;inline-definition&gt;
      &lt;certificate&gt;
        &lt;name&gt;Client Identity Issuer #1&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Client Identity Issuer #2&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/inline-definition&gt;
  &lt;/cert&gt;


  &lt;!-- The following two equivalent examples illustrate the --&gt;
  &lt;!-- "inline-or-truststore-public-keys-grouping" grouping: --&gt;

  &lt;public-key&gt;
    &lt;name&gt;example 2a&lt;/name&gt;
    &lt;central-truststore-reference&gt;trusted-ssh-public-keys&lt;/central-t\
ruststore-reference&gt;
  &lt;/public-key&gt;

  &lt;public-key&gt;
    &lt;name&gt;example 2b&lt;/name&gt;
    &lt;inline-definition&gt;
      &lt;public-key&gt;
        &lt;name&gt;corp-fw1&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
      &lt;public-key&gt;
        &lt;name&gt;corp-fw2&lt;/name&gt;
        &lt;public-key-format&gt;ct:ssh-public-key-format&lt;/public-key-form\
at&gt;
        &lt;public-key&gt;BASE64VALUE=&lt;/public-key&gt;
      &lt;/public-key&gt;
    &lt;/inline-definition&gt;
  &lt;/public-key&gt;

&lt;/truststore-usage&gt;
</sourcecode>
          <t indent="0" pn="section-2.2.3-10">Following is the "ex-truststore-usage" module's YANG definition:</t>
          <sourcecode type="yang" markers="false" pn="section-2.2.3-11">
module ex-truststore-usage {
  yang-version 1.1;
  namespace "https://example.com/ns/example-truststore-usage";
  prefix etu;

  import ietf-truststore {
    prefix ts;
    reference
      "RFC 9641: A YANG Data Model for a Truststore";
  }

  organization
    "Example Corporation";

  contact
    "Author: YANG Designer &lt;mailto:yang.designer@example.com&gt;";

  description
    "This example module illustrates notable groupings defined
     in the 'ietf-truststore' module.";

  revision 2024-10-10 {
    description
      "Initial version.";
    reference
      "RFC 9641: A YANG Data Model for a Truststore";
  }

  container truststore-usage {
    description
      "An illustration of the various truststore groupings.";
    list cert {
      key "name";
      leaf name {
        type string;
        description
          "An arbitrary name for this cert.";
      }
      uses ts:inline-or-truststore-certs-grouping;
      description
        "A cert that may be configured locally or be
         a reference to a cert in the truststore.";
    }
    list public-key {
      key "name";
      leaf name {
        type string;
        description
          "An arbitrary name for this cert.";
      }
      uses ts:inline-or-truststore-public-keys-grouping;
      description
        "A public key that may be configured locally or be
         a reference to a public key in the truststore.";
    }
  }
}
</sourcecode>
        </section>
      </section>
      <section anchor="truststore-yang-module" numbered="true" removeInRFC="false" toc="include" pn="section-2.3">
        <name slugifiedName="name-yang-module">YANG Module</name>
        <t indent="0" pn="section-2.3-1">This YANG module imports modules from <xref target="RFC8341" format="default" sectionFormat="of" derivedContent="RFC8341"/>
          and <xref target="RFC9640" format="default" sectionFormat="of" derivedContent="RFC9640"/>.</t>
        <sourcecode type="yang" name="ietf-truststore@2024-10-10.yang" markers="true" pn="section-2.3-2">
module ietf-truststore {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-truststore";
  prefix ts;

  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC 8341: Network Configuration Access Control Model";
  }
  import ietf-crypto-types {
    prefix ct;
    reference
      "RFC 9640: YANG Data Types and Groupings for Cryptography";
  }

  organization
    "IETF NETCONF (Network Configuration) Working Group";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/netconf
     WG List:  NETCONF WG list &lt;mailto:netconf@ietf.org&gt;
     Author:   Kent Watsen &lt;kent+ietf@watsen.net&gt;";
  description
    "This module defines a 'truststore' to centralize management
     of trust anchors, including certificates and public keys.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL',
     'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED',
     'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document
     are to be interpreted as described in BCP 14 (RFC 2119)
     (RFC 8174) when, and only when, they appear in all
     capitals, as shown here.

     Copyright (c) 2024 IETF Trust and the persons identified
     as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with
     or without modification, is permitted pursuant to, and
     subject to the license terms contained in, the Revised
     BSD License set forth in Section 4.c of the IETF Trust's
     Legal Provisions Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC 9641
     (https://www.rfc-editor.org/info/rfc9641); see the RFC
     itself for full legal notices.";

  revision 2024-10-10 {
    description
      "Initial version.";
    reference
      "RFC 9641: A YANG Data Model for a Truststore";
  }

  /****************/
  /*   Features   */
  /****************/

  feature central-truststore-supported {
    description
      "The 'central-truststore-supported' feature indicates that
       the server supports the truststore (i.e., implements the
       'ietf-truststore' module).";
  }

  feature inline-definitions-supported {
    description
      "The 'inline-definitions-supported' feature indicates that
       the server supports locally defined trust anchors.";
  }

  feature certificates {
    description
      "The 'certificates' feature indicates that the server
       implements the /truststore/certificate-bags subtree.";
  }

  feature public-keys {
    description
      "The 'public-keys' feature indicates that the server
       implements the /truststore/public-key-bags subtree.";
  }

  /****************/
  /*   Typedefs   */
  /****************/

  typedef central-certificate-bag-ref {
    type leafref {
      path "/ts:truststore/ts:certificate-bags/"
         + "ts:certificate-bag/ts:name";
    }
    description
      "This typedef defines a reference to a certificate bag
       in the central truststore.";
  }

  typedef central-certificate-ref {
    type leafref {
      path "/ts:truststore/ts:certificate-bags/ts:certificate-bag"
         + "[ts:name = current()/../certificate-bag]/"
         + "ts:certificate/ts:name";
    }
    description
      "This typedef defines a reference to a specific certificate
       in a certificate bag in the central truststore.  This typedef
       requires that there exist a sibling 'leaf' node called
       'certificate-bag' that SHOULD have the
       'central-certificate-bag-ref' typedef.";
  }

  typedef central-public-key-bag-ref {
    type leafref {
      path "/ts:truststore/ts:public-key-bags/"
         + "ts:public-key-bag/ts:name";
    }
    description
      "This typedef defines a reference to a public key bag
       in the central truststore.";
  }

  typedef central-public-key-ref {
    type leafref {
      path "/ts:truststore/ts:public-key-bags/ts:public-key-bag"
         + "[ts:name = current()/../public-key-bag]/"
         + "ts:public-key/ts:name";
    }
    description
      "This typedef defines a reference to a specific public key
       in a public key bag in the truststore.  This typedef
       requires that there exist a sibling 'leaf' node called
       'public-key-bag' SHOULD have the
       'central-public-key-bag-ref' typedef.";
  }

  /*****************/
  /*   Groupings   */
  /*****************/
  // *-ref groupings

  grouping central-certificate-ref-grouping {
    description
      "Grouping for the reference to a certificate in a
       certificate-bag in the central truststore.";
    leaf certificate-bag {
      nacm:default-deny-write;
      if-feature "central-truststore-supported";
      if-feature "certificates";
      type ts:central-certificate-bag-ref;
      must '../certificate';
      description
        "Reference to a certificate-bag in the truststore.";
    }
    leaf certificate {
      nacm:default-deny-write;
      if-feature "central-truststore-supported";
      if-feature "certificates";
      type ts:central-certificate-ref;
      must '../certificate-bag';
      description
        "Reference to a specific certificate in the
         referenced certificate-bag.";
    }
  }

  grouping central-public-key-ref-grouping {
    description
      "Grouping for the reference to a public key in a
       public-key-bag in the central truststore.";
    leaf public-key-bag {
      nacm:default-deny-write;
      if-feature "central-truststore-supported";
      if-feature "public-keys";
      type ts:central-public-key-bag-ref;
      description
        "Reference of a public key bag in the truststore, including
         the certificate to authenticate the TLS client.";
    }
    leaf public-key {
      nacm:default-deny-write;
      if-feature "central-truststore-supported";
      if-feature "public-keys";
      type ts:central-public-key-ref;
      description
        "Reference to a specific public key in the
         referenced public-key-bag.";
    }
  }

  // inline-or-truststore-* groupings

  grouping inline-or-truststore-certs-grouping {
    description
      "A grouping for the configuration of a list of certificates.
       The list of certificates may be defined inline or as a
       reference to a certificate bag in the central truststore.

       Servers that wish to define alternate truststore locations
       MUST augment in custom 'case' statements, enabling
       references to those alternate truststore locations.";
    choice inline-or-truststore {
      nacm:default-deny-write;
      mandatory true;
      description
        "A choice between an inlined definition and a definition
         that exists in the truststore.";
      case inline {
        if-feature "inline-definitions-supported";
        container inline-definition {
          description
            "A container for locally configured trust anchor
             certificates.";
          list certificate {
            key "name";
            min-elements 1;
            description
              "A trust anchor certificate or chain of certificates.";
            leaf name {
              type string;
              description
                "An arbitrary name for this certificate.";
            }
            uses ct:trust-anchor-cert-grouping {
              refine "cert-data" {
                mandatory true;
              }
            }
          }
        }
      }
      case central-truststore {
        if-feature "central-truststore-supported";
        if-feature "certificates";
        leaf central-truststore-reference {
          type ts:central-certificate-bag-ref;
          description
            "A reference to a certificate bag that exists in the
             central truststore.";
        }
      }
    }
  }

  grouping inline-or-truststore-public-keys-grouping {
    description
      "A grouping that allows the public keys to either be
       configured locally, within the data model being used, or be a
       reference to a public key bag stored in the truststore.

       Servers that wish to define alternate truststore locations
       SHOULD augment in custom 'case' statement, enabling
       references to those alternate truststore locations.";
    choice inline-or-truststore {
      nacm:default-deny-write;
      mandatory true;
      description
        "A choice between an inlined definition and a definition
         that exists in the truststore.";
      case inline {
        if-feature "inline-definitions-supported";
        container inline-definition {
          description
            "A container to hold local public key definitions.";
          list public-key {
            key "name";
            description
              "A public key definition.";
            leaf name {
              type string;
              description
                "An arbitrary name for this public key.";
            }
            uses ct:public-key-grouping;
          }
        }
      }
      case central-truststore {
        if-feature "central-truststore-supported";
        if-feature "public-keys";
        leaf central-truststore-reference {
          type ts:central-public-key-bag-ref;
          description
            "A reference to a bag of public keys that exists
             in the central truststore.";
        }
      }
    }
  }

  // the truststore grouping

  grouping truststore-grouping {
    description
      "A grouping definition that enables use in other contexts.
       Where used, implementations MUST augment new 'case'
       statements into the various inline-or-truststore 'choice'
       statements to supply leafrefs to the model-specific
       location(s).";
    container certificate-bags {
      nacm:default-deny-write;
      if-feature "certificates";
      description
        "A collection of certificate bags.";
      list certificate-bag {
        key "name";
        description
          "A bag of certificates.  Each bag of certificates should
           be for a specific purpose.  For instance, one bag could
           be used to authenticate a specific set of servers, while
           another could be used to authenticate a specific set of
           clients.";
        leaf name {
          type string;
          description
            "An arbitrary name for this bag of certificates.";
        }
        leaf description {
          type string;
          description
            "A description for this bag of certificates.  The
             intended purpose for the bag SHOULD be described.";
        }
        list certificate {
          key "name";
          description
            "A trust anchor certificate or chain of certificates.";
          leaf name {
            type string;
            description
              "An arbitrary name for this certificate.";
          }
          uses ct:trust-anchor-cert-grouping {
            refine "cert-data" {
              mandatory true;
            }
          }
        }
      }
    }
    container public-key-bags {
      nacm:default-deny-write;
      if-feature "public-keys";
      description
        "A collection of public key bags.";
      list public-key-bag {
        key "name";
        description
          "A bag of public keys.  Each bag of keys SHOULD be for
           a specific purpose.  For instance, one bag could be used
           to authenticate a specific set of servers, while another
           could be used to authenticate a specific set of clients.";
        leaf name {
          type string;
          description
            "An arbitrary name for this bag of public keys.";
        }
        leaf description {
          type string;
          description
            "A description for this bag of public keys.  The
             intended purpose for the bag MUST be described.";
        }
        list public-key {
          key "name";
          description
            "A public key.";
          leaf name {
            type string;
            description
              "An arbitrary name for this public key.";
          }
          uses ct:public-key-grouping;
        }
      }
    }
  }

  /*********************************/
  /*   Protocol-accessible nodes   */
  /*********************************/

  container truststore {
    if-feature "central-truststore-supported";
    nacm:default-deny-write;
    description
      "The truststore contains bags of certificates and
       public keys.";
    uses truststore-grouping;
  }
}
</sourcecode>
      </section>
    </section>
    <section anchor="built-ins" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-support-for-built-in-trust-">Support for Built-In Trust Anchors</name>
      <t indent="0" pn="section-3-1">In some implementations, a server may define some built-in trust anchors.
          For instance, there may be built-in trust anchors enabling the server to
          securely connect to well-known services (e.g., a Secure Zero-Touch Provisioning (SZTP) <xref target="RFC8572" format="default" sectionFormat="of" derivedContent="RFC8572"/>
          bootstrap server) or public Certification Authority (CA) certificates to connect to arbitrary web
          services using PKI.</t>
      <t indent="0" pn="section-3-2">Built-in trust anchors are expected to be set by a vendor-specific process.
          Any ability for operators to set and/or modify built-in trust anchors is outside the
          scope of this document.</t>
      <t indent="0" pn="section-3-3">The primary characteristic of the built-in trust anchors is that they are
          provided by the server, as opposed to configuration.  As such, they are present in
          &lt;operational&gt; (<xref section="5.3" sectionFormat="of" target="RFC8342" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8342#section-5.3" derivedContent="RFC8342"/>) and &lt;system&gt;
          <xref target="I-D.ietf-netmod-system-config" format="default" sectionFormat="of" derivedContent="NETMOD-SYSTEM-CONFIG"/>, if implemented.</t>
      <t indent="0" pn="section-3-4">The example below illustrates what the truststore in &lt;operational&gt;
          might look like for a server in its factory default state.  Note that the
      built-in trust anchor bags have the "or:origin" annotation value "or:system".</t>
      <sourcecode type="xml" markers="false" pn="section-3-5">
&lt;truststore
  xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore"
  xmlns:ct="urn:ietf:params:xml:ns:yang:ietf-crypto-types"
  xmlns:or="urn:ietf:params:xml:ns:yang:ietf-origin"
  or:origin="or:intended"&gt;
  &lt;certificate-bags&gt;

    &lt;certificate-bag or:origin="or:system"&gt;
      &lt;name&gt;Built-In Manufacturer Trust Anchor Certificates&lt;/name&gt;
      &lt;description&gt;
        Certificates built into the device for authenticating
        manufacturer-signed objects, such as TLS server certificates,
        vouchers, etc.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;Manufacturer Root CA Cert&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;

    &lt;certificate-bag or:origin="or:system"&gt;
      &lt;name&gt;Built-In Public Trust Anchor Certificates&lt;/name&gt;
      &lt;description&gt;
        Certificates built into the device for authenticating
        certificates issued by public certificate authorities,
        such as the end-entity certificate for web servers.
      &lt;/description&gt;
      &lt;certificate&gt;
        &lt;name&gt;Public Root CA Cert 1&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Public Root CA Cert 2&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
      &lt;certificate&gt;
        &lt;name&gt;Public Root CA Cert 3&lt;/name&gt;
        &lt;cert-data&gt;BASE64VALUE=&lt;/cert-data&gt;
      &lt;/certificate&gt;
    &lt;/certificate-bag&gt;

  &lt;/certificate-bags&gt;
&lt;/truststore&gt;
</sourcecode>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-4.1">
        <name slugifiedName="name-security-of-data-at-rest">Security of Data at Rest</name>
        <t indent="0" pn="section-4.1-1">The YANG module specified in this document defines a mechanism called a
            "truststore" that, by its name, suggests that its contents are protected
            from unauthorized modification.</t>
        <t indent="0" pn="section-4.1-2">Security controls for the API (i.e., data in motion) are
            discussed in <xref target="sec-mod" format="default" sectionFormat="of" derivedContent="Section 4.3"/>, but controls for the
            data at rest (e.g., on disk) cannot be specified by the YANG module.</t>
        <t indent="0" pn="section-4.1-3">In order to satisfy the expectations of a "truststore", server
            implementations <bcp14>MUST</bcp14> ensure that the truststore contents are protected
            from unauthorized modifications when at rest.</t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-4.2">
        <name slugifiedName="name-unconstrained-public-key-us">Unconstrained Public Key Usage</name>
        <t indent="0" pn="section-4.2-1">This module enables the configuration of public keys without
            constraints on their usage, e.g., what operations the key is
            allowed to be used for (encryption, verification, or both).</t>
        <t indent="0" pn="section-4.2-2">Trust anchors configured via this module are implicitly trusted
            to validate certification paths that may include any name, be
            used for any purpose, or be subject to constraints imposed
            by an intermediate CA or by context in which the truststore is
            used. Implementations are free to use alternative or auxiliary
            structures and validation rules to define constraints that
            limit the applicability of a trust anchor.</t>
      </section>
      <section anchor="sec-mod" numbered="true" removeInRFC="false" toc="include" pn="section-4.3">
        <name slugifiedName="name-considerations-for-the-ietf">Considerations for the "ietf-truststore" YANG Module</name>
        <t indent="0" pn="section-4.3-1">This section is modeled after the template defined in <xref section="3.7.1" sectionFormat="of" target="RFC8407" format="default" derivedLink="https://rfc-editor.org/rfc/rfc8407#section-3.7.1" derivedContent="RFC8407"/>.</t>
        <t indent="0" pn="section-4.3-2">The "ietf-truststore" YANG module defines  "grouping" and "container" statements that are designed to be accessed via YANG-based management protocols, such as NETCONF <xref target="RFC6241" format="default" sectionFormat="of" derivedContent="RFC6241"/> and
            RESTCONF <xref target="RFC8040" format="default" sectionFormat="of" derivedContent="RFC8040"/>.  These protocols have mandatory-to-implement
            secure transport layers (e.g., Secure Shell (SSH) <xref target="RFC4252" format="default" sectionFormat="of" derivedContent="RFC4252"/>, TLS <xref target="RFC8446" format="default" sectionFormat="of" derivedContent="RFC8446"/>, and QUIC <xref target="RFC9000" format="default" sectionFormat="of" derivedContent="RFC9000"/>) and mandatory-to-implement mutual authentication.</t>
        <t indent="0" pn="section-4.3-3">The Network Configuration Access Control Model (NACM) <xref target="RFC8341" format="default" sectionFormat="of" derivedContent="RFC8341"/> provides the means
        to restrict access for particular users to a preconfigured subset of all available
            protocol operations and content.</t>
        <t indent="0" pn="section-4.3-4">Please be aware that this YANG module uses groupings from
            other YANG modules that define nodes that may be considered
            sensitive or vulnerable in network environments.  Please
            review the security considerations for dependent YANG modules
            for information as to which nodes may be considered sensitive
            or vulnerable in network environments.</t>
        <t indent="0" pn="section-4.3-5">Most of the readable data nodes defined in this YANG module
            are not considered sensitive or vulnerable in network environments.
            However, the "cert-data" node uses the NACM "default-deny-all"
            extension for reasons described in <xref section="3.8" sectionFormat="of" target="RFC9640" format="default" derivedLink="https://rfc-editor.org/rfc/rfc9640#section-3.8" derivedContent="RFC9640"/>.</t>
        <t indent="0" pn="section-4.3-6">All the writable data nodes defined by this module, both in the
            "grouping" statements as well as the protocol-accessible "truststore"
            instance, may be considered sensitive or vulnerable in some network
            environments. For instance, any modification to a trust anchor or
            reference to a trust anchor  may dramatically alter the implemented
            security policy.  For this reason, the NACM "default-deny-write" extension
            has been set for all data nodes defined in this module.</t>
        <t indent="0" pn="section-4.3-7">This module does not define any "rpc" or "action" statements, and
            thus, the security considerations for such are not provided here.</t>
      </section>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-the-ietf-xml-registry">The IETF XML Registry</name>
        <t indent="0" pn="section-5.1-1">IANA has registered the following URI in the "ns" registry defined of
  the "IETF XML Registry" <xref target="RFC3688" format="default" sectionFormat="of" derivedContent="RFC3688"/>.</t>
        <dl newline="false" spacing="compact" indent="3" pn="section-5.1-2">
          <dt pn="section-5.1-2.1">URI:</dt>
          <dd pn="section-5.1-2.2">urn:ietf:params:xml:ns:yang:ietf-truststore</dd>
          <dt pn="section-5.1-2.3">Registrant Contact:</dt>
          <dd pn="section-5.1-2.4">The IESG</dd>
          <dt pn="section-5.1-2.5">XML:</dt>
          <dd pn="section-5.1-2.6">N/A; the requested URI is an XML namespace.</dd>
        </dl>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-the-yang-module-names-regis">The YANG Module Names Registry</name>
        <t indent="0" pn="section-5.2-1">IANA has registered the following YANG module in the "YANG Module Names" registry defined in <xref target="RFC6020" format="default" sectionFormat="of" derivedContent="RFC6020"/>.</t>
        <dl newline="false" spacing="compact" indent="3" pn="section-5.2-2">
          <dt pn="section-5.2-2.1">Name:</dt>
          <dd pn="section-5.2-2.2">ietf-truststore</dd>
          <dt pn="section-5.2-2.3">Namespace:</dt>
          <dd pn="section-5.2-2.4">urn:ietf:params:xml:ns:yang:ietf-truststore</dd>
          <dt pn="section-5.2-2.5">Prefix:</dt>
          <dd pn="section-5.2-2.6">ts</dd>
          <dt pn="section-5.2-2.7">Reference:</dt>
          <dd pn="section-5.2-2.8">RFC 9641</dd>
        </dl>
      </section>
    </section>
  </middle>
  <back>
    <displayreference target="I-D.ietf-netconf-http-client-server" to="HTTP-CLIENT-SERVER"/>
    <displayreference target="I-D.ietf-netconf-netconf-client-server" to="NETCONF-CLIENT-SERVER"/>
    <displayreference target="I-D.ietf-netconf-restconf-client-server" to="RESTCONF-CLIENT-SERVER"/>
    <displayreference target="I-D.ietf-netmod-system-config" to="NETMOD-SYSTEM-CONFIG"/>
    <references pn="section-6">
      <name slugifiedName="name-references">References</name>
      <references pn="section-6.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC4252" target="https://www.rfc-editor.org/info/rfc4252" quoteTitle="true" derivedAnchor="RFC4252">
          <front>
            <title>The Secure Shell (SSH) Authentication Protocol</title>
            <author fullname="T. Ylonen" initials="T." surname="Ylonen"/>
            <author fullname="C. Lonvick" initials="C." role="editor" surname="Lonvick"/>
            <date month="January" year="2006"/>
            <abstract>
              <t indent="0">The Secure Shell Protocol (SSH) is a protocol for secure remote login and other secure network services over an insecure network. This document describes the SSH authentication protocol framework and public key, password, and host-based client authentication methods. Additional authentication methods are described in separate documents. The SSH authentication protocol runs on top of the SSH transport layer protocol and provides a single authenticated tunnel for the SSH connection protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4252"/>
          <seriesInfo name="DOI" value="10.17487/RFC4252"/>
        </reference>
        <reference anchor="RFC6241" target="https://www.rfc-editor.org/info/rfc6241" quoteTitle="true" derivedAnchor="RFC6241">
          <front>
            <title>Network Configuration Protocol (NETCONF)</title>
            <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
            <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
            <date month="June" year="2011"/>
            <abstract>
              <t indent="0">The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6241"/>
          <seriesInfo name="DOI" value="10.17487/RFC6241"/>
        </reference>
        <reference anchor="RFC7950" target="https://www.rfc-editor.org/info/rfc7950" quoteTitle="true" derivedAnchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="August" year="2016"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC8040" target="https://www.rfc-editor.org/info/rfc8040" quoteTitle="true" derivedAnchor="RFC8040">
          <front>
            <title>RESTCONF Protocol</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="January" year="2017"/>
            <abstract>
              <t indent="0">This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8040"/>
          <seriesInfo name="DOI" value="10.17487/RFC8040"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8341" target="https://www.rfc-editor.org/info/rfc8341" quoteTitle="true" derivedAnchor="RFC8341">
          <front>
            <title>Network Configuration Access Control Model</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">The standardization of network configuration interfaces for use with the Network Configuration Protocol (NETCONF) or the RESTCONF protocol requires a structured and secure operating environment that promotes human usability and multi-vendor interoperability. There is a need for standard mechanisms to restrict NETCONF or RESTCONF protocol access for particular users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content. This document defines such an access control model.</t>
              <t indent="0">This document obsoletes RFC 6536.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="91"/>
          <seriesInfo name="RFC" value="8341"/>
          <seriesInfo name="DOI" value="10.17487/RFC8341"/>
        </reference>
        <reference anchor="RFC8446" target="https://www.rfc-editor.org/info/rfc8446" quoteTitle="true" derivedAnchor="RFC8446">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2018"/>
            <abstract>
              <t indent="0">This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t indent="0">This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
        <reference anchor="RFC9000" target="https://www.rfc-editor.org/info/rfc9000" quoteTitle="true" derivedAnchor="RFC9000">
          <front>
            <title>QUIC: A UDP-Based Multiplexed and Secure Transport</title>
            <author fullname="J. Iyengar" initials="J." role="editor" surname="Iyengar"/>
            <author fullname="M. Thomson" initials="M." role="editor" surname="Thomson"/>
            <date month="May" year="2021"/>
            <abstract>
              <t indent="0">This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9000"/>
          <seriesInfo name="DOI" value="10.17487/RFC9000"/>
        </reference>
        <reference anchor="RFC9640" target="https://www.rfc-editor.org/info/rfc9640" quoteTitle="true" derivedAnchor="RFC9640">
          <front>
            <title>YANG Data Types and Groupings for Cryptography</title>
            <author initials="K." surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date month="October" year="2024"/>
          </front>
          <seriesInfo name="RFC" value="9640"/>
          <seriesInfo name="DOI" value="10.17487/RFC9640"/>
        </reference>
      </references>
      <references pn="section-6.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="I-D.ietf-netconf-http-client-server" target="https://datatracker.ietf.org/doc/html/draft-ietf-netconf-http-client-server-23" quoteTitle="true" derivedAnchor="HTTP-CLIENT-SERVER">
          <front>
            <title>YANG Groupings for HTTP Clients and HTTP Servers</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date day="15" month="August" year="2024"/>
            <abstract>
              <t indent="0">This document presents two YANG modules: the first defines a minimal grouping for configuring an HTTP client, and the second defines a minimal grouping for configuring an HTTP server. It is intended that these groupings will be used to help define the configuration for simple HTTP-based protocols (not for complete web servers or browsers). Support is provided for HTTP/1.1, HTTP/2, and HTTP/3.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-http-client-server-23"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-netconf-netconf-client-server" target="https://datatracker.ietf.org/doc/html/draft-ietf-netconf-netconf-client-server-37" quoteTitle="true" derivedAnchor="NETCONF-CLIENT-SERVER">
          <front>
            <title>NETCONF Client and Server Models</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date day="14" month="August" year="2024"/>
            <abstract>
              <t indent="0">This document presents two YANG modules, one module to configure a NETCONF client and the other module to configure a NETCONF server. Both modules support both the SSH and TLS transport protocols, and support both standard NETCONF and NETCONF Call Home connections. Editorial Note (To be removed by RFC Editor) This draft contains placeholder values that need to be replaced with finalized values at the time of publication. This note summarizes all of the substitutions that are needed. No other RFC Editor instructions are specified elsewhere in this document. Artwork in this document contains shorthand references to drafts in progress. Please apply the following replacements (note: not all may be present): * AAAA --&gt; the assigned RFC value for draft-ietf-netconf-crypto- types * BBBB --&gt; the assigned RFC value for draft-ietf-netconf-trust- anchors * CCCC --&gt; the assigned RFC value for draft-ietf-netconf-keystore * DDDD --&gt; the assigned RFC value for draft-ietf-netconf-tcp-client- server * EEEE --&gt; the assigned RFC value for draft-ietf-netconf-ssh-client- server * FFFF --&gt; the assigned RFC value for draft-ietf-netconf-tls-client- server * GGGG --&gt; the assigned RFC value for draft-ietf-netconf-http- client-server * HHHH --&gt; the assigned RFC value for this draft Artwork in this document contains placeholder values for the date of publication of this draft. Please apply the following replacement: * 2024-08-14 --&gt; the publication date of this draft The "Relation to other RFCs" section Section 1.1 contains the text "one or more YANG modules" and, later, "modules". This text is sourced from a file in a context where it is unknown how many modules a draft defines. The text is not wrong as is, but it may be improved by stating more directly how many modules are defined. The "Relation to other RFCs" section Section 1.1 contains a self- reference to this draft, along with a corresponding reference in the Appendix. Please replace the self-reference in this section with "This RFC" (or similar) and remove the self-reference in the "Normative/Informative References" section, whichever it is in. Tree-diagrams in this draft may use the '\' line-folding mode defined in RFC 8792. However, nicer-to-the-eye is when the '\\' line-folding mode is used. The AD suggested suggested putting a request here for the RFC Editor to help convert "ugly" '\' folded examples to use the '\\' folding mode. "Help convert" may be interpreted as, identify what looks ugly and ask the authors to make the adjustment. The following Appendix section is to be removed prior to publication: * Appendix A. Change Log</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-netconf-client-server-37"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-netmod-system-config" target="https://datatracker.ietf.org/doc/html/draft-ietf-netmod-system-config-09" quoteTitle="true" derivedAnchor="NETMOD-SYSTEM-CONFIG">
          <front>
            <title>System-defined Configuration</title>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization showOnFrontPage="true">Huawei</organization>
            </author>
            <author fullname="Qin Wu" initials="Q." surname="Wu">
              <organization showOnFrontPage="true">Huawei</organization>
            </author>
            <author fullname="Chong Feng" initials="C." surname="Feng"/>
            <date day="29" month="September" year="2024"/>
            <abstract>
              <t indent="0">The Network Management Datastore Architecture (NMDA) in RFC 8342 defines several configuration datastores holding configuration. The contents of these configuration datastores are controlled by clients. This document introduces the concept of system configuration datastore holding configuration controlled by the system on which a server is running. The system configuration can be referenced (e.g., leafref) by configuration explicitly created by clients. This document updates RFC 8342.</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-system-config-09"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="I-D.ietf-netconf-restconf-client-server" target="https://datatracker.ietf.org/doc/html/draft-ietf-netconf-restconf-client-server-38" quoteTitle="true" derivedAnchor="RESTCONF-CLIENT-SERVER">
          <front>
            <title>RESTCONF Client and Server Models</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date day="14" month="August" year="2024"/>
            <abstract>
              <t indent="0">This document presents two YANG modules, one module to configure a RESTCONF client and the other module to configure a RESTCONF server. Both modules support the TLS transport protocol with both standard RESTCONF and RESTCONF Call Home connections. Editorial Note (To be removed by RFC Editor) This draft contains placeholder values that need to be replaced with finalized values at the time of publication. This note summarizes all of the substitutions that are needed. No other RFC Editor instructions are specified elsewhere in this document. Artwork in this document contains shorthand references to drafts in progress. Please apply the following replacements (note: not all may be present): * AAAA --&gt; the assigned RFC value for draft-ietf-netconf-crypto- types * BBBB --&gt; the assigned RFC value for draft-ietf-netconf-trust- anchors * CCCC --&gt; the assigned RFC value for draft-ietf-netconf-keystore * DDDD --&gt; the assigned RFC value for draft-ietf-netconf-tcp-client- server * EEEE --&gt; the assigned RFC value for draft-ietf-netconf-ssh-client- server * FFFF --&gt; the assigned RFC value for draft-ietf-netconf-tls-client- server * GGGG --&gt; the assigned RFC value for draft-ietf-netconf-http- client-server * HHHH --&gt; the assigned RFC value for draft-ietf-netconf-netconf- client-server * IIII --&gt; the assigned RFC value for this draft Artwork in this document contains placeholder values for the date of publication of this draft. Please apply the following replacement: * 2024-08-14 --&gt; the publication date of this draft The "Relation to other RFCs" section Section 1.1 contains the text "one or more YANG modules" and, later, "modules". This text is sourced from a file in a context where it is unknown how many modules a draft defines. The text is not wrong as is, but it may be improved by stating more directly how many modules are defined. The "Relation to other RFCs" section Section 1.1 contains a self- reference to this draft, along with a corresponding reference in the Appendix. Please replace the self-reference in this section with "This RFC" (or similar) and remove the self-reference in the "Normative/Informative References" section, whichever it is in. Tree-diagrams in this draft may use the '\' line-folding mode defined in RFC 8792. However, nicer-to-the-eye is when the '\\' line-folding mode is used. The AD suggested suggested putting a request here for the RFC Editor to help convert "ugly" '\' folded examples to use the '\\' folding mode. "Help convert" may be interpreted as, identify what looks ugly and ask the authors to make the adjustment. The following Appendix section is to be removed prior to publication: * Appendix A. Change Log</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-netconf-restconf-client-server-38"/>
          <refcontent>Work in Progress</refcontent>
        </reference>
        <reference anchor="RFC3688" target="https://www.rfc-editor.org/info/rfc3688" quoteTitle="true" derivedAnchor="RFC3688">
          <front>
            <title>The IETF XML Registry</title>
            <author fullname="M. Mealling" initials="M." surname="Mealling"/>
            <date month="January" year="2004"/>
            <abstract>
              <t indent="0">This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="81"/>
          <seriesInfo name="RFC" value="3688"/>
          <seriesInfo name="DOI" value="10.17487/RFC3688"/>
        </reference>
        <reference anchor="RFC6020" target="https://www.rfc-editor.org/info/rfc6020" quoteTitle="true" derivedAnchor="RFC6020">
          <front>
            <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="October" year="2010"/>
            <abstract>
              <t indent="0">YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6020"/>
          <seriesInfo name="DOI" value="10.17487/RFC6020"/>
        </reference>
        <reference anchor="RFC8259" target="https://www.rfc-editor.org/info/rfc8259" quoteTitle="true" derivedAnchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t indent="0">JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t indent="0">This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC8340" target="https://www.rfc-editor.org/info/rfc8340" quoteTitle="true" derivedAnchor="RFC8340">
          <front>
            <title>YANG Tree Diagrams</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="215"/>
          <seriesInfo name="RFC" value="8340"/>
          <seriesInfo name="DOI" value="10.17487/RFC8340"/>
        </reference>
        <reference anchor="RFC8342" target="https://www.rfc-editor.org/info/rfc8342" quoteTitle="true" derivedAnchor="RFC8342">
          <front>
            <title>Network Management Datastore Architecture (NMDA)</title>
            <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
            <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
            <author fullname="P. Shafer" initials="P." surname="Shafer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="R. Wilton" initials="R." surname="Wilton"/>
            <date month="March" year="2018"/>
            <abstract>
              <t indent="0">Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model. This document updates RFC 7950.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8342"/>
          <seriesInfo name="DOI" value="10.17487/RFC8342"/>
        </reference>
        <reference anchor="RFC8407" target="https://www.rfc-editor.org/info/rfc8407" quoteTitle="true" derivedAnchor="RFC8407">
          <front>
            <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
            <author fullname="A. Bierman" initials="A." surname="Bierman"/>
            <date month="October" year="2018"/>
            <abstract>
              <t indent="0">This memo provides guidelines for authors and reviewers of specifications containing YANG modules. Recommendations and procedures are defined, which are intended to increase interoperability and usability of Network Configuration Protocol (NETCONF) and RESTCONF protocol implementations that utilize YANG modules. This document obsoletes RFC 6087.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="216"/>
          <seriesInfo name="RFC" value="8407"/>
          <seriesInfo name="DOI" value="10.17487/RFC8407"/>
        </reference>
        <reference anchor="RFC8572" target="https://www.rfc-editor.org/info/rfc8572" quoteTitle="true" derivedAnchor="RFC8572">
          <front>
            <title>Secure Zero Touch Provisioning (SZTP)</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="I. Farrer" initials="I." surname="Farrer"/>
            <author fullname="M. Abrahamsson" initials="M." surname="Abrahamsson"/>
            <date month="April" year="2019"/>
            <abstract>
              <t indent="0">This document presents a technique to securely provision a networking device when it is booting in a factory-default state. Variations in the solution enable it to be used on both public and private networks. The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs. The updated device is subsequently able to establish secure connections with other systems. For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8572"/>
          <seriesInfo name="DOI" value="10.17487/RFC8572"/>
        </reference>
        <reference anchor="RFC8792" target="https://www.rfc-editor.org/info/rfc8792" quoteTitle="true" derivedAnchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t indent="0">This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC9642" target="https://www.rfc-editor.org/info/rfc9642" quoteTitle="true" derivedAnchor="RFC9642">
          <front>
            <title>A YANG Data Model for a Keystore</title>
            <author initials="K." surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date month="October" year="2024"/>
          </front>
          <seriesInfo name="RFC" value="9642"/>
          <seriesInfo name="DOI" value="10.17487/RFC9642"/>
        </reference>
        <reference anchor="RFC9643" target="https://www.rfc-editor.org/info/rfc9643" quoteTitle="true" derivedAnchor="RFC9643">
          <front>
            <title>YANG Groupings for TCP Clients and TCP Servers</title>
            <author initials="K." surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <author initials="M." surname="Scharf" fullname="Michael Scharf">
              <organization showOnFrontPage="true">Hochschule Esslingen - University of Applied Sciences</organization>
            </author>
            <date month="October" year="2024"/>
          </front>
          <seriesInfo name="RFC" value="9643"/>
          <seriesInfo name="DOI" value="10.17487/RFC9643"/>
        </reference>
        <reference anchor="RFC9644" target="https://www.rfc-editor.org/info/rfc9644" quoteTitle="true" derivedAnchor="RFC9644">
          <front>
            <title>YANG Groupings for SSH Clients and SSH Servers</title>
            <author initials="K." surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date month="October" year="2024"/>
          </front>
          <seriesInfo name="RFC" value="9644"/>
          <seriesInfo name="DOI" value="10.17487/RFC9644"/>
        </reference>
        <reference anchor="RFC9645" target="https://www.rfc-editor.org/info/rfc9645" quoteTitle="true" derivedAnchor="RFC9645">
          <front>
            <title>YANG Groupings for TLS Clients and TLS Servers</title>
            <author initials="K." surname="Watsen" fullname="Kent Watsen">
              <organization showOnFrontPage="true">Watsen Networks</organization>
            </author>
            <date month="October" year="2024"/>
          </front>
          <seriesInfo name="RFC" value="9645"/>
          <seriesInfo name="DOI" value="10.17487/RFC9645"/>
        </reference>
        <reference anchor="W3C.REC-xml-20081126" target="https://www.w3.org/TR/2008/REC-xml-20081126/" quoteTitle="true" derivedAnchor="W3C.REC-xml-20081126">
          <front>
            <title>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title>
            <author initials="T." surname="Bray" fullname="Tim Bray"/>
            <author initials="J." surname="Paoli" fullname="Jean Paoli"/>
            <author initials="C.M." surname="Sperberg-McQueen" fullname="C. M. Sperberg-McQueen"/>
            <author initials="E." surname="Maler" fullname="Eve Maler"/>
            <author initials="F." surname="Yergeau" fullname="François Yergeau"/>
            <date month="November" year="2008"/>
          </front>
          <seriesInfo name="World Wide Web Consortium                     Recommendation" value="REC-xml-20081126"/>
        </reference>
      </references>
    </references>
    <section numbered="false" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.a-1">The authors especially thank <contact fullname="Henk Birkholz"/> for contributing YANG
          to the "ietf-truststore" module supporting raw public keys and PSKs
          (pre-shared or pairwise-symmetric keys).  While these contributions
          were eventually replaced by reusing the existing support for
          asymmetric and symmetric trust anchors, respectively, it was only
          through Henk's initiative that the WG was able to come to that result.</t>
      <t indent="0" pn="section-appendix.a-2">The authors additionally thank the following for helping give shape
          to this work (ordered by first name):
          <contact fullname="Balázs Kovács"/>,
          <contact fullname="Carl Wallace"/>,
          <contact fullname="Eric Voit"/>,
          <contact fullname="Éric Vyncke"/>,
          <contact fullname="Francesca Palombini"/>,
          <contact fullname="Jensen Zhang"/>,
          <contact fullname="Jürgen Schönwälder"/>,
          <contact fullname="Lars Eggert"/>,
          <contact fullname="Liang Xia"/>,
          <contact fullname="Martin Björklund"/>,
          <contact fullname="Murray Kucherawy"/>,
          <contact fullname="Nick Hancock"/>,
	  <contact fullname="Paul Kyzivat"/>,	  
          <contact fullname="Qin Wu"/>,
          <contact fullname="Rob Wilton"/>,
          <contact fullname="Robert Varga"/>,
          <contact fullname="Roman Danyliw"/>,
          and <contact fullname="Yoav Nir"/>.
      </t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-address">Author's Address</name>
      <author initials="K." surname="Watsen" fullname="Kent Watsen">
        <organization showOnFrontPage="true">Watsen Networks</organization>
        <address>
          <email>kent+ietf@watsen.net</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
