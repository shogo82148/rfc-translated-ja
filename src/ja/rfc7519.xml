<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" docName="draft-ietf-oauth-json-web-token-32" indexInclude="true" number="7519" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-json-web-token-32" rel="prev"/>
<link href="https://dx.doi.org/10.17487/rfc7519" rel="alternate"/>
  <front>
    <title>JSON Web Token (JWT)</title>
    <seriesInfo name="RFC" value="7519" stream="IETF"/>
    <date year="2015" month="May"/>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">JSON Web Token (JWT) は、2つの当事者間で転送されるクレームを表すためのコンパクトでURLセーフな手段です。JWTのクレームは、JSON Web Signature (JWS) 構造のペイロードとして使用されるJSONオブジェクトとしてエンコードされるか、JSON Web Encryption (JWE) 構造の平文として使用され、クレームをデジタル署名またはメッセージ認証コード（MAC）によって整合性保護することができます。また、暗号化することもできます。</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">このメモのステータス</name>
        <t indent="0" pn="section-boilerplate.1.1">これはインターネット標準トラック文書です。</t>
        <t indent="0" pn="section-boilerplate.1.2">この文書は、インターネットエンジニアリングタスクフォース（IETF）の製品です。IETFコミュニティの合意を表しています。公開レビューを受け、インターネットエンジニアリングステアリンググループ（IESG）によって公開承認されました。インターネット標準に関する詳細は、RFC 5741のセクション2で説明されています。.</t>
        <t indent="0" pn="section-boilerplate.1.3">この文書の現在の状態、正誤表、およびフィードバックの提供方法に関する情報については、
http://www.rfc-editor.org/info/rfc7519 を参照してください。</t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">著作権表示</name>
        <t indent="0" pn="section-boilerplate.2-1">Copyright (c) 2015 IETF Trust and the persons identified as the
document authors.  All rights reserved.</t>
        <t indent="0" pn="section-boilerplate.2-2">この文書は、BCP 78およびIETFドキュメントに関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）にしたがう必要があります。これらの文書をよく確認し、この文書に関するあなたの権利と制限を説明しています。この文書から抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。</t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">目次</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">はじめに</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
            <li pn="section-toc.1-1.1.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notational-conventions">表記上の規則</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">用語</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-json-web-token-(jwt)-overview">JSON Web Token (JWT) Overview</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
            <li pn="section-toc.1-1.3.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-jwt">JWT の例</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-claims">JWT クレーム</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.2">
            <li pn="section-toc.1-1.4.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.1"><xref derivedContent="4.1" format="counter" sectionFormat="of" target="section-4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registered-claim-names">登録済みクレーム名</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.4.1.2">
              <li pn="section-toc.1-1.4.1.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.1.1"><xref derivedContent="4.1.1" format="counter" sectionFormat="of" target="section-4.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;iss&quot;-(issuer)-claim">&quot;iss&quot; (Issuer) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.2.1"><xref derivedContent="4.1.2" format="counter" sectionFormat="of" target="section-4.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;sub&quot;-(subject)-claim">&quot;sub&quot; (Subject) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.3.1"><xref derivedContent="4.1.3" format="counter" sectionFormat="of" target="section-4.1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;aud&quot;-(audience)-claim">&quot;aud&quot; (Audience) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.4">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.4.1"><xref derivedContent="4.1.4" format="counter" sectionFormat="of" target="section-4.1.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;exp&quot;-(expiration-time)-claim">&quot;exp&quot; (Expiration Time) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.5">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.5.1"><xref derivedContent="4.1.5" format="counter" sectionFormat="of" target="section-4.1.5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;nbf&quot;-(not-before)-claim">&quot;nbf&quot; (Not Before) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.6">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.6.1"><xref derivedContent="4.1.6" format="counter" sectionFormat="of" target="section-4.1.6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;iat&quot;-(issued-at)-claim">&quot;iat&quot; (Issued At) Claim</xref></t>
              </li>
              <li pn="section-toc.1-1.4.1.7">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1.7.1"><xref derivedContent="4.1.7" format="counter" sectionFormat="of" target="section-4.1.7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;jti&quot;-(jwt-id)-claim">&quot;jti&quot; (JWT ID) Claim</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.4.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.2.1"><xref derivedContent="4.2" format="counter" sectionFormat="of" target="section-4.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-public-claim-names">公開クレーム名</xref></t>
            </li>
            <li pn="section-toc.1-1.4.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.3.1"><xref derivedContent="4.3" format="counter" sectionFormat="of" target="section-4.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-private-claim-names">非公開クレーム名</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jose-header">JOSE ヘッダー</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
            <li pn="section-toc.1-1.5.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;typ&quot;-(type)-header-parameter">&quot;typ&quot; (Type) Header Parameter</xref></t>
            </li>
            <li pn="section-toc.1-1.5.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-&quot;cty&quot;-(content-type)-header-parameter">&quot;cty&quot; (Content Type) Header Parameter</xref></t>
            </li>
            <li pn="section-toc.1-1.5.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-replicating-claims-as-header-parameters">ヘッダーパラメーターとしてクレームを複製する</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-unsecured-jwts">未保護のJWT</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
            <li pn="section-toc.1-1.6.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-unsecured-jwt">未保護のJWTの例</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-creating-and-validating-jwts">JWTの作成と検証</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
            <li pn="section-toc.1-1.7.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-creating-a-jwt">JWTの作成</xref></t>
            </li>
            <li pn="section-toc.1-1.7.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-validating-a-jwt">Validating a JWT</xref></t>
            </li>
            <li pn="section-toc.1-1.7.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.3.1"><xref derivedContent="7.3" format="counter" sectionFormat="of" target="section-7.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-string-comparison-rules">String Comparison Rules</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-implementation-requirements">Implementation Requirements</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-for-declaring-that-content-is-a-jwt">URI for Declaring that Content is a JWT</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
            <li pn="section-toc.1-1.10.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-json-web-token-claims-registry">JSON Web Token Claims Registry</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.1.2">
              <li pn="section-toc.1-1.10.1.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.1.1.1"><xref derivedContent="10.1.1" format="counter" sectionFormat="of" target="section-10.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registration-template">Registration Template</xref></t>
              </li>
              <li pn="section-toc.1-1.10.1.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.1.2.1"><xref derivedContent="10.1.2" format="counter" sectionFormat="of" target="section-10.1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-initial-registry-contents">Initial Registry Contents</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.10.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.2.1"><xref derivedContent="10.2" format="counter" sectionFormat="of" target="section-10.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sub-namespace-registration-of">Sub-Namespace Registration of</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.2.1" format="counter" sectionFormat="of" target="section-10.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents">Registry Contents</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.10.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.3.1"><xref derivedContent="10.3" format="counter" sectionFormat="of" target="section-10.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-media-type-registration">Media Type Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.3.2">
              <li pn="section-toc.1-1.10.3.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.3.1.1"><xref derivedContent="10.3.1" format="counter" sectionFormat="of" target="section-10.3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents">Registry Contents</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.10.4">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.4.1"><xref derivedContent="10.4" format="counter" sectionFormat="of" target="section-10.4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-header-parameter-names-registration">Header Parameter Names Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.4.2">
              <li pn="section-toc.1-1.10.4.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.10.4.1.1"><xref derivedContent="10.4.1" format="counter" sectionFormat="of" target="section-10.4.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-registry-contents">Registry Contents</xref></t>
              </li>
              </ul>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.11.1"><xref derivedContent="11" format="counter" sectionFormat="of" target="section-11"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.11.2">
            <li pn="section-toc.1-1.11.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.11.1.1"><xref derivedContent="11.1" format="counter" sectionFormat="of" target="section-11.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-trust-decisions">Trust Decisions</xref></t>
            </li>
            <li pn="section-toc.1-1.11.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.11.2.1"><xref derivedContent="11.2" format="counter" sectionFormat="of" target="section-11.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-signing-and-encryption-order">Signing and Encryption Order</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.12.1"><xref derivedContent="12" format="counter" sectionFormat="of" target="section-12"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-privacy-considerations">Privacy Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.13">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.13.1"><xref derivedContent="13" format="counter" sectionFormat="of" target="section-13"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.13.2">
            <li pn="section-toc.1-1.13.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.13.1.1"><xref derivedContent="13.1" format="counter" sectionFormat="of" target="section-13.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
            </li>
            <li pn="section-toc.1-1.13.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.13.2.1"><xref derivedContent="13.2" format="counter" sectionFormat="of" target="section-13.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.A">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.1"><xref derivedContent="A" format="counter" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-jwt-examples">JWT Examples</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.A.2">
            <li pn="section-toc.1-1.A.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.1.1"><xref derivedContent="A.1" format="counter" sectionFormat="of" target="section-a.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-encrypted-jwt">Example Encrypted JWT</xref></t>
            </li>
            <li pn="section-toc.1-1.A.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.2.1"><xref derivedContent="A.2" format="counter" sectionFormat="of" target="section-a.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-nested-jwt">Example Nested JWT</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.B">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.B.1"><xref derivedContent="B" format="counter" sectionFormat="of" target="section-appendix.b"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-of-jwts-to-saml-assertions">Relationship of JWTs to SAML Assertions</xref></t>
          </li>
          <li pn="section-toc.1-1.C">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.C.1"><xref derivedContent="C" format="counter" sectionFormat="of" target="section-appendix.c"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-relationship-of-jwts-to-simple-web-tokens-(swts)">Relationship of JWTs to Simple Web Tokens (SWTs)</xref></t>
          </li>
          <li pn="section-toc.1-1.d">
            <t indent="0" pn="section-toc.1-1.d.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.d"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
      </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">はじめに</name>
      <t indent="0" pn="section-1-1">JSON Web Token (JWT) は、HTTP Authorization ヘッダーや URI クエリパラメータなどのスペースが制限された環境向けに設計されたコンパクトなクレーム表現形式です。JWT は、JSON Web Signature (JWS) <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> 構造のペイロードとして使用される JSON <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/> オブジェクトとして転送されるクレームをエンコードし、または JSON Web Encryption (JWE) <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/> 構造の平文として使用され、クレームをデジタル署名またはメッセージ認証コード (MAC) によって整合性保護することができます。また、暗号化することもできます。JWT は、常に JWS Compact Serialization または JWE Compact Serialization を使用して表現されます。</t>
      <t indent="0" pn="section-1-2">JWT の推奨発音は、英語の「jot」と同じです。</t>
      <section anchor="notational-conventions" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-notational-conventions">表記上の規則</name>
        <t indent="0" pn="section-1.1-1">キーワード「<bcp14>しなければなりません（MUST）</bcp14>」、「<bcp14>してはなりません（MUST NOT）</bcp14>」、
「<bcp14>要求されています（REQUIRED）</bcp14>」、
「<bcp14>することになります（SHALL）</bcp14>」、「<bcp14>することはありません（SHALL NOT）</bcp14>」、
「<bcp14>すべきです（SHOULD）</bcp14>」、「<bcp14>すべきではありません（SHOULD NOT）</bcp14>」、
「<bcp14>推奨されます（RECOMMENDED）</bcp14>」、「<bcp14>推奨されません（NOT RECOMMENDED）</bcp14>」、
「<bcp14>してもよいです（MAY）</bcp14>」、「<bcp14>選択できます（OPTIONAL）</bcp14>」は、
<xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/>に記載されているとおりに解釈されるものとします。
これらの用語がすべて大文字で表示される場合にのみ、解釈を適用する必要があります。</t>
      </section>
    </section>
    <section anchor="terminology" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-terminology">用語</name>
      <t indent="0" pn="section-2-1">「JSON Web Signature (JWS)」、「Base64url エンコーディング」、「ヘッダパラメータ」、「JOSE ヘッダ」、「JWS Compact Serialization」、「JWS Payload」、「JWS Signature」、および「Unsecured JWS」の用語は、JWS 仕様書 <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> で定義されています。</t>
      <t indent="0" pn="section-2-2">「JSON Web Encryption (JWE)」、「Content Encryption Key (CEK)」、「JWE Compact Serialization」、「JWE Encrypted Key」、および「JWE Initialization Vector」の用語は、JWE 仕様書 <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/> で定義されています。</t>
      <t indent="0" pn="section-2-3">「Ciphertext」、「Digital Signature」、「Message Authentication Code (MAC)」、および「Plaintext」の用語は、「Internet Security Glossary, Version 2」<xref target="RFC4949" format="default" sectionFormat="of" derivedContent="RFC4949"/> で定義されています。</t>
      <t indent="0" pn="section-2-4">この仕様書で定義される用語は次のとおりです。</t>
      <t indent="0" pn="section-2-5">JSON Web Token (JWT)
        JWS または JWE でエンコードされた JSON オブジェクトとして表されるクレームのセットを表す文字列であり、クレームをデジタル署名または MAC によって整合性保護および/または暗号化することができます。</t>
      <t indent="0" pn="section-2-6">JWT Claims Set
        JWT によって伝達されるクレームを含む JSON オブジェクト。</t>
      <t indent="0" pn="section-2-7">クレーム
        主体に関して主張された情報の一部。クレームは、クレーム名とクレーム値からなる名前/値ペアとして表されます。</t>
      <t indent="0" pn="section-2-8">クレーム名
        クレーム表現の名前部分。クレーム名は常に文字列です。</t>
      <t indent="0" pn="section-2-9">クレーム値
        クレーム表現の値部分。クレーム値は任意の JSON 値であることができます。</t>
      <t indent="0" pn="section-2-10">ネストされた JWT
        ネストされた署名および/または暗号化が使用されている JWT。ネストされた JWT では、JWT がそれぞれ JWS または JWE 構造のペイロードまたは平文値として使用されます。</t>
      <t indent="0" pn="section-2-11">未保護 JWT
        クレームが整合性保護または暗号化されていない JWT。</t>
      <t indent="0" pn="section-2-12">衝突耐性名前
        名前空間内の名前を割り当てるための方法を提供し、他の名前と高い確率で衝突しないようにします。衝突耐性名前空間の例には、ドメイン名、ITU-T X.660 および X.670 勧告シリーズで定義されたオブジェクト識別子 (OID)、および Universally Unique IDentifiers (UUIDs) <xref target="RFC4122" format="default" sectionFormat="of" derivedContent="RFC4122"/> が含まれます。管理委任された名前空間を使用する場合、名前の定義者は、名前を定義するために使用する名前空間の一部を管理していることを合理的に確認する必要があります。</t>
      <t indent="0" pn="section-2-13">StringOrURI
        JSON 文字列値であり、任意の文字列値を使用できるが、&quot;:&quot; 文字を含む値は URI <xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/> である必要があるという追加要件がある。StringOrURI 値は、変換や正規化が適用されない大文字小文字を区別する文字列として比較されます。</t>
      <t indent="0" pn="section-2-14">NumericDate
        UTC 1970 年 1 月 1 日 00:00:00 から指定された UTC 日時までの秒数を表す JSON 数値値であり、うるう秒を無視します。これは、IEEE Std 1003.1、2013 Edition <xref target="POSIX.1" format="default" sectionFormat="of" derivedContent="POSIX.1"/> の定義「Epoch からの秒数」に相当し、非整数値を表現できることを除いて、1 日が正確に 86400 秒で計算されることを意味します。一般的な日付/時刻および UTC に関する詳細については、RFC 3339 <xref target="RFC3339" format="default" sectionFormat="of" derivedContent="RFC3339"/> を参照してください。</t>
    </section>
    <section anchor="json-web-token-(jwt)-overview" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-json-web-token-(jwt)-overview">JSON Web Token (JWT) 概要</name>
      <t indent="0" pn="section-3-1">JWT は、JWS および/または JWE 構造でエンコードされた JSON オブジェクトとして、クレームのセットを表します。この JSON オブジェクトは JWT クレームセットと呼ばれます。RFC 7159 のセクション 4 <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/> に従い、JSON オブジェクトは、名前が文字列で値が任意の JSON 値である 1 つ以上の名前/値ペア (またはメンバ) で構成されます。これらのメンバは JWT によって表されるクレームです。この JSON オブジェクト <bcp14>MAY</bcp14> は、RFC 7159 のセクション 2 <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/> に従い、JSON 値または構造文字の前後に空白と/または改行を含めることができます。</t>
      <t indent="0" pn="section-3-2">JWT クレームセット内のメンバ名は、クレーム名と呼ばれます。対応する値は、クレーム値と呼ばれます。</t>
      <t indent="0" pn="section-3-3">JOSE ヘッダの内容は、JWT クレームセットに適用される暗号操作を記述します。JOSE ヘッダが JWS 用である場合、JWT は JWS として表され、クレームはデジタル署名または MAC によって整合性保護され、JWT クレームセットが JWS ペイロードとなります。JOSE ヘッダが JWE 用である場合、JWT は JWE として表され、クレームは暗号化され、JWT クレームセットが JWE によって暗号化された平文となります。JWT は、ネストされた JWT を作成するために別の JWE または JWS 構造に包まれることがあり、ネストされた署名および暗号化を実行することができます。</t>
      <t indent="0" pn="section-3-4">JWT は、URL セーフな部分のシーケンスで表され、各部分はピリオド ('.') 文字で区切られます。各部分には、base64url エンコードされた値が含まれます。JWT の部分数は、JWS Compact Serialization または JWE Compact Serialization を使用して得られた JWS の表現に依存します。</t>
      <section anchor="example-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-example-jwt">JWT の例</name>
        <t indent="0" pn="section-3.1-1">次の JOSE ヘッダの例は、エンコードされたオブジェクトが JWT であり、JWT が HMAC SHA-256 アルゴリズムを使用して MAC された JWS であることを宣言しています。</t>
        <t indent="0" pn="section-3.1-2"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"typ":"JWT",
   "alg":"HS256"}
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-3">JSON オブジェクトの表現における曖昧さを排除するために、上記の JOSE ヘッダで使用された実際の UTF-8 表現のオクテットシーケンスも以下に含まれています。 (異なるプラットフォームでの行区切りの表現 (CRLF と LF)、行の先頭と末尾のスペースの違い、最後の行に行区切りがあるかどうかなど、異なる原因により曖昧さが生じることがあります。この例で使用される表現では、最初の行には先頭または末尾のスペースがなく、CRLF 行区切り (13, 10) が最初の行と 2 番目の行の間に挿入され、2 番目の行には先頭に 1 つのスペース (32) があり、末尾にスペースがなく、最後の行には行区切りがありません。) この例での JOSE ヘッダの UTF-8 表現を表すオクテットは、JSON 配列表記を使用して次のようになります:</t>
        <t indent="0" pn="section-3.1-4">[123, 34, 116, 121, 112, 34, 58, 34, 74, 87, 84, 34, 44, 13, 10, 32,
34, 97, 108, 103, 34, 58, 34, 72, 83, 50, 53, 54, 34, 125]</t>
        <t indent="0" pn="section-3.1-5">JOSE ヘッダの UTF-8 表現のオクテットを base64url エンコードすると、次のエンコードされた JOSE ヘッダ値が得られます:</t>
        <t indent="0" pn="section-3.1-6"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-7">以下は、JWT クレームセットの例です:</t>
        <t indent="0" pn="section-3.1-8"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"iss":"joe",
   "exp":1300819380,
   "http://example.com/is_root":true}
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-9">以下は、この例で使用される JWT クレームセットの UTF-8 表現であるオクテットシーケンスであり、JWS ペイロードです:</t>
        <t indent="0" pn="section-3.1-10">[123, 34, 105, 115, 115, 34, 58, 34, 106, 111, 101, 34, 44, 13, 10,
32, 34, 101, 120, 112, 34, 58, 49, 51, 48, 48, 56, 49, 57, 51, 56,
48, 44, 13, 10, 32, 34, 104, 116, 116, 112, 58, 47, 47, 101, 120, 97,
109, 112, 108, 101, 46, 99, 111, 109, 47, 105, 115, 95, 114, 111,
111, 116, 34, 58, 116, 114, 117, 101, 125]
Base64url encoding the JWS Payload yields this encoded JWS Payload
(with line breaks for display purposes only):</t>
        <t indent="0" pn="section-3.1-11"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly
  9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-12">エンコードされた JOSE ヘッダとエンコードされた JWS ペイロードの MAC を HMAC SHA-256 アルゴリズムで計算し、HMAC 値を <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> で指定された方法で base64url エンコードすると、次のエンコードされた JWS シグネチャが得られます:</t>
        <t indent="0" pn="section-3.1-13"><artwork name="" type="" align="left" alt=""><![CDATA[
  dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-14">これらのエンコードされた部分をこの順序でピリオド ('.') 文字で連結すると、次の完全な JWT が得られます (表示目的の改行を含む):</t>
        <t indent="0" pn="section-3.1-15"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9
  .
  eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt
  cGxlLmNvbS9pc19yb290Ijp0cnVlfQ
  .
  dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
]]></artwork>
</t>
        <t indent="0" pn="section-3.1-16">この計算については、<xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> の付録 A.1 で詳しく説明されています。暗号化された JWT の例については、付録 A.1 を参照してください。</t>
      </section>
    </section>
    <section anchor="jwt-claims" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-jwt-claims">JWT クレーム</name>
      <t indent="0" pn="section-4-1">JWT クレームセットは、JWT によって伝達されるクレームを表す JSON オブジェクトであり、そのメンバはクレームを表します。JWT クレームセット内のクレーム名は一意である必要があります。JWT パーサーは、重複するクレーム名を持つ JWT を拒否するか、ECMAScript 5.1 のセクション 15.12 (&quot;The JSON Object&quot;) で指定されているように、レキシカルに最後の重複メンバ名のみを返す JSON パーサーを使用する必要があります。</t>
      <t indent="0" pn="section-4-2">JWT が有効と見なされるために含まれる必要があるクレームのセットは、文脈に依存し、この仕様の範囲外です。JWT の特定のアプリケーションでは、実装が特定の方法でいくつかのクレームを理解して処理する必要があります。ただし、そのような要件がない場合、実装に理解されないすべてのクレームは無視される<bcp14>MUST</bcp14>です。</t>
      <t indent="0" pn="section-4-3">There are three classes of JWT Claim Names: Registered Claim Names,
Public Claim Names, and Private Claim Names.</t>
      <section anchor="registered-claim-names" numbered="true" removeInRFC="false" toc="include" pn="section-4.1">
        <name slugifiedName="name-registered-claim-names">登録済みクレーム名</name>
        <t indent="0" pn="section-4.1-1">以下のクレーム名は、セクション 10.1 で設立された IANA「JSON Web Token Claims」レジストリに登録されています。以下で定義されたクレームのいずれも、すべての場合において使用または実装することを必須とするものではありません。代わりに、有用で相互運用可能なクレームのセットの出発点を提供します。JWT を使用するアプリケーションは、使用する特定のクレームと、必須またはオプションである場合を定義する必要があります。すべての名前は短くなっています。なぜなら、JWT のコアゴールは表現がコンパクトであることです。</t>
        <section anchor="&quot;iss&quot;-(issuer)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.1">
          <name slugifiedName="name-&quot;iss&quot;-(issuer)-claim">&quot;iss&quot; (issuer) クレーム</name>
          <t indent="0" pn="section-4.1.1-1">&quot;iss&quot; (issuer) クレームは、JWT を発行したプリンシパルを識別します。このクレームの処理は一般にアプリケーション固有です。&quot;iss&quot; の値は、StringOrURI 値を含む大文字と小文字を区別する文字列です。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;sub&quot;-(subject)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.2">
          <name slugifiedName="name-&quot;sub&quot;-(subject)-claim">&quot;sub&quot; (Subject) クレーム</name>
          <t indent="0" pn="section-4.1.2-1">&quot;sub&quot; (subject) クレームは、JWT の主体であるプリンシパルを識別します。JWT 内のクレームは通常、主体に関する文を表します。&quot;sub&quot; の値は、発行者の文脈でローカルに一意であるようにスコープが設定されているか、グローバルに一意である必要があります。<bcp14>このクレームの処理は一般にアプリケーション固有です。</bcp14> &quot;sub&quot; の値は、StringOrURI 値を含む大文字と小文字を区別する文字列です。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;aud&quot;-(audience)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.3">
          <name slugifiedName="name-&quot;aud&quot;-(audience)-claim">&quot;aud&quot; (Audience)クレーム</name>
          <t indent="0" pn="section-4.1.3-1">&quot;aud&quot; (Audience) クレームは、JWT が意図する受信者を識別します。JWT を処理する各プリンシパルは、&quot;aud&quot; クレーム内の値で自己を識別する<bcp14>必要があります</bcp14>。このクレームが存在する場合、クレームを処理するプリンシパルが &quot;aud&quot; クレーム内の値で自己を識別しない場合、JWT は<bcp14>拒否される必要があります</bcp14>。一般的な場合、&quot;aud&quot; の値は、StringOrURI 値を含む大文字と小文字を区別する文字列の配列です。JWT に受信者が1つしかない場合、&quot;aud&quot; の値は、StringOrURI 値を含む大文字と小文字を区別する単一の文字列である<bcp14>場合があります</bcp14>。受信者値の解釈は、一般的にアプリケーション固有です。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;exp&quot;-(expiration-time)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.4">
          <name slugifiedName="name-&quot;exp&quot;-(expiration-time)-claim">&quot;exp&quot; (Expiration Time) クレーム</name>
          <t indent="0" pn="section-4.1.4-1">「exp」（有効期限）クレームは、JWTが処理される前に受け入れては<bcp14>ならない</bcp14>有効期限を識別します。「exp」クレームの処理には、現在の日付/時刻が「exp」クレームにリストされた有効期限日時の<bcp14>前である</bcp14>必要があります。</t>
          <t indent="0" pn="section-4.1.4-2">実装者は、クロックスキューを考慮に入れるために、通常数分以内のわずかな余地を提供することが<bcp14>できます</bcp14>。その値は、NumericDate値を含む数値である<bcp14>必要があります</bcp14>。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;nbf&quot;-(not-before)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.5">
          <name slugifiedName="name-&quot;nbf&quot;-(not-before)-claim">&quot;nbf&quot; (Not Before) クレーム</name>
          <t indent="0" pn="section-4.1.5-1">&quot;nbf&quot; (有効開始日時) クレームは、JWTが処理される前に受け入れては<bcp14>ならない</bcp14>有効開始日時を識別します。「nbf」クレームの処理には、現在の日付/時刻が「nbf」クレームにリストされた有効開始日時の<bcp14>後である</bcp14>必要があります。実装者は、クロックスキューを考慮に入れるために、通常数分以内のわずかな余地を提供することが<bcp14>できます</bcp14>。その値は、NumericDate値を含む数値である<bcp14>必要があります</bcp14>。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;iat&quot;-(issued-at)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.6">
          <name slugifiedName="name-&quot;iat&quot;-(issued-at)-claim">&quot;iat&quot; (Issued At) クレーム</name>
          <t indent="0" pn="section-4.1.6-1">&quot;iat&quot; (発行日時) クレームは、JWTが発行された時刻を識別します。このクレームは、JWTの年齢を決定するために使用できます。その値は、NumericDate値を含む数値である<bcp14>必要があります</bcp14>。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
        <section anchor="&quot;jti&quot;-(jwt-id)-claim" numbered="true" removeInRFC="false" toc="include" pn="section-4.1.7">
          <name slugifiedName="name-&quot;jti&quot;-(jwt-id)-claim">&quot;jti&quot; (JWT ID) クレーム</name>
          <t indent="0" pn="section-4.1.7-1">&quot;jti&quot; (JWT ID) クレームは、JWTの一意の識別子を提供します。識別子の値は、異なるデータオブジェクトに<bcp14>誤って</bcp14>同じ値が割り当てられる可能性が極めて低いように割り当てる<bcp14>必要があります</bcp14>。アプリケーションが複数の発行者を使用する場合、異なる発行者によって生成された値の間で衝突が<bcp14>防止されなければなりません</bcp14>。 「jti」クレームは、JWTの再生を防止するために使用できます。 「jti」の値は、大文字と小文字を区別する文字列です。このクレームの使用は<bcp14>オプション</bcp14>です。</t>
        </section>
      </section>
      <section anchor="public-claim-names" numbered="true" removeInRFC="false" toc="include" pn="section-4.2">
        <name slugifiedName="name-public-claim-names">公開クレーム名</name>
        <t indent="0" pn="section-4.2-1">クレーム名は、JWTを使用する人々によって自由に定義できます。ただし、衝突を防ぐために、新しいクレーム名は、セクション10.1で確立されたIANA「JSON Web Token Claims」レジストリに登録されるか、パブリック名である必要があります。パブリック名とは、衝突耐性のある名前を含む値のことです。いずれの場合も、名前または値の定義者は、クレーム名を定義するために使用する名前空間の一部を制御していることを確認するために合理的な注意を払う必要があります。</t>
      </section>
      <section anchor="private-claim-names" numbered="true" removeInRFC="false" toc="include" pn="section-4.3">
        <name slugifiedName="name-private-claim-names">非公開クレーム名</name>
        <t indent="0" pn="section-4.3-1">JWTの生成者と消費者は、登録されたクレーム名（セクション4.1）または公開クレーム名（セクション4.2）ではないプライベートクレーム名を使用することに同意する<bcp14>ことができます</bcp14>。公開クレーム名とは異なり、プライベートクレーム名は衝突の可能性があるため、注意して使用する必要があります。</t>
      </section>
    </section>
    <section anchor="jose-header" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-jose-header">JOSE ヘッダー</name>
      <t indent="0" pn="section-5-1">JWTオブジェクトの場合、JOSEヘッダーによって表されるJSONオブジェクトのメンバーは、JWTに適用される暗号操作と、オプションでJWTの追加プロパティを説明します。 JWTがJWSまたはJWEであるかどうかに応じて、JOSEヘッダー値の対応するルールが適用されます。</t>
      <t indent="0" pn="section-5-2">この仕様では、JWTがJWSである場合とJWEである場合の両方で、次のヘッダーパラメータの使用方法がさらに指定されています。</t>
      <section anchor="&quot;typ&quot;-(type)-header-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-&quot;typ&quot;-(type)-header-parameter">&quot;typ&quot; (Type) ヘッダーパラメーター</name>
        <t indent="0" pn="section-5.1-1">&quot;typ&quot; (Type) ヘッダーパラメーターは、<xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> および <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/> によって定義され、JWTアプリケーションで使用されます。このパラメーターは、JWTオブジェクトが含まれるアプリケーションデータ構造にもJWT以外の値が存在する場合に、JWTアプリケーションがこの完全なJWTのメディアタイプ<xref target="IANA.MediaTypes" format="default" sectionFormat="of" derivedContent="IANA.MediaTypes"/>を宣言するために使用されます。アプリケーションは、この値を使用して、存在する可能性のある異なる種類のオブジェクトを区別することができます。オブジェクトがJWTであることが既にわかっている場合、通常はアプリケーションによって使用されません。このパラメーターは、JWT実装によって無視されます。このパラメーターの処理は、JWTアプリケーションによって実行されます。存在する場合、その値が「JWT」であることを示すために使用されることが<bcp14>推奨されません（NOT RECOMMENDED）</bcp14>。メディアタイプ名は大文字小文字を区別しないため、レガシー実装との互換性のために、常に大文字で「JWT」と綴ることが<bcp14>推奨されます（RECOMMENDED）</bcp14>。このヘッダーパラメーターの使用は<bcp14>選択できます（OPTIONAL）</bcp14></t>
      </section>
      <section anchor="&quot;cty&quot;-(content-type)-header-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-&quot;cty&quot;-(content-type)-header-parameter">&quot;cty&quot; (コンテンツタイプ) ヘッダーパラメーター</name>
        <t indent="0" pn="section-5.2-1">&quot;cty&quot; (コンテンツタイプ) ヘッダーパラメーターは、<xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> および <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/> によって定義され、この仕様ではJWTの構造に関する情報を伝達するために使用されます。</t>
        <t indent="0" pn="section-5.2-2">通常、ネストされた署名または暗号化操作が使用されていない場合、このヘッダーパラメーターの使用は<bcp14>推奨されません（NOT RECOMMENDED）</bcp14>。ネストされた署名または暗号化が使用されている場合、このヘッダーパラメーターは必ず存在<bcp14>しなければなりません（MUST）</bcp14>。この場合、値は「JWT」である<bcp14>必要があります（MUST）</bcp14>。これは、このJWTにネストされたJWTが含まれていることを示すために使用されます。メディアタイプ名は大文字小文字を区別しないため、レガシー実装との互換性のために、常に大文字で「JWT」と綴ることが<bcp14>推奨されます（RECOMMENDED）</bcp14>。ネストされたJWTの例については、付録A.2を参照してください。</t>
      </section>
      <section anchor="replicating-claims-as-header-parameters" numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-replicating-claims-as-header-parameters">ヘッダーパラメーターとしてクレームを複製する</name>
        <t indent="0" pn="section-5.3-1">暗号化されたJWTを使用する一部のアプリケーションでは、一部のクレームの暗号化されていない表現が有用です。これは、例えば、JWTが復号化される前にJWTを処理する必要があるかどうか、およびどのように処理するかを決定するためのアプリケーション処理ルールで使用される場合があります。</t>
        <t indent="0" pn="section-5.3-2">この仕様では、JWT Claims Setに存在するクレームを、アプリケーションが必要に応じてJWTのヘッダーパラメーターとして複製することができます。このような複製されたクレームが存在する場合、受信するアプリケーションは、これらの値が同一であることを検証することが<bcp14>推奨されます（RECOMMENDED）</bcp14>。ただし、アプリケーションがこれらのクレームに対して他の特定の処理ルールを定義している場合は、異なる値を許容することができます。JWT内のヘッダーパラメーター値として送信することが安全なクレームのみが、ヘッダーパラメーター値として複製されるように、アプリケーションが責任を持って確認する必要があります。</t>
        <t indent="0" pn="section-5.3-3">この仕様のセクション10.4.1では、「iss」（発行者）、 「sub」（主題）、および「aud」（聴衆）ヘッダーパラメーター名が登録され、これらのクレームの暗号化されていないレプリカを必要とするアプリケーションのために提供されます。他の仕様では、必要に応じて登録されたクレーム名をヘッダーパラメーター名として登録<bcp14>してもよいです（MAY）</bcp14>。</t>
      </section>
    </section>
    <section anchor="unsecured-jwts" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-unsecured-jwts">未保護のJWT</name>
      <t indent="0" pn="section-6-1">JWTの内容がJWT内に含まれる署名や暗号化以外の手段（例えば、JWTを含むデータ構造に対する署名）によって保護されるユースケースをサポートするために、署名または暗号化なしでJWTを作成<bcp14>してもよいです（MAY）</bcp14>。未保護のJWTは、JWA仕様<xref target="JWA" format="default" sectionFormat="of" derivedContent="JWA"/>で定義されているように、「alg」ヘッダーパラメーター値「none」を使用し、JWSシグネチャ値に空の文字列を使用したJWSです。未保護のJWTは、JWSペイロードとしてJWT Claims Setを持つ未保護のJWSです。</t>
      <section anchor="example-unsecured-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-example-unsecured-jwt">未保護のJWTの例</name>
        <t indent="0" pn="section-6.1-1">次の例のJOSEヘッダーは、エンコードされたオブジェクトが未保護のJWTであることを宣言しています。</t>
        <t indent="0" pn="section-6.1-2"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"alg":"none"}
]]></artwork>
</t>
        <t indent="0" pn="section-6.1-3">JOSEヘッダーのUTF-8表現のオクテットをBase64urlエンコードすると、次のエンコードされたJOSEヘッダー値が生成されます:</t>
        <t indent="0" pn="section-6.1-4"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJhbGciOiJub25lIn0
]]></artwork>
</t>
        <t indent="0" pn="section-6.1-5">以下は、JWT Claims Setの例です:</t>
        <t indent="0" pn="section-6.1-6"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"iss":"joe",
   "exp":1300819380,
   "http://example.com/is_root":true}
]]></artwork>
</t>
        <t indent="0" pn="section-6.1-7">JWT Claims SetのUTF-8表現のオクテットをBase64urlエンコードすると、次のエンコードされたJWSペイロード値が生成されます（表示目的のために改行が含まれています）:</t>
        <t indent="0" pn="section-6.1-8"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt
  cGxlLmNvbS9pc19yb290Ijp0cnVlfQ
]]></artwork>
</t>
        <t indent="0" pn="section-6.1-9">エンコードされたJWSシグネチャは空の文字列です。</t>
        <t indent="0" pn="section-6.1-10">これらのエンコードされた部分をこの順序でピリオド（「.」）文字で連結すると、次の完全なJWTが生成されます（表示目的のために改行が含まれています）:</t>
        <t indent="0" pn="section-6.1-11"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJhbGciOiJub25lIn0
  .
  eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt
  cGxlLmNvbS9pc19yb290Ijp0cnVlfQ
  .
]]></artwork>
</t>
      </section>
    </section>
    <section anchor="creating-and-validating-jwts" numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-creating-and-validating-jwts">JWTの作成と検証</name>
      <section anchor="creating-a-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-creating-a-jwt">JWTの作成</name>
        <t indent="0" pn="section-7.1-1">JWTを作成するには、以下の手順を実行します。入力と出力の間に依存関係がない場合、手順の順序は重要ではありません。</t>
        <t indent="0" pn="section-7.1-2">1. JWT Claims Setを作成し、必要なクレームを含めます。表現には明示的に空白が許可されており、エンコードする前に正準化する必要はありません。</t>
        <t indent="0" pn="section-7.1-3">2. メッセージを、JWT Claims SetのUTF-8表現のオクテットとします。</t>
        <t indent="0" pn="section-7.1-4">3. ヘッダーパラメーターのセットを含むJOSEヘッダーを作成します。JWTは、<xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/>または<xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/>仕様のいずれかに準拠<bcp14>しなければなりません（MUST）</bcp14>。表現には明示的に空白が許可されており、エンコードする前に正準化する必要はありません。</t>
        <t indent="0" pn="section-7.1-5">4. JWTがJWSまたはJWEであるかに応じて、2つの場合があります:</t>
        <t indent="0" pn="section-7.1-6">
    *  JWTがJWSである場合、JWSのペイロードとしてメッセージを使用してJWSを作成します。JWSを作成するために[JWS]で指定されたすべての手順を守らなければなりません。
</t>
        <t indent="0" pn="section-7.1-7">
    *  さもなければ、JWTがJWEである場合、メッセージをJWEの平文として使用してJWEを作成します。JWEを作成するために[JWE]で指定されたすべての手順を守らなければなりません。
</t>
        <t indent="0" pn="section-7.1-8">5.  ネストされた署名または暗号化操作が実行される場合は、メッセージをJWSまたはJWEとし、そのステップで作成された新しいJOSEヘッダーで「cty」（コンテンツタイプ）値を「JWT」に設定して、ステップ3に戻ります。</t>
        <t indent="0" pn="section-7.1-9">6.  さもなければ、結果として得られたJWTをJWSまたはJWEとします。</t>
      </section>
      <section anchor="validating-a-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-7.2">
        <name slugifiedName="name-validating-a-jwt">Validating a JWT</name>
        <t indent="0" pn="section-7.2-1">When validating a JWT, the following steps are performed.  The order
of the steps is not significant in cases where there are no
dependencies between the inputs and outputs of the steps.  If any of
the listed steps fail, then the JWT <bcp14>MUST</bcp14> be rejected -- that is,
treated by the application as an invalid input.</t>
        <t indent="0" pn="section-7.2-2">1.   Verify that the JWT contains at least one period ('.')
     character.</t>
        <t indent="0" pn="section-7.2-3">2.   Let the Encoded JOSE Header be the portion of the JWT before the
     first period ('.') character.</t>
        <t indent="0" pn="section-7.2-4">3.   Base64url decode the Encoded JOSE Header following the
     restriction that no line breaks, whitespace, or other additional
     characters have been used.</t>
        <t indent="0" pn="section-7.2-5">4.   Verify that the resulting octet sequence is a UTF-8-encoded
     representation of a completely valid JSON object conforming to
     RFC 7159 <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/>; let the JOSE Header be this JSON object.</t>
        <t indent="0" pn="section-7.2-6">5.   Verify that the resulting JOSE Header includes only parameters
     and values whose syntax and semantics are both understood and
     supported or that are specified as being ignored when not
     understood.</t>
        <t indent="0" pn="section-7.2-7">6.   Determine whether the JWT is a JWS or a JWE using any of the
     methods described in Section 9 of <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/>.</t>
        <t indent="0" pn="section-7.2-8">7.   Depending upon whether the JWT is a JWS or JWE, there are two
     cases:</t>
        <t indent="0" pn="section-7.2-9">
     *  If the JWT is a JWS, follow the steps specified in [JWS] for
        validating a JWS.  Let the Message be the result of base64url
        decoding the JWS Payload.
</t>
        <t indent="0" pn="section-7.2-10">
     *  Else, if the JWT is a JWE, follow the steps specified in
        [JWE] for validating a JWE.  Let the Message be the resulting
        plaintext.
</t>
        <t indent="0" pn="section-7.2-11">8.   If the JOSE Header contains a &quot;cty&quot; (content type) value of
     &quot;JWT&quot;, then the Message is a JWT that was the subject of nested
     signing or encryption operations.  In this case, return to Step
     1, using the Message as the JWT.</t>
        <t indent="0" pn="section-7.2-12">9.   Otherwise, base64url decode the Message following the
     restriction that no line breaks, whitespace, or other additional
     characters have been used.</t>
        <t indent="0" pn="section-7.2-13">10.  Verify that the resulting octet sequence is a UTF-8-encoded
     representation of a completely valid JSON object conforming to
     RFC 7159 <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/>; let the JWT Claims Set be this JSON object.</t>
        <t indent="0" pn="section-7.2-14">Finally, note that it is an application decision which algorithms may
be used in a given context.  Even if a JWT can be successfully
validated, unless the algorithms used in the JWT are acceptable to
the application, it <bcp14>SHOULD</bcp14> reject the JWT.</t>
      </section>
      <section anchor="string-comparison-rules" numbered="true" removeInRFC="false" toc="include" pn="section-7.3">
        <name slugifiedName="name-string-comparison-rules">String Comparison Rules</name>
        <t indent="0" pn="section-7.3-1">Processing a JWT inevitably requires comparing known strings to
members and values in JSON objects.  For example, in checking what
the algorithm is, the Unicode <xref target="UNICODE" format="default" sectionFormat="of" derivedContent="UNICODE"/> string encoding &quot;alg&quot; will be
checked against the member names in the JOSE Header to see if there
is a matching Header Parameter name.</t>
        <t indent="0" pn="section-7.3-2">The JSON rules for doing member name comparison are described in
Section 8.3 of RFC 7159 <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/>.  Since the only string comparison
operations that are performed are equality and inequality, the same
rules can be used for comparing both member names and member values
against known strings.</t>
        <t indent="0" pn="section-7.3-3">These comparison rules <bcp14>MUST</bcp14> be used for all JSON string comparisons
except in cases where the definition of the member explicitly calls
out that a different comparison rule is to be used for that member
value.  In this specification, only the &quot;typ&quot; and &quot;cty&quot; member values
do not use these comparison rules.</t>
        <t indent="0" pn="section-7.3-4">Some applications may include case-insensitive information in a case-
sensitive value, such as including a DNS name as part of the &quot;iss&quot;
(issuer) claim value.  In those cases, the application may need to
define a convention for the canonical case to use for representing
the case-insensitive portions, such as lowercasing them, if more than
one party might need to produce the same value so that they can be
compared.  (However, if all other parties consume whatever value the
producing party emitted verbatim without attempting to compare it to
an independently produced value, then the case used by the producer
will not matter.)</t>
      </section>
    </section>
    <section anchor="implementation-requirements" numbered="true" removeInRFC="false" toc="include" pn="section-8">
      <name slugifiedName="name-implementation-requirements">Implementation Requirements</name>
      <t indent="0" pn="section-8-1">This section defines which algorithms and features of this
specification are mandatory to implement.  Applications using this
specification can impose additional requirements upon implementations
that they use.  For instance, one application might require support
for encrypted JWTs and Nested JWTs, while another might require
support for signing JWTs with the Elliptic Curve Digital Signature
Algorithm (ECDSA) using the P-256 curve and the SHA-256 hash
algorithm (&quot;ES256&quot;).</t>
      <t indent="0" pn="section-8-2">Of the signature and MAC algorithms specified in JSON Web Algorithms
<xref target="JWA" format="default" sectionFormat="of" derivedContent="JWA"/>, only HMAC SHA-256 (&quot;HS256&quot;) and &quot;none&quot; <bcp14>MUST</bcp14> be implemented by
conforming JWT implementations.  It is <bcp14>RECOMMENDED</bcp14> that
implementations also support RSASSA-PKCS1-v1_5 with the SHA-256 hash
algorithm (&quot;RS256&quot;) and ECDSA using the P-256 curve and the SHA-256
hash algorithm (&quot;ES256&quot;).  Support for other algorithms and key sizes
is <bcp14>OPTIONAL</bcp14>.</t>
      <t indent="0" pn="section-8-3">Support for encrypted JWTs is <bcp14>OPTIONAL</bcp14>.  If an implementation
provides encryption capabilities, of the encryption algorithms
specified in <xref target="JWA" format="default" sectionFormat="of" derivedContent="JWA"/>, only RSAES-PKCS1-v1_5 with 2048-bit keys
(&quot;RSA1_5&quot;), AES Key Wrap with 128- and 256-bit keys (&quot;A128KW&quot; and
&quot;A256KW&quot;), and the composite authenticated encryption algorithm using
AES-CBC and HMAC SHA-2 (&quot;A128CBC-HS256&quot; and &quot;A256CBC-HS512&quot;) <bcp14>MUST</bcp14> be
implemented by conforming implementations.  It is <bcp14>RECOMMENDED</bcp14> that
implementations also support using Elliptic Curve Diffie-Hellman
Ephemeral Static (ECDH-ES) to agree upon a key used to wrap the
Content Encryption Key (&quot;ECDH-ES+A128KW&quot; and &quot;ECDH-ES+A256KW&quot;) and
AES in Galois/Counter Mode (GCM) with 128- and 256-bit keys
(&quot;A128GCM&quot; and &quot;A256GCM&quot;).  Support for other algorithms and key
sizes is <bcp14>OPTIONAL</bcp14>.</t>
      <t indent="0" pn="section-8-4">Support for Nested JWTs is <bcp14>OPTIONAL</bcp14>.</t>
    </section>
    <section anchor="uri-for-declaring-that-content-is-a-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-9">
      <name slugifiedName="name-uri-for-declaring-that-content-is-a-jwt">URI for Declaring that Content is a JWT</name>
      <t indent="0" pn="section-9-1">This specification registers the URN
&quot;urn:ietf:params:oauth:token-type:jwt&quot; for use by applications that
declare content types using URIs (rather than, for instance, media
types) to indicate that the content referred to is a JWT.</t>
    </section>
    <section anchor="iana-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-10">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="json-web-token-claims-registry" numbered="true" removeInRFC="false" toc="include" pn="section-10.1">
        <name slugifiedName="name-json-web-token-claims-registry">JSON Web Token Claims Registry</name>
        <t indent="0" pn="section-10.1-1">This section establishes the IANA &quot;JSON Web Token Claims&quot; registry
for JWT Claim Names.  The registry records the Claim Name and a
reference to the specification that defines it.  This section
registers the Claim Names defined in Section 4.1.</t>
        <t indent="0" pn="section-10.1-2">Values are registered on a Specification Required <xref target="RFC5226" format="default" sectionFormat="of" derivedContent="RFC5226"/> basis
after a three-week review period on the jwt-reg-review@ietf.org
mailing list, on the advice of one or more Designated Experts.
However, to allow for the allocation of values prior to publication,
the Designated Experts may approve registration once they are
satisfied that such a specification will be published.</t>
        <t indent="0" pn="section-10.1-3">Registration requests sent to the mailing list for review should use
an appropriate subject (e.g., &quot;Request to register claim: example&quot;).</t>
        <t indent="0" pn="section-10.1-4">Within the review period, the Designated Experts will either approve
or deny the registration request, communicating this decision to the
review list and IANA.  Denials should include an explanation and, if
applicable, suggestions as to how to make the request successful.
Registration requests that are undetermined for a period longer than
21 days can be brought to the IESG's attention (using the
iesg@ietf.org mailing list) for resolution.</t>
        <t indent="0" pn="section-10.1-5">Criteria that should be applied by the Designated Experts includes
determining whether the proposed registration duplicates existing
functionality, whether it is likely to be of general applicability or
whether it is useful only for a single application, and whether the
registration description is clear.</t>
        <t indent="0" pn="section-10.1-6">IANA must only accept registry updates from the Designated Experts
and should direct all requests for registration to the review mailing
list.</t>
        <t indent="0" pn="section-10.1-7">It is suggested that multiple Designated Experts be appointed who are
able to represent the perspectives of different applications using
this specification, in order to enable broadly informed review of
registration decisions.  In cases where a registration decision could
be perceived as creating a conflict of interest for a particular
Expert, that Expert should defer to the judgment of the other
Experts.</t>
        <section anchor="registration-template" numbered="true" removeInRFC="false" toc="include" pn="section-10.1.1">
          <name slugifiedName="name-registration-template">Registration Template</name>
          <t indent="0" pn="section-10.1.1-1">Claim Name:
   The name requested (e.g., &quot;iss&quot;).  Because a core goal of this
   specification is for the resulting representations to be compact,
   it is <bcp14>RECOMMENDED</bcp14> that the name be short -- that is, not to exceed
   8 characters without a compelling reason to do so.  This name is
   case sensitive.  Names may not match other registered names in a
   case-insensitive manner unless the Designated Experts state that
   there is a compelling reason to allow an exception.</t>
          <t indent="0" pn="section-10.1.1-2">Claim Description:
   Brief description of the claim (e.g., &quot;Issuer&quot;).</t>
          <t indent="0" pn="section-10.1.1-3">Change Controller:
   For Standards Track RFCs, list the &quot;IESG&quot;.  For others, give the
   name of the responsible party.  Other details (e.g., postal
   address, email address, home page URI) may also be included.</t>
          <t indent="0" pn="section-10.1.1-4">Specification Document(s):
   Reference to the document or documents that specify the parameter,
   preferably including URIs that can be used to retrieve copies of
   the documents.  An indication of the relevant sections may also be
   included but is not required.</t>
        </section>
        <section anchor="initial-registry-contents" numbered="true" removeInRFC="false" toc="include" pn="section-10.1.2">
          <name slugifiedName="name-initial-registry-contents">Initial Registry Contents</name>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-1">
            <li pn="section-10.1.2-1.1"> Claim Name: &quot;iss&quot;</li>
            <li pn="section-10.1.2-1.2"> Claim Description: Issuer</li>
            <li pn="section-10.1.2-1.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-1.4"> Specification Document(s): Section 4.1.1 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-2">
            <li pn="section-10.1.2-2.1"> Claim Name: &quot;sub&quot;</li>
            <li pn="section-10.1.2-2.2"> Claim Description: Subject</li>
            <li pn="section-10.1.2-2.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-2.4"> Specification Document(s): Section 4.1.2 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-3">
            <li pn="section-10.1.2-3.1"> Claim Name: &quot;aud&quot;</li>
            <li pn="section-10.1.2-3.2"> Claim Description: Audience</li>
            <li pn="section-10.1.2-3.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-3.4"> Specification Document(s): Section 4.1.3 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-4">
            <li pn="section-10.1.2-4.1"> Claim Name: &quot;exp&quot;</li>
            <li pn="section-10.1.2-4.2"> Claim Description: Expiration Time</li>
            <li pn="section-10.1.2-4.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-4.4"> Specification Document(s): Section 4.1.4 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-5">
            <li pn="section-10.1.2-5.1"> Claim Name: &quot;nbf&quot;</li>
            <li pn="section-10.1.2-5.2"> Claim Description: Not Before</li>
            <li pn="section-10.1.2-5.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-5.4"> Specification Document(s): Section 4.1.5 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-6">
            <li pn="section-10.1.2-6.1"> Claim Name: &quot;iat&quot;</li>
            <li pn="section-10.1.2-6.2"> Claim Description: Issued At</li>
            <li pn="section-10.1.2-6.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-6.4"> Specification Document(s): Section 4.1.6 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.1.2-7">
            <li pn="section-10.1.2-7.1"> Claim Name: &quot;jti&quot;</li>
            <li pn="section-10.1.2-7.2"> Claim Description: JWT ID</li>
            <li pn="section-10.1.2-7.3"> Change Controller: IESG</li>
            <li pn="section-10.1.2-7.4"> Specification Document(s): Section 4.1.7 of RFC 7519</li>
          </ul>
        </section>
      </section>
      <section anchor="sub-namespace-registration-of" numbered="true" removeInRFC="false" toc="include" pn="section-10.2">
        <name slugifiedName="name-sub-namespace-registration-of">Sub-Namespace Registration of</name>
        <t indent="0" pn="section-10.2-1"><artwork name="" type="" align="left" alt=""><![CDATA[
  urn:ietf:params:oauth:token-type:jwt
]]></artwork>
</t>
        <section anchor="registry-contents" numbered="true" removeInRFC="false" toc="include" pn="section-10.2.1">
          <name slugifiedName="name-registry-contents">Registry Contents</name>
          <t indent="0" pn="section-10.2.1-1">This section registers the value &quot;token-type:jwt&quot; in the IANA &quot;OAuth
URI&quot; registry established by &quot;An IETF URN Sub-Namespace for OAuth&quot;
<xref target="RFC6755" format="default" sectionFormat="of" derivedContent="RFC6755"/>, which can be used to indicate that the content is a JWT.</t>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.2.1-2">
            <li pn="section-10.2.1-2.1"> URN: urn:ietf:params:oauth:token-type:jwt</li>
            <li pn="section-10.2.1-2.2"> Common Name: JSON Web Token (JWT) Token Type</li>
            <li pn="section-10.2.1-2.3"> Change Controller: IESG</li>
            <li pn="section-10.2.1-2.4"> Specification Document(s): RFC 7519</li>
          </ul>
        </section>
      </section>
      <section anchor="media-type-registration" numbered="true" removeInRFC="false" toc="include" pn="section-10.3">
        <name slugifiedName="name-media-type-registration">Media Type Registration</name>
        <section anchor="registry-contents" numbered="true" removeInRFC="false" toc="include" pn="section-10.3.1">
          <name slugifiedName="name-registry-contents">Registry Contents</name>
          <t indent="0" pn="section-10.3.1-1">This section registers the &quot;application/jwt&quot; media type <xref target="RFC2046" format="default" sectionFormat="of" derivedContent="RFC2046"/> in
the &quot;Media Types&quot; registry <xref target="IANA.MediaTypes" format="default" sectionFormat="of" derivedContent="IANA.MediaTypes"/> in the manner described
in RFC 6838 <xref target="RFC6838" format="default" sectionFormat="of" derivedContent="RFC6838"/>, which can be used to indicate that the content
is a JWT.</t>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.3.1-2">
            <li pn="section-10.3.1-2.1"> Type name: application</li>
            <li pn="section-10.3.1-2.2"> Subtype name: jwt</li>
            <li pn="section-10.3.1-2.3"> Required parameters: n/a</li>
            <li pn="section-10.3.1-2.4"> Optional parameters: n/a</li>
            <li pn="section-10.3.1-2.5"> Encoding considerations: 8bit; JWT values are encoded as a series
   of base64url-encoded values (some of which may be the empty
   string) separated by period ('.') characters.</li>
            <li pn="section-10.3.1-2.6"> Security considerations: See the Security Considerations section
   of RFC 7519</li>
            <li pn="section-10.3.1-2.7"> Interoperability considerations: n/a</li>
            <li pn="section-10.3.1-2.8"> Published specification: RFC 7519</li>
            <li pn="section-10.3.1-2.9"> Applications that use this media type: OpenID Connect, Mozilla
   Persona, Salesforce, Google, Android, Windows Azure, Amazon Web
   Services, and numerous others</li>
            <li pn="section-10.3.1-2.10"> Fragment identifier considerations: n/a</li>
            <li pn="section-10.3.1-2.11"> Additional information:</li>
          </ul>
          <t indent="0" pn="section-10.3.1-3"><artwork name="" type="" align="left" alt=""><![CDATA[
      Magic number(s): n/a
      File extension(s): n/a
      Macintosh file type code(s): n/a
]]></artwork>
</t>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.3.1-4">
            <li pn="section-10.3.1-4.1"> Person &amp; email address to contact for further information:
   Michael B. Jones, mbj@microsoft.com</li>
            <li pn="section-10.3.1-4.2"> Intended usage: COMMON</li>
            <li pn="section-10.3.1-4.3"> Restrictions on usage: none</li>
            <li pn="section-10.3.1-4.4"> Author: Michael B. Jones, mbj@microsoft.com</li>
            <li pn="section-10.3.1-4.5"> Change controller: IESG</li>
            <li pn="section-10.3.1-4.6"> Provisional registration?  No</li>
          </ul>
        </section>
      </section>
      <section anchor="header-parameter-names-registration" numbered="true" removeInRFC="false" toc="include" pn="section-10.4">
        <name slugifiedName="name-header-parameter-names-registration">Header Parameter Names Registration</name>
        <t indent="0" pn="section-10.4-1">This section registers specific Claim Names defined in Section 4.1 in
the IANA &quot;JSON Web Signature and Encryption Header Parameters&quot;
registry established by <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> for use by claims replicated as Header
Parameters in JWEs, per Section 5.3.</t>
        <section anchor="registry-contents" numbered="true" removeInRFC="false" toc="include" pn="section-10.4.1">
          <name slugifiedName="name-registry-contents">Registry Contents</name>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.4.1-1">
            <li pn="section-10.4.1-1.1"> Header Parameter Name: &quot;iss&quot;</li>
            <li pn="section-10.4.1-1.2"> Header Parameter Description: Issuer</li>
            <li pn="section-10.4.1-1.3"> Header Parameter Usage Location(s): JWE</li>
            <li pn="section-10.4.1-1.4"> Change Controller: IESG</li>
            <li pn="section-10.4.1-1.5"> Specification Document(s): Section 4.1.1 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.4.1-2">
            <li pn="section-10.4.1-2.1"> Header Parameter Name: &quot;sub&quot;</li>
            <li pn="section-10.4.1-2.2"> Header Parameter Description: Subject</li>
            <li pn="section-10.4.1-2.3"> Header Parameter Usage Location(s): JWE</li>
            <li pn="section-10.4.1-2.4"> Change Controller: IESG</li>
            <li pn="section-10.4.1-2.5"> Specification Document(s): Section 4.1.2 of RFC 7519</li>
          </ul>
          <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-10.4.1-3">
            <li pn="section-10.4.1-3.1"> Header Parameter Name: &quot;aud&quot;</li>
            <li pn="section-10.4.1-3.2"> Header Parameter Description: Audience</li>
            <li pn="section-10.4.1-3.3"> Header Parameter Usage Location(s): JWE</li>
            <li pn="section-10.4.1-3.4"> Change Controller: IESG</li>
            <li pn="section-10.4.1-3.5"> Specification Document(s): Section 4.1.3 of RFC 7519</li>
          </ul>
        </section>
      </section>
    </section>
    <section anchor="security-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-11">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-11-1">All of the security issues that are pertinent to any cryptographic
application must be addressed by JWT/JWS/JWE/JWK agents.  Among these
issues are protecting the user's asymmetric private and symmetric
secret keys and employing countermeasures to various attacks.</t>
      <t indent="0" pn="section-11-2">All the security considerations in the JWS specification also apply
to JWT, as do the JWE security considerations when encryption is
employed.  In particular, Sections 10.12 (&quot;JSON Security
Considerations&quot;) and 10.13 (&quot;Unicode Comparison Security
Considerations&quot;) of <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> apply equally to the JWT Claims Set in the
same manner that they do to the JOSE Header.</t>
      <section anchor="trust-decisions" numbered="true" removeInRFC="false" toc="include" pn="section-11.1">
        <name slugifiedName="name-trust-decisions">Trust Decisions</name>
        <t indent="0" pn="section-11.1-1">The contents of a JWT cannot be relied upon in a trust decision
unless its contents have been cryptographically secured and bound to
the context necessary for the trust decision.  In particular, the
key(s) used to sign and/or encrypt the JWT will typically need to
verifiably be under the control of the party identified as the issuer
of the JWT.</t>
      </section>
      <section anchor="signing-and-encryption-order" numbered="true" removeInRFC="false" toc="include" pn="section-11.2">
        <name slugifiedName="name-signing-and-encryption-order">Signing and Encryption Order</name>
        <t indent="0" pn="section-11.2-1">While syntactically the signing and encryption operations for Nested
JWTs may be applied in any order, if both signing and encryption are
necessary, normally producers should sign the message and then
encrypt the result (thus encrypting the signature).  This prevents
attacks in which the signature is stripped, leaving just an encrypted
message, as well as providing privacy for the signer.  Furthermore,
signatures over encrypted text are not considered valid in many
jurisdictions.</t>
        <t indent="0" pn="section-11.2-2">Note that potential concerns about security issues related to the
order of signing and encryption operations are already addressed by
the underlying JWS and JWE specifications; in particular, because JWE
only supports the use of authenticated encryption algorithms,
cryptographic concerns about the potential need to sign after
encryption that apply in many contexts do not apply to this
specification.</t>
      </section>
    </section>
    <section anchor="privacy-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-12">
      <name slugifiedName="name-privacy-considerations">Privacy Considerations</name>
      <t indent="0" pn="section-12-1">A JWT may contain privacy-sensitive information.  When this is the
case, measures <bcp14>MUST</bcp14> be taken to prevent disclosure of this
information to unintended parties.  One way to achieve this is to use
an encrypted JWT and authenticate the recipient.  Another way is to
ensure that JWTs containing unencrypted privacy-sensitive information
are only transmitted using protocols utilizing encryption that
support endpoint authentication, such as Transport Layer Security
(TLS).  Omitting privacy-sensitive information from a JWT is the
simplest way of minimizing privacy issues.</t>
    </section>
  </middle>
  <back>
    <references pn="section-13">
      <name slugifiedName="name-references">References</name>
      <references pn="section-13.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="ECMAScript" target="http://www.ecma-international.org/ecma-262/5.1/ ECMA-262.pdf" quoteTitle="true" derivedAnchor="ECMAScript">
          <front>
            <title>ECMAScript Language Specification, 5.1 Edition</title>
            <date year="2011" month="June"/>
          </front>
        </reference>
        <reference anchor="IANA.MediaTypes" target="http://www.iana.org/assignments/media-types" quoteTitle="true" derivedAnchor="IANA.MediaTypes">
          <front>
            <title>Media Types</title>
          </front>
        </reference>
        <reference anchor="JWA" target="http://www.rfc-editor.org/info/rfc7518" quoteTitle="true" derivedAnchor="JWA">
          <front>
            <title>JSON Web Algorithms (JWA)</title>
            <date year="2015" month="May"/>
          </front>
          <seriesInfo name="RFC">7518</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC7518</seriesInfo>
        </reference>
        <reference anchor="JWE" target="http://www.rfc-editor.org/info/rfc7516" quoteTitle="true" derivedAnchor="JWE">
          <front>
            <title>JSON Web Encryption (JWE)</title>
            <date year="2015" month="May"/>
          </front>
          <seriesInfo name="RFC">7516</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC7516</seriesInfo>
        </reference>
        <reference anchor="JWS" target="http://www.rfc-editor.org/info/rfc7515" quoteTitle="true" derivedAnchor="JWS">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <date year="2015" month="May"/>
          </front>
          <seriesInfo name="RFC">7515</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC</seriesInfo>
        </reference>
        <reference anchor="RFC20" target="http://www.rfc-editor.org/info/rfc20" quoteTitle="true" derivedAnchor="RFC20">
          <front>
            <title>ASCII format for Network Interchange</title>
            <date year="1969" month="October"/>
          </front>
          <seriesInfo name="STD">80</seriesInfo>
          <seriesInfo name="RFC">20</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC0020</seriesInfo>
        </reference>
        <reference anchor="RFC2046" target="http://www.rfc-editor.org/info/rfc2046" quoteTitle="true" derivedAnchor="RFC2046">
          <front>
            <title>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</title>
            <date year="1996" month="November"/>
          </front>
          <seriesInfo name="RFC">2046</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC2046</seriesInfo>
        </reference>
        <reference anchor="RFC2119" target="http://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <date year="1997" month="March"/>
          </front>
          <seriesInfo name="BCP">14</seriesInfo>
          <seriesInfo name="RFC">2119</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC2119</seriesInfo>
        </reference>
        <reference anchor="RFC3986" target="http://www.rfc-editor.org/info/rfc3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <date year="2005" month="January"/>
          </front>
          <seriesInfo name="STD">66</seriesInfo>
          <seriesInfo name="RFC">3986</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC3986</seriesInfo>
        </reference>
        <reference anchor="RFC4949" target="http://www.rfc-editor.org/info/rfc4949" quoteTitle="true" derivedAnchor="RFC4949">
          <front>
            <title>Internet Security Glossary, Version 2</title>
            <date year="2007" month="August"/>
          </front>
          <seriesInfo name="RFC">4949</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC4949</seriesInfo>
        </reference>
        <reference anchor="RFC7159" target="http://www.rfc-editor.org/info/rfc7159" quoteTitle="true" derivedAnchor="RFC7159">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <date year="2014" month="March"/>
          </front>
          <seriesInfo name="RFC">7159</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC7159</seriesInfo>
        </reference>
        <reference anchor="UNICODE" target="http://www.unicode.org/versions/latest/" quoteTitle="true" derivedAnchor="UNICODE">
          <front>
            <title>The Unicode Standard</title>
          </front>
        </reference>
      </references>
      <references pn="section-13.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="CanvasApp" target="http://developers.facebook.com/docs/authentication/ canvas" quoteTitle="true" derivedAnchor="CanvasApp">
          <front>
            <title>Canvas Applications</title>
            <date year="2010"/>
          </front>
        </reference>
        <reference anchor="JSS" target="http://jsonenc.info/jss/1.0/" quoteTitle="true" derivedAnchor="JSS">
          <front>
            <title>JSON Simple Sign</title>
            <date year="2010" month="September"/>
          </front>
        </reference>
        <reference anchor="MagicSignatures" target="http://salmon-protocol.googlecode.com/svn/ trunk/draft-panzer-magicsig-01.html" quoteTitle="true" derivedAnchor="MagicSignatures">
          <front>
            <title>Magic Signatures</title>
            <date year="2011" month="January"/>
          </front>
        </reference>
        <reference anchor="OASIS.saml-core-2.0-os" target="http://docs.oasis-open.org/security/saml/v2.0/ saml-core-2.0-os.pdf" quoteTitle="true" derivedAnchor="OASIS.saml-core-2.0-os">
          <front>
            <title>Assertions and Protocols for the OASIS Security Assertion Markup Language (SAML) V2.0</title>
            <date year="2005" month="March"/>
          </front>
        </reference>
        <reference anchor="POSIX.1" target="http://pubs.opengroup.org/onlinepubs/9699919799/ basedefs/V1_chap04.html#tag_04_15" quoteTitle="true" derivedAnchor="POSIX.1">
          <front>
            <title>The Open Group Base Specifications Issue 7</title>
            <date year="2013"/>
          </front>
          <seriesInfo name="IEEE">Std 1003.1</seriesInfo>
        </reference>
        <reference anchor="RFC3275" target="http://www.rfc-editor.org/info/rfc3275" quoteTitle="true" derivedAnchor="RFC3275">
          <front>
            <title>(Extensible Markup Language) XML-Signature Syntax and Processing</title>
            <date year="2002" month="March"/>
          </front>
          <seriesInfo name="RFC">3275</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC3275</seriesInfo>
        </reference>
        <reference anchor="RFC3339" target="http://www.rfc-editor.org/info/rfc3339" quoteTitle="true" derivedAnchor="RFC3339">
          <front>
            <title>Date and Time on the Internet: Timestamps</title>
            <date year="2002" month="July"/>
          </front>
          <seriesInfo name="RFC">3339</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC3339</seriesInfo>
        </reference>
        <reference anchor="RFC4122" target="http://www.rfc-editor.org/info/rfc4122" quoteTitle="true" derivedAnchor="RFC4122">
          <front>
            <title>A Universally Unique IDentifier (UUID) URN Namespace</title>
            <date year="2005" month="July"/>
          </front>
          <seriesInfo name="RFC">4122</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC4122</seriesInfo>
        </reference>
        <reference anchor="RFC5226" target="http://www.rfc-editor.org/info/rfc5226" quoteTitle="true" derivedAnchor="RFC5226">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <date year="2008" month="May"/>
          </front>
          <seriesInfo name="BCP">26</seriesInfo>
          <seriesInfo name="RFC">5226</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC5226</seriesInfo>
        </reference>
        <reference anchor="RFC6755" target="http://www.rfc-editor.org/info/rfc6755" quoteTitle="true" derivedAnchor="RFC6755">
          <front>
            <title>An IETF URN Sub-Namespace for OAuth</title>
            <date year="2012" month="October"/>
          </front>
          <seriesInfo name="RFC">6755</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC6755</seriesInfo>
        </reference>
        <reference anchor="RFC6838" target="http://www.rfc-editor.org/info/rfc6838" quoteTitle="true" derivedAnchor="RFC6838">
          <front>
            <title>Media Type Specifications and Registration Procedures</title>
            <date year="2013" month="January"/>
          </front>
          <seriesInfo name="BCP">13</seriesInfo>
          <seriesInfo name="RFC">6838</seriesInfo>
          <seriesInfo name="DOI">10.17487/RFC6838</seriesInfo>
        </reference>
        <reference anchor="SWT" target="http://msdn.microsoft.com/en-us/ library/windowsazure/hh781551.aspx" quoteTitle="true" derivedAnchor="SWT">
          <front>
            <title>Simple Web Token (SWT)</title>
            <date year="2009" month="November"/>
          </front>
        </reference>
        <reference anchor="W3C.CR-xml11-20060816" target="http://www.w3.org/TR/2006/REC-xml11-20060816" quoteTitle="true" derivedAnchor="W3C.CR-xml11-20060816">
          <front>
            <title>Extensible Markup Language (XML) 1.1 (Second Edition)</title>
            <date year="2006" month="August"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-xml-c14n-20010315" target="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" quoteTitle="true" derivedAnchor="W3C.REC-xml-c14n-20010315">
          <front>
            <title>Canonical XML Version 1.0</title>
            <date year="2001" month="March"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="jwt-examples" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-jwt-examples">JWT Examples</name>
      <t indent="0" pn="section-appendix.a-1">This section contains examples of JWTs.  For other example JWTs, see
Section 6.1 of this document and Appendices A.1 - A.3 of <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/>.</t>
      <section anchor="example-encrypted-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-a.1">
        <name slugifiedName="name-example-encrypted-jwt">Example Encrypted JWT</name>
        <t indent="0" pn="section-a.1-1">This example encrypts the same claims as used in Section 3.1 to the
recipient using RSAES-PKCS1-v1_5 and AES_128_CBC_HMAC_SHA_256.</t>
        <t indent="0" pn="section-a.1-2">The following example JOSE Header declares that:</t>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-a.1-3">
          <li pn="section-a.1-3.1"> The Content Encryption Key is encrypted to the recipient using the
   RSAES-PKCS1-v1_5 algorithm to produce the JWE Encrypted Key.</li>
          <li pn="section-a.1-3.2"> Authenticated encryption is performed on the plaintext using the
   AES_128_CBC_HMAC_SHA_256 algorithm to produce the JWE Ciphertext
   and the JWE Authentication Tag.</li>
        </ul>
        <t indent="0" pn="section-a.1-4"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"alg":"RSA1_5","enc":"A128CBC-HS256"}
]]></artwork>
</t>
        <t indent="0" pn="section-a.1-5">Other than using the octets of the UTF-8 representation of the JWT
Claims Set from Section 3.1 as the plaintext value, the computation
of this JWT is identical to the computation of the JWE in
Appendix A.2 of <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/>, including the keys used.</t>
        <t indent="0" pn="section-a.1-6">The final result in this example (with line breaks for display
purposes only) is:</t>
        <t indent="0" pn="section-a.1-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.
  QR1Owv2ug2WyPBnbQrRARTeEk9kDO2w8qDcjiHnSJflSdv1iNqhWXaKH4MqAkQtM
  oNfABIPJaZm0HaA415sv3aeuBWnD8J-Ui7Ah6cWafs3ZwwFKDFUUsWHSK-IPKxLG
  TkND09XyjORj_CHAgOPJ-Sd8ONQRnJvWn_hXV1BNMHzUjPyYwEsRhDhzjAD26ima
  sOTsgruobpYGoQcXUwFDn7moXPRfDE8-NoQX7N7ZYMmpUDkR-Cx9obNGwJQ3nM52
  YCitxoQVPzjbl7WBuB7AohdBoZOdZ24WlN1lVIeh8v1K4krB8xgKvRU8kgFrEn_a
  1rZgN5TiysnmzTROF869lQ.
  AxY8DCtDaGlsbGljb3RoZQ.
  MKOle7UQrG6nSxTLX6Mqwt0orbHvAKeWnDYvpIAeZ72deHxz3roJDXQyhxx0wKaM
  HDjUEOKIwrtkHthpqEanSBNYHZgmNOV7sln1Eu9g3J8.
  fiK51VwhsxJ-siBMR-YFiA
]]></artwork>
</t>
      </section>
      <section anchor="example-nested-jwt" numbered="true" removeInRFC="false" toc="include" pn="section-a.2">
        <name slugifiedName="name-example-nested-jwt">Example Nested JWT</name>
        <t indent="0" pn="section-a.2-1">This example shows how a JWT can be used as the payload of a JWE or
JWS to create a Nested JWT.  In this case, the JWT Claims Set is
first signed, and then encrypted.</t>
        <t indent="0" pn="section-a.2-2">The inner signed JWT is identical to the example in Appendix A.2 of
<xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/>.  Therefore, its computation is not repeated here.  This
example then encrypts this inner JWT to the recipient using
RSAES-PKCS1-v1_5 and AES_128_CBC_HMAC_SHA_256.</t>
        <t indent="0" pn="section-a.2-3">The following example JOSE Header declares that:</t>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-a.2-4">
          <li pn="section-a.2-4.1"> The Content Encryption Key is encrypted to the recipient using the
   RSAES-PKCS1-v1_5 algorithm to produce the JWE Encrypted Key.</li>
          <li pn="section-a.2-4.2"> Authenticated encryption is performed on the plaintext using the
   AES_128_CBC_HMAC_SHA_256 algorithm to produce the JWE Ciphertext
   and the JWE Authentication Tag.</li>
          <li pn="section-a.2-4.3"> The plaintext is itself a JWT.</li>
        </ul>
        <t indent="0" pn="section-a.2-5"><artwork name="" type="" align="left" alt=""><![CDATA[
  {"alg":"RSA1_5","enc":"A128CBC-HS256","cty":"JWT"}
]]></artwork>
</t>
        <t indent="0" pn="section-a.2-6">Base64url encoding the octets of the UTF-8 representation of the JOSE
Header yields this encoded JOSE Header value:</t>
        <t indent="0" pn="section-a.2-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiY3R5IjoiSldUIn0
]]></artwork>
</t>
        <t indent="0" pn="section-a.2-8">The computation of this JWT is identical to the computation of the
JWE in Appendix A.2 of <xref target="JWE" format="default" sectionFormat="of" derivedContent="JWE"/>, other than that different JOSE Header,
plaintext, JWE Initialization Vector, and Content Encryption Key
values are used.  (The RSA key used is the same.)</t>
        <t indent="0" pn="section-a.2-9">The plaintext used is the octets of the ASCII <xref target="RFC20" format="default" sectionFormat="of" derivedContent="RFC20"/> representation
of the JWT at the end of Appendix A.2.1 of <xref target="JWS" format="default" sectionFormat="of" derivedContent="JWS"/> (with all whitespace
and line breaks removed), which is a sequence of 458 octets.</t>
        <t indent="0" pn="section-a.2-10">The JWE Initialization Vector value used (using JSON array notation)
is:</t>
        <t indent="0" pn="section-a.2-11">[82, 101, 100, 109, 111, 110, 100, 32, 87, 65, 32, 57, 56, 48, 53,
50]</t>
        <t indent="0" pn="section-a.2-12">This example uses the Content Encryption Key represented by the
base64url-encoded value below:</t>
        <t indent="0" pn="section-a.2-13"><artwork name="" type="" align="left" alt=""><![CDATA[
  GawgguFyGrWKav7AX4VKUg
]]></artwork>
</t>
        <t indent="0" pn="section-a.2-14">The final result for this Nested JWT (with line breaks for display
purposes only) is:</t>
        <t indent="0" pn="section-a.2-15"><artwork name="" type="" align="left" alt=""><![CDATA[
  eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiY3R5IjoiSldU
  In0.
  g_hEwksO1Ax8Qn7HoN-BVeBoa8FXe0kpyk_XdcSmxvcM5_P296JXXtoHISr_DD_M
  qewaQSH4dZOQHoUgKLeFly-9RI11TG-_Ge1bZFazBPwKC5lJ6OLANLMd0QSL4fYE
  b9ERe-epKYE3xb2jfY1AltHqBO-PM6j23Guj2yDKnFv6WO72tteVzm_2n17SBFvh
  DuR9a2nHTE67pe0XGBUS_TK7ecA-iVq5COeVdJR4U4VZGGlxRGPLRHvolVLEHx6D
  YyLpw30Ay9R6d68YCLi9FYTq3hIXPK_-dmPlOUlKvPr1GgJzRoeC9G5qCvdcHWsq
  JGTO_z3Wfo5zsqwkxruxwA.
  UmVkbW9uZCBXQSA5ODA1Mg.
  VwHERHPvCNcHHpTjkoigx3_ExK0Qc71RMEParpatm0X_qpg-w8kozSjfNIPPXiTB
  BLXR65CIPkFqz4l1Ae9w_uowKiwyi9acgVztAi-pSL8GQSXnaamh9kX1mdh3M_TT
  -FZGQFQsFhu0Z72gJKGdfGE-OE7hS1zuBD5oEUfk0Dmb0VzWEzpxxiSSBbBAzP10
  l56pPfAtrjEYw-7ygeMkwBl6Z_mLS6w6xUgKlvW6ULmkV-uLC4FUiyKECK4e3WZY
  Kw1bpgIqGYsw2v_grHjszJZ-_I5uM-9RA8ycX9KqPRp9gc6pXmoU_-27ATs9XCvr
  ZXUtK2902AUzqpeEUJYjWWxSNsS-r1TJ1I-FMJ4XyAiGrfmo9hQPcNBYxPz3GQb2
  8Y5CLSQfNgKSGt0A4isp1hBUXBHAndgtcslt7ZoQJaKe_nNJgNliWtWpJ_ebuOpE
  l8jdhehdccnRMIwAmU1n7SPkmhIl1HlSOpvcvDfhUN5wuqU955vOBvfkBOh5A11U
  zBuo2WlgZ6hYi9-e3w29bR0C2-pp3jbqxEDw3iWaf2dc5b-LnR0FEYXvI_tYk5rd
  _J9N0mg0tQ6RbpxNEMNoA9QWk5lgdPvbh9BaO195abQ.
  AVO9iT5AV4CzvDJCdhSFlQ
]]></artwork>
</t>
      </section>
    </section>
    <section anchor="relationship-of-jwts-to-saml-assertions" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-relationship-of-jwts-to-saml-assertions">Relationship of JWTs to SAML Assertions</name>
      <t indent="0" pn="section-appendix.b-1">Security Assertion Markup Language (SAML) 2.0
<xref target="OASIS.saml-core-2.0-os" format="default" sectionFormat="of" derivedContent="OASIS.saml-core-2.0-os"/> provides a standard for creating security
tokens with greater expressivity and more security options than
supported by JWTs.  However, the cost of this flexibility and
expressiveness is both size and complexity.  SAML's use of XML
<xref target="W3C.CR-xml11-20060816" format="default" sectionFormat="of" derivedContent="W3C.CR-xml11-20060816"/> and XML Digital Signature (DSIG) <xref target="RFC3275" format="default" sectionFormat="of" derivedContent="RFC3275"/>
contributes to the size of SAML Assertions; its use of XML and
especially XML Canonicalization <xref target="W3C.REC-xml-c14n-20010315" format="default" sectionFormat="of" derivedContent="W3C.REC-xml-c14n-20010315"/>
contributes to their complexity.</t>
      <t indent="0" pn="section-appendix.b-2">JWTs are intended to provide a simple security token format that is
small enough to fit into HTTP headers and query arguments in URIs.
It does this by supporting a much simpler token model than SAML and
using the JSON <xref target="RFC7159" format="default" sectionFormat="of" derivedContent="RFC7159"/> object encoding syntax.  It also supports
securing tokens using Message Authentication Codes (MACs) and digital
signatures using a smaller (and less flexible) format than XML DSIG.</t>
      <t indent="0" pn="section-appendix.b-3">Therefore, while JWTs can do some of the things SAML Assertions do,
JWTs are not intended as a full replacement for SAML Assertions, but
rather as a token format to be used when ease of implementation or
compactness are considerations.</t>
      <t indent="0" pn="section-appendix.b-4">SAML Assertions are always statements made by an entity about a
subject.  JWTs are often used in the same manner, with the entity
making the statements being represented by the &quot;iss&quot; (issuer) claim,
and the subject being represented by the &quot;sub&quot; (subject) claim.
However, with these claims being optional, other uses of the JWT
format are also permitted.</t>
    </section>
    <section anchor="relationship-of-jwts-to-simple-web-tokens-(swts)" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.c">
      <name slugifiedName="name-relationship-of-jwts-to-simple-web-tokens-(swts)">Relationship of JWTs to Simple Web Tokens (SWTs)</name>
      <t indent="0" pn="section-appendix.c-1">Both JWTs and SWTs <xref target="SWT" format="default" sectionFormat="of" derivedContent="SWT"/>, at their core, enable sets of claims to be
communicated between applications.  For SWTs, both the claim names
and claim values are strings.  For JWTs, while claim names are
strings, claim values can be any JSON type.  Both token types offer
cryptographic protection of their content: SWTs with HMAC SHA-256 and
JWTs with a choice of algorithms, including signature, MAC, and
encryption algorithms.</t>
    </section>
    <section anchor="acknowledgements" numbered="false" removeInRFC="false" toc="exclude" pn="section-appendix.d">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
        <t indent="0" pn="section-appendix.d-1">The authors acknowledge that the design of JWTs was intentionally
influenced by the design and simplicity of SWTs <xref target="SWT" format="default" sectionFormat="of" derivedContent="SWT"/> and ideas for
JSON tokens that Dick Hardt discussed within the OpenID community.</t>
        <t indent="0" pn="section-appendix.d-2">Solutions for signing JSON content were previously explored by Magic
Signatures <xref target="MagicSignatures" format="default" sectionFormat="of" derivedContent="MagicSignatures"/>, JSON Simple Sign <xref target="JSS" format="default" sectionFormat="of" derivedContent="JSS"/>, and Canvas
Applications <xref target="CanvasApp" format="default" sectionFormat="of" derivedContent="CanvasApp"/>, all of which influenced this document.</t>
        <t indent="0" pn="section-appendix.d-3">This specification is the work of the OAuth working group, which
includes dozens of active and dedicated participants.  In particular,
the following individuals contributed ideas, feedback, and wording
that influenced this specification:</t>
        <t indent="0" pn="section-appendix.d-4">Dirk Balfanz, Richard Barnes, Brian Campbell, Alissa Cooper, Breno de
Medeiros, Stephen Farrell, Yaron Y. Goland, Dick Hardt, Joe
Hildebrand, Jeff Hodges, Edmund Jay, Warren Kumari, Ben Laurie, Barry
Leiba, Ted Lemon, James Manger, Prateek Mishra, Kathleen Moriarty,
Tony Nadalin, Axel Nennker, John Panzer, Emmanuel Raviart, David
Recordon, Eric Rescorla, Jim Schaad, Paul Tarjan, Hannes Tschofenig,
Sean Turner, and Tom Yu.</t>
        <t indent="0" pn="section-appendix.d-5">Hannes Tschofenig and Derek Atkins chaired the OAuth working group
and Sean Turner, Stephen Farrell, and Kathleen Moriarty served as
Security Area Directors during the creation of this specification.</t>
      </section>
  </back>
</rfc>
