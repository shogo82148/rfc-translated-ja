<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" submissionType="IETF" number="7518" category="std" consensus="true" obsoletes="" updates="" xml:lang="en" symRefs="true" sortRefs="true" tocInclude="true" version="3">
  <front>
    <title>JSON Web Algorithms (JWA)</title>
    <seriesInfo name="RFC" value="7518"/>
    <author initials="M." surname="Jones" fullname="Michael B. Jones">
      <organization>Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>
    <date year="2015" month="May"/>
    <abstract>
      <t>本仕様は、JSON Web Signature (JWS), JSON Web Encryption (JWE), JSON Web Key (JWK) 仕様で使用する暗号アルゴリズムと識別子を登録するものである。これらの識別子について、いくつかの IANA レジストリを定義する。</t>
    </abstract>
  </front>
  <middle>
    <section anchor="sect-1" numbered="true" toc="default">
      <name>Introduction</name>
      <t>本仕様は、JSON Web Signature (JWS)<xref target="JWS" format="default"/> 、JSON Web Encryption (JWE)<xref target="JWE" format="default"/> 、JSON Web Key (JWK)<xref target="JWK" format="default"/> 仕様で使用する暗号アルゴリズムと識別子を登録するものである。これらの識別子について、いくつかのIANAレジストリを定義している。これらの仕様はすべて、JSON ベースの<xref target="RFC7159" format="default"/> データ構造を利用する。この仕様はまた、これらのアルゴリズムと鍵のタイプに固有のセマンティクスと操作を記述している。</t>
      <t>アルゴリズムと識別子をJWS、JWE、JWK仕様ではなくここに登録するのは、Required、Recommended、Optional、Deprecatedのアルゴリズムの集合が時間と共に変化しても、それらを変更しないようにすることを意図したものである。また、これにより、この文書を変更することなく、JWS、JWE、JWKの仕様を変更することができる。</t>
      <t>本仕様で定義される名前は，結果として得られる表現がコンパクトであることを中核的な目標とするため，短いものとする。</t>
      <section anchor="sect-1.1" numbered="true" toc="default">
        <name>Notational Conventions</name>
        <t>本文書におけるキーワード「MUST」「MUST NOT」「REQUIRED」「SHALL」「SHALL NOT」「SHOULD」「SHOULD NOT」「RECOMMENDED」「NOT RECOMMENDED」「MAY」「OPTIONAL」は、「RFCにおける要件レベルを示すキーワード」<xref target="RFC2119" format="default"/> に記述されている通りに解釈されるものとします。</t>
        <t>この解釈は、用語がすべて大文字で表示される場合にのみ適用されるべきものです。</t>
        <t>BASE64URL(OCTETS) は、<xref target="JWS" format="default"/> のセクション 2 に従って、OCTETS の base64url エンコーディングを示す。</t>
        <t>UTF8(STRING) は、STRING の UTF-8<xref target="RFC3629" format="default"/> 表現のオクテットを示す。ここで、STRING はゼロまたはそれ以上の Unicode<xref target="UNICODE" format="default"/> 文字のシーケンスである。</t>
        <t>ASCII(STRING) は、STRING の ASCII [RFC20] 表現のオクテットを表し、STRING は 0 個以上の ASCII 文字のシーケンスである。</t>
        <t>2つの値AとBの連結をA || Bと表記する。</t>
      </section>
    </section>
    <section anchor="sect-2" numbered="true" toc="default">
      <name>Terminology</name>
      <t>JSON Web Signature (JWS)", "Base64url Encoding", "Header Parameter", "JOSE Header", "JWS Payload", "JWS Protected Header", "JWS Signature", "JWS Signing Input", 及び "Unsecured JWS" は JWS 仕様<xref target="JWS" format="default"/> で定義されている用語である。</t>
      <t>用語「JSONウェブ暗号化（JWE）」、「追加認証データ（AAD）」、「認証タグ」、「コンテンツ暗号化キー（CEK）」、「直接暗号化」、「直接鍵合意」、「JWE認証タグ」、「JWE暗号文」。"JWE Encrypted Key", "JWE Initialization Vector", "JWE Protected Header", "Key Agreement with Key Wrapping", "Key Encryption", "Key Management Mode", "Key Wrapping" はJWE仕様<xref target="JWE" format="default"/> によって定義されています。</t>
      <t>JSON Web Key (JWK)」と「JWK Set」という用語は、JWK仕様<xref target="JWK" format="default"/> で定義されています。</t>
      <t>暗号文」、「デジタル署名」、「初期化ベクトル」、「メッセージ認証コード（MAC）」、「平文」という用語は、「インターネットセキュリティ用語集 第2版」<xref target="RFC4949" format="default"/> で定義されています。</t>
      <t>この用語は、本仕様書で定義する。</t>
      <dl newline="true" spacing="normal" indent="3">
        <dt>Base64urlUInt</dt>
        <dd>
	The representation of a positive or zero integer value as the
      base64url encoding of the value's unsigned big-endian
      representation as an octet sequence.  The octet sequence MUST
      utilize the minimum number of octets needed to represent the
      value.  Zero is represented as BASE64URL(single zero-valued
      octet), which is "AA".
	</dd>
      </dl>
    </section>
    <section anchor="sect-3" numbered="true" toc="default">
      <name>Cryptographic Algorithms for Digital Signatures and MACs</name>
      <t>JWSは、暗号アルゴリズムを用いて、JWS保護ヘッダとJWSペイロードの内容にデジタル署名またはMACを作成する。</t>
      <section anchor="sect-3.1" numbered="true" toc="default">
        <name>"alg" (Algorithm) Header Parameter Values for JWS</name>
        <t>以下の表は、JWS で使用するために本仕様で定義された "alg"（アルゴリズム）ヘッダーパラメータ値のセットであり、それぞれについて以下のセクションでより詳細に説明する。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Digital Signature or MAC Algorithm</th>
              <th align="left"> Implementation Requirements</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">HS256</td>
              <td align="left">HMAC using SHA-256</td>
              <td align="left">Required</td>
            </tr>
            <tr>
              <td align="left">HS384</td>
              <td align="left">HMAC using SHA-384</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left">HS512</td>
              <td align="left">HMAC using SHA-512</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left">RS256</td>
              <td align="left">RSASSA-PKCS1-v1_5 using</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-256</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">RS384</td>
              <td align="left">RSASSA-PKCS1-v1_5 using</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-384</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">RS512</td>
              <td align="left">RSASSA-PKCS1-v1_5 using</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-512</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">ES256</td>
              <td align="left">ECDSA using P-256 and SHA-256</td>
              <td align="left">Recommended+</td>
            </tr>
            <tr>
              <td align="left">ES384</td>
              <td align="left">ECDSA using P-384 and SHA-384</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left">ES512</td>
              <td align="left">ECDSA using P-521 and SHA-512</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left">PS256</td>
              <td align="left">RSASSA-PSS using SHA-256 and</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MGF1 with SHA-256</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">PS384</td>
              <td align="left">RSASSA-PSS using SHA-384 and</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MGF1 with SHA-384</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">PS512</td>
              <td align="left">RSASSA-PSS using SHA-512 and</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MGF1 with SHA-512</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">none</td>
              <td align="left">No digital signature or MAC</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">performed</td>
              <td align="left"/>
            </tr>
          </tbody>
        </table>
        <t>実装要件欄の "+"の使用は、要件の強度が仕様の将来のバージョンで増加する可能性があることを示す。</t>
        <t>本仕様で定義されるJWSデジタル署名とMACの "alg"（アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用される同等の識別子を相互参照する表は付録A.1を参照されたい。</t>
      </section>
      <section anchor="sect-3.2" numbered="true" toc="default">
        <name>HMAC with SHA-2 Functions</name>
        <t>ハッシュベースのメッセージ認証コード（HMAC）は、秘密と暗号ハッシュ関数を使用してMACを生成することができます。これは、MACを生成した人がMAC鍵を所有していたことを証明するために使用することができる。HMACの実装と検証のためのアルゴリズムは、RFC 2104<xref target="RFC2104" format="default"/> で提供されています。</t>
        <t>このアルゴリズムでは、ハッシュ出力と同じサイズ(例えば、「HS256」の場合は 256ビット)またはそれ以上の鍵を使用しなければならない[MUST]。(この要件は、NIST SP 800-117 [NIST.800-107] のセクション 5.3.4 (Security Effect of the HMAC Key) に基づいており、有効なセキュリティ強度は、鍵のセキュリティ強度と 内部ハッシュ値のサイズの2倍の最小値であると述べている)。</t>
        <t>HMAC SHA-256 MACはRFC2104に従い、ハッシュアルゴリズム "H "としてSHA-256を使用し、"text "値としてJWS Signing Inputを使用し、共有鍵を使用して生成される。HMACの出力値はJWS署名である。</t>
        <t>JWS署名が対応するアルゴリズムで計算されたHMAC値であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> MAC Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">HS256</td>
              <td align="left">HMAC using SHA-256</td>
            </tr>
            <tr>
              <td align="left">HS384</td>
              <td align="left">HMAC using SHA-384</td>
            </tr>
            <tr>
              <td align="left">HS512</td>
              <td align="left">HMAC using SHA-512</td>
            </tr>
          </tbody>
        </table>
        <t>JWSのHMAC SHA-256 MACは、RFC 2104に従って、SHA-256をハッシュアルゴリズム「H」として、受信したJWS Signing Inputを「テキスト」値とし、共有鍵を用いてHMAC値を計算することで検証される。この計算されたHMAC値は、受信したエンコードされたJWS署名の値をbase64urlでデコードした結果と比較される。計算されたHMAC値とJWS署名値の比較は、タイミング攻撃を阻止するため、一定時間ごとに行われなければならない(MUST)。あるいは、計算されたHMAC値はbase64urlでエンコードされ、受信したエンコードされたJWS署名の値と比較することができる（これも一定時間ごとに）、この比較はエンコードされていない値の比較と同じ結果を生むからである。どちらの場合でも、値が一致すれば、HMACは検証されたことになる。</t>
        <t>HMAC SHA-384およびHMAC SHA-512アルゴリズムによるコンテンツの保護と検証は、HMAC SHA-256の手順と同様に、対応する最小キーサイズと結果値を大きくしたハッシュアルゴリズムを使用するだけで実行されます。HMAC SHA-384は384ビット、HMAC SHA-512は512ビットである。</t>
        <t>このアルゴリズムを用いた例を、<xref target="JWS" format="default"/> の付録 A.1 に示す。</t>
      </section>
      <section anchor="sect-3.3" numbered="true" toc="default">
        <name>Digital Signature with RSASSA-PKCS1-v1_5</name>
        <t>ここでは、RFC 3447<xref target="RFC3447" format="default"/> (通称 PKCS #1) のセクション 8.2 で定義されている RSASSA-PKCS1-v1_5 デジタル署名アルゴリズムの使用を、SHA-2 [SHS] ハッシュ関数を使って定義しています。</t>
        <t>これらのアルゴリズムでは、2048ビット以上のサイズの鍵を使用しなければならない（MUST）。</t>
        <t>RSASSA-PKCS1-v1_5 SHA-256 電子署名は以下のように生成される： RSASSA-PKCS1-v1_5-SIGN と SHA-256 ハッシュ関数を使って JWS Signing Input の電子署名を目的の秘密鍵で生成する。これがJWS署名の値である。</t>
        <t>JWS署名が対応するアルゴリズムで計算された電子署名値であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Digital Signature Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">RS256</td>
              <td align="left">RSASSA-PKCS1-v1_5 using SHA-256</td>
            </tr>
            <tr>
              <td align="left">RS384</td>
              <td align="left">RSASSA-PKCS1-v1_5 using SHA-384</td>
            </tr>
            <tr>
              <td align="left">RS512</td>
              <td align="left">RSASSA-PKCS1-v1_5 using SHA-512</td>
            </tr>
          </tbody>
        </table>
        <t>JWS の RSASSA-PKCS1-v1_5 SHA-256 電子署名は以下のように検証される。JWS Signing Input、JWS Signature、署名者が使用する秘密鍵に対応する公開鍵を、SHA-256 をハッシュ関数として使用する RSASSA-PKCS1-v1_5-VERIFY アルゴリズムに提出すること。</t>
        <t>RSASSA-PKCS1-v1_5 SHA-384 および RSASSA- PKCS1-v1_5 SHA-512 アルゴリズムによる署名と検証は、 RSASSA-PKCS1-v1_5 SHA-256 の手順と同じように行われます -- SHA-256 の代わりに対応するハッシュアルゴリズムを使用するだけです。</t>
        <t>このアルゴリズムを用いた例を、<xref target="JWS" format="default"/> の付録 A.2 に示す。</t>
      </section>
      <section anchor="sect-3.4" numbered="true" toc="default">
        <name>Digital Signature with ECDSA</name>
        <t>楕円曲線暗号（ECDSA）[DSS]は、RSA暗号と同等の安全性を持ちながら、より短い鍵長で多くの演算を高速に処理できる楕円曲線暗号の使用を規定しています。つまり、ECDSA電子署名は、同等の強度を持つRSA電子署名に比べて、長さが大幅に小さくなる。</t>
        <t>本仕様では、P-256 曲線と SHA-256 暗号ハッシュ関数による ECDSA、P-384 曲線と SHA-384 ハッシュ関数による ECDSA、および P-521 曲線と SHA-512 ハッシュ関数による ECDSA の使用を定義しています。P-256、P-384、P-521曲線は、[DSS]で定義されています。</t>
        <t>ECDSA P-256 SHA-256電子署名は以下のように生成される。</t>
        <ol spacing="normal" type="1"><li>Generate a digital signature of the JWS Signing Input using ECDSA
       P-256 SHA-256 with the desired private key.  The output will be
       the pair (R, S), where R and S are 256-bit unsigned integers.</li>
          <li>Turn R and S into octet sequences in big-endian order, with each
       array being be 32 octets long.  The octet sequence
       representations MUST NOT be shortened to omit any leading zero
       octets contained in the values.</li>
          <li>Concatenate the two octet sequences in the order R and then S.
       (Note that many ECDSA implementations will directly produce this
       concatenation as their output.)</li>
          <li>The resulting 64-octet sequence is the JWS Signature value.</li>
        </ol>
        <t>JWS署名が対応するアルゴリズムで計算された電子署名値であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Digital Signature Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">ES256</td>
              <td align="left">ECDSA using P-256 and SHA-256</td>
            </tr>
            <tr>
              <td align="left">ES384</td>
              <td align="left">ECDSA using P-384 and SHA-384</td>
            </tr>
            <tr>
              <td align="left">ES512</td>
              <td align="left">ECDSA using P-521 and SHA-512</td>
            </tr>
          </tbody>
        </table>
        <t>JWSのECDSA P-256 SHA-256電子署名は、以下のように検証される。</t>
        <ol spacing="normal" type="1"><li>The JWS Signature value MUST be a 64-octet sequence.  If it is
       not a 64-octet sequence, the validation has failed.</li>
          <li>Split the 64-octet sequence into two 32-octet sequences.  The
       first octet sequence represents R and the second S.  The values R
       and S are represented as octet sequences using the Integer-to-
       OctetString Conversion defined in Section 2.3.7 of SEC1 <xref target="SEC1" format="default"/>
       (in big-endian octet order).</li>
          <li>Submit the JWS Signing Input, R, S, and the public key (x, y) to
       the ECDSA P-256 SHA-256 validator.</li>
        </ol>
        <t>ECDSA P-384 SHA-384 と ECDSA P-521 SHA-512 のアルゴリズムによる署名と検証は、ECDSA P-256 SHA-256 の手順と同じように行われます -- 対応するハッシュアルゴリズムとそれに応じた大きな結果値を使用するだけです。ECDSA P-384 SHA-384 では、R と S はそれぞれ 384 ビットとなり、96 オクテットのシーケンスとなる。ECDSA P-521 SHA-512の場合、RとSはそれぞれ521ビットとなり、132オクテットのシーケンスとなる。(R と S をオクテット列として表現するために使用される SEC1<xref target="SEC1" format="default"/> のセクション 2.3.7 で定義された Integer-to-OctetString Conversion は、必要に応じてゼロ値の高次パディングビットを追加し、サイズを 8 ビットの倍数に丸めるので、各 521 ビットの整数は 66 オクテットの 528 ビットで表されることに注意)。</t>
        <t>これらのアルゴリズムを用いた例は、<xref target="JWS" format="default"/> の付録 A.3 および A.4 に示されている。</t>
      </section>
      <section anchor="sect-3.5" numbered="true" toc="default">
        <name>Digital Signature with RSASSA-PSS</name>
        <t>ここでは、RFC3447の8.1節で定義されたRSASSA-PSS電子署名アルゴリズム<xref target="RFC3447" format="default"/> 、MGF1マスク生成関数とSHA-2ハッシュ関数を使用し、RSASSA-PSSハッシュ関数とMGF1ハッシュ関数の両方で常に同じハッシュ関数を使うことを定義している。ソルト値のサイズはハッシュ関数の出力と同じサイズである。その他のアルゴリズムパラメータは、RFC3447の付録A.2.3で規定されているデフォルトを使用する。</t>
        <t>このアルゴリズムでは、2048ビット以上の鍵が使用されなければならない。</t>
        <t>RSASSA-PSS SHA-256 電子署名は、以下のように生成される。JWS 署名入力に対して、RSASSA-PSS-SIGN と SHA-256 ハッシュ関数、MGF1 マスク生成関数を用い、目的の秘密鍵で SHA-256 による電子署名を生成する。これがJWS署名の値となる。</t>
        <t>JWS署名が対応するアルゴリズムで計算された電子署名値であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Digital Signature Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">PS256</td>
              <td align="left">RSASSA-PSS using SHA-256 and MGF1 with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-256</td>
            </tr>
            <tr>
              <td align="left">PS384</td>
              <td align="left">RSASSA-PSS using SHA-384 and MGF1 with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-384</td>
            </tr>
            <tr>
              <td align="left">PS512</td>
              <td align="left">RSASSA-PSS using SHA-512 and MGF1 with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-512</td>
            </tr>
          </tbody>
        </table>
        <t>JWS の RSASSA-PSS SHA-256 電子署名の検証は、JWS 署名入力、JWS 署名、署名者が使用する秘密鍵に対応する公開鍵を、ハッシュ関数として SHA-256 を用い、マスク生成関数として MGF1 を用いて SHA-256 で RSASSA-PSS-VERIFY アルゴリズムに提出することにより、以下のように行われる。</t>
        <t>RSASSA-PSS SHA-384 と RSASSA-PSS SHA-512 のアルゴリズムによる署名と検証は RSASSA-PSS SHA-256 の手順と同じように行われる。</t>
      </section>
      <section anchor="sect-3.6" numbered="true" toc="default">
        <name>Using the Algorithm "none"</name>
        <t>JWSは、完全性保護を提供しないものも作成してもよい(MAY)。このようなJWSはUnsecured JWSと呼ばれる。Unsecured JWSは "alg "値として "none "を使用し、他のJWSと同じようにフォーマットされるが、 そのJWS Signature値として空のオクテット列を使用しなければならない(MUST)。受信者は、JWS Signatureの値が空のオクテット列であることを確認しなければならない(MUST)。</t>
        <t>Unsecured JWSをサポートする実装は、アプリケーションが特定のオブジェ クトが完全性保護されないことを許容すると指定しない限り、そのようなオブ ジェクトを有効なものとして受け入れてはならない[MUST NOT]。実装は、デフォルトでUnsecured JWSを受け入れてはならない(MUST NOT)。ダウングレード攻撃を軽減するために、アプリケーションはUnsecured JWSを受け入れることをグローバルレベルでシグナリングしてはならず(MUST NOT)、オブジェクト単位で受け入れることをシグナリングすべきである(SHOULD)。このアルゴリズムを使用する際のセキュリティ上の考慮点については、<xref target="sect-8.5" format="default"/> を参照されたい。</t>
      </section>
    </section>
    <section anchor="sect-4" numbered="true" toc="default">
      <name>Cryptographic Algorithms for Key Management</name>
      <t>JWEは暗号化アルゴリズムを用いて、コンテンツ暗号化キー（CEK）を暗号化または決定する。</t>
      <section anchor="sect-4.1" numbered="true" toc="default">
        <name>"alg" (Algorithm) Header Parameter Values for JWE</name>
        <t>以下の表は、JWE で使用するために本仕様で定義された "alg" (algorithm) Header Parameter の値のセットである。これらのアルゴリズムは、CEKを暗号化し、JWE暗号鍵を生成するため、またはCEKに合意するために鍵合意を使用するために使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value  </th>
              <th align="left"> Key Management Algorithm </th>
              <th align="left"> More Header Params</th>
              <th align="left"> Implementation Requirements </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">RSA1_5</td>
              <td align="left">RSAES-PKCS1-v1_5</td>
              <td align="left">(none)</td>
              <td align="left">Recommended-</td>
            </tr>
            <tr>
              <td align="left">RSA-OAEP</td>
              <td align="left">RSAES OAEP using</td>
              <td align="left">(none)</td>
              <td align="left">Recommended+</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">default parameters</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">RSA-OAEP-256</td>
              <td align="left">RSAES OAEP using</td>
              <td align="left">(none)</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-256 and MGF1</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">with SHA-256</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A128KW</td>
              <td align="left">AES Key Wrap with</td>
              <td align="left">(none)</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">default initial</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">value using</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">128-bit key</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A192KW</td>
              <td align="left">AES Key Wrap with</td>
              <td align="left">(none)</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">default initial</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">value using</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">192-bit key</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A256KW</td>
              <td align="left">AES Key Wrap with</td>
              <td align="left">(none)</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">default initial</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">value using</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">256-bit key</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">dir</td>
              <td align="left">Direct use of a</td>
              <td align="left">(none)</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">shared symmetric</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">key as the CEK</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">ECDH-ES</td>
              <td align="left">Elliptic Curve</td>
              <td align="left">"epk",</td>
              <td align="left">Recommended+</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Diffie-Hellman</td>
              <td align="left">"apu",</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Ephemeral Static</td>
              <td align="left">"apv"</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">key agreement</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">using Concat KDF</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">ECDH-ES+A128KW</td>
              <td align="left">ECDH-ES using</td>
              <td align="left">"epk",</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Concat KDF and CEK</td>
              <td align="left">"apu",</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">wrapped with</td>
              <td align="left">"apv"</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">"A128KW"</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">ECDH-ES+A192KW</td>
              <td align="left">ECDH-ES using</td>
              <td align="left">"epk",</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Concat KDF and CEK</td>
              <td align="left">"apu",</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">wrapped with</td>
              <td align="left">"apv"</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">"A192KW"</td>
              <td align="left"/>
              <td align="left"/>
            </tr>
          </tbody>
        </table>
        <artwork name="" type="" align="left" alt="">
| ECDH-ES+A256KW     | ECDH-ES using      | "epk", | Recommended    |
|                    | Concat KDF and CEK | "apu", |                |
|                    | wrapped with       | "apv"  |                |
|                    | "A256KW"           |        |                |
| A128GCMKW          | Key wrapping with  | "iv",  | Optional       |
|                    | AES GCM using      | "tag"  |                |
|                    | 128-bit key        |        |                |
| A192GCMKW          | Key wrapping with  | "iv",  | Optional       |
|                    | AES GCM using      | "tag"  |                |
|                    | 192-bit key        |        |                |
| A256GCMKW          | Key wrapping with  | "iv",  | Optional       |
|                    | AES GCM using      | "tag"  |                |
|                    | 256-bit key        |        |                |
| PBES2-HS256+A128KW | PBES2 with HMAC    | "p2s", | Optional       |
|                    | SHA-256 and        | "p2c"  |                |
|                    | "A128KW" wrapping  |        |                |
| PBES2-HS384+A192KW | PBES2 with HMAC    | "p2s", | Optional       |
|                    | SHA-384 and        | "p2c"  |                |
|                    | "A192KW" wrapping  |        |                |
| PBES2-HS512+A256KW | PBES2 with HMAC    | "p2s", | Optional       |
|                    | SHA-512 and        | "p2c"  |                |
|                    | "A256KW" wrapping  |        |                |
+--------------------+--------------------+--------+----------------+
</artwork>
        <t>More Header Paramsの欄は、すべてのアルゴリズムが使用している「alg」以外に、どのような追加のHeader Parameterが使用されているかを示しています。dir "と "ECDH-ES "以外は、JWE暗号化鍵の値も生成されます。</t>
        <t>実装要件の欄で "+"を使用しているのは、要件の強度が将来のバージョンで増加する可能性があることを示します。の使用は、要件の強度が将来のバージョンで減少する可能性があることを示します。</t>
        <t>本仕様で定義される JWE "alg"（アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用される同等の識別子を相互参照する表は付録 A.2 を参照されたい。</t>
      </section>
      <section anchor="sect-4.2" numbered="true" toc="default">
        <name>Key Encryption with RSAES-PKCS1-v1_5</name>
        <t>ここでは、JWE の CEK を RSAES-PKCS1-v1_5（<xref target="RFC3447" format="default"/> ）で暗号化する場合の具体的な方法を定義する。このアルゴリズムには、"alg" (algorithm) Header Parameter の値 "RSA1_5" が使用される。</t>
        <t>このアルゴリズムでは、2048ビット以上の鍵が使用されなければならない。</t>
        <t>このアルゴリズムを用いた例を、<xref target="JWE" format="default"/> の付録 A.2 に示す。</t>
      </section>
      <section anchor="sect-4.3" numbered="true" toc="default">
        <name>Key Encryption with RSAES OAEP</name>
        <t>本節では、Optimal Asymmetric Encryption Padding (OAEP)<xref target="RFC3447" format="default"/> を用いて、JWE CEKをRSAESで暗号化する際の具体的な方法を定義している。OAEP を使用するための 2 つのパラメータが定義されており、それぞれ異なるハッシュ関数が使用される。最初のケースでは、RFC 3447の付録A.2.1で指定されているデフォルトのパラメータが使用される。(これらのデフォルトパラメータは、SHA-1ハッシュ関数とMGF1 with SHA-1マスク生成関数である)。第二の場合、SHA-256ハッシュ関数とSHA-256マスク生成関数付きMGF1が使用される。</t>
        <t>JWE 暗号化鍵が、対応するアルゴリズムで CEK を暗号化した結果であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Key Management Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">RSA-OAEP</td>
              <td align="left">RSAES OAEP using default parameters</td>
            </tr>
            <tr>
              <td align="left">RSA-OAEP-256</td>
              <td align="left">RSAES OAEP using SHA-256 and MGF1 with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">SHA-256</td>
            </tr>
          </tbody>
        </table>
        <t>これらのアルゴリズムでは、サイズ2048ビット以上の鍵を使用しなければならない(MUST)。(この要件は、NIST SP 800-57 [NIST.800-57]の表4 (セキュリティ強度の時間枠)に基づき、新規用途には112ビットのセキュリティを要求し、同表2 (比較強度)には、2048ビットRSA鍵が112ビットのセキュリティを提供すると述べています)。</t>
        <t>RSAES OAEP をデフォルトのパラメータで使用した例を<xref target="JWE" format="default"/> の Appendix A.1 に示す。</t>
      </section>
      <section anchor="sect-4.4" numbered="true" toc="default">
        <name>Key Wrapping with AES Key Wrap</name>
        <t>本節では、JWE CEK を AES（Advanced Encryption Standard）の Key Wrap Algorithm<xref target="RFC3394" format="default"/> で暗号化し、同文書の 2.2.3.1 節に規定されるデフォルトの初期値を用いる場合の仕様について規定する。</t>
        <t>JWE 暗号化鍵が、対応するアルゴリズムと鍵サイズで CEK を暗号化した結果であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Key Management Algorithm </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">A128KW</td>
              <td align="left">AES Key Wrap with default initial value using</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">128-bit key</td>
            </tr>
            <tr>
              <td align="left">A192KW</td>
              <td align="left">AES Key Wrap with default initial value using</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">192-bit key</td>
            </tr>
            <tr>
              <td align="left">A256KW</td>
              <td align="left">AES Key Wrap with default initial value using</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">256-bit key</td>
            </tr>
          </tbody>
        </table>
        <t keepWithPrevious="true">このアルゴリズムを用いた例を[JWE]の付録A.3に示す。</t>
      </section>
      <section anchor="sect-4.5" numbered="true" toc="default">
        <name>Direct Encryption with a Shared Symmetric Key</name>
        <t>ここでは、鍵のラップステップを行わず、直接対称鍵暗号化を行う場合の仕様を定義する。この場合、共有された対称鍵は、"enc "アルゴリズムのためのコンテンツ暗号化鍵（CEK）値として直接使用される。空のオクテット列がJWE暗号化鍵の値として使用される。この場合、"alg"（アルゴリズム）ヘッダーパラメータ値 "dir "が使用される。</t>
        <t>直接暗号化の利用を検討する際には、<xref target="sect-8.2" format="default"/> の鍵の有効期間に関するセキュリティの考慮事項、および<xref target="sect-8.4" format="default"/> の AES GCM を参照すること。</t>
      </section>
      <section anchor="sect-4.6" numbered="true" toc="default">
        <name>Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES)</name>
        <t>本節では、[NIST.800-56A] のセクション 5.8.1 で定義されているように、楕円曲線 Diffie-Hellman Ephemeral Static<xref target="RFC6090" format="default"/> と Concat KDF を組み合わせた鍵合意について詳細に定義している。鍵の合意結果は、2つの方法のいずれかで使用することができる。</t>
        <ol spacing="normal" type="1"><li>directly as the Content Encryption Key (CEK) for the "enc"
       algorithm, in the Direct Key Agreement mode, or</li>
          <li>as a symmetric key used to wrap the CEK with the "A128KW",
       "A192KW", or "A256KW" algorithms, in the Key Agreement with Key
       Wrapping mode.</li>
        </ol>
        <t>新しいエフェメラル公開鍵の値は、鍵合意操作ごとに生成されなければならない(MUST)。</t>
        <t>直接鍵合意モードでは、Concat KDFの出力は、「enc」アルゴリズムで使用されるものと同じ長さの鍵でなければならない(MUST)。この場合、空のオクテット列が JWE 暗号化鍵の値として使用される。直接鍵合意モードでは、"alg"（アルゴリズム）ヘッダーパラメータ値 "ECDH-ES "が使用される。</t>
        <t>Key Agreement with Key Wrapping モードでは、Concat KDF の出力は、指定された鍵の暗号化アルゴリズムに必要な長さの鍵でなければならない（MUST）。この場合、JWE 暗号化鍵は、合意された鍵でラッピングされた CEK となる。</t>
        <t>JWE 暗号化鍵が、対応する鍵ラップアルゴリズムの鍵暗号化鍵として、鍵合意アルゴリズムの結果を用いて CEK を暗号化した結果であることを示すために、以下の「alg」（アルゴリズム）ヘッダーパラメータ値を使用する。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Key Management Algorithm </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">ECDH-ES+A128KW</td>
              <td align="left">ECDH-ES using Concat KDF and CEK wrapped with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">"A128KW"</td>
            </tr>
            <tr>
              <td align="left">ECDH-ES+A192KW</td>
              <td align="left">ECDH-ES using Concat KDF and CEK wrapped with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">"A192KW"</td>
            </tr>
            <tr>
              <td align="left">ECDH-ES+A256KW</td>
              <td align="left">ECDH-ES using Concat KDF and CEK wrapped with</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">"A256KW"</td>
            </tr>
          </tbody>
        </table>
        <section anchor="sect-4.6.1" numbered="true" toc="default">
          <name>Header Parameters Used for ECDH Key Agreement</name>
          <t>以下に定義するとおり、鍵合意には以下の Header Parameter 名を使用する。</t>
          <section anchor="sect-4.6.1.1" numbered="true" toc="default">
            <name>"epk" (Ephemeral Public Key) Header Parameter</name>
            <t>鍵合意アルゴリズムで使用するために発信元が作成した「epk」（ephemeral public key）値です。この鍵は、JSON Web Key<xref target="JWK" format="default"/> 公開鍵の値として表現される。それは公開鍵パラメータのみを含まなければならず(MUST)、鍵を表現するために必要な最小限のJWKパラメータのみを含むべきである(SHOULD)。含まれる他のJWKパラメータは、一貫性をチェックされて尊重されるか、無視されることができる。このヘッダー・パラメーターは、これらのアルゴリズムが使用される場合、必ず存在し、実装によって理解・処理されなければならない(MUST)。</t>
          </section>
          <section anchor="sect-4.6.1.2" numbered="true" toc="default">
            <name>"apu" (Agreement PartyUInfo) Header Parameter</name>
            <t>これを使用する鍵合意アルゴリズム（「ECDH-ES」など）のための「apu」（合意PartyUInfo）値で、base64url-encoded文字列として表現される。使用される場合、PartyUInfo値にはプロデューサーに関する情報が含まれる。このHeader Parameterの使用はオプション(OPTIONAL)である。この Header Parameter は、これらのアルゴリズムが使用されるとき、実装によって理解され処理されなければならない[MUST]。</t>
          </section>
          <section anchor="sect-4.6.1.3" numbered="true" toc="default">
            <name>"apv" (Agreement PartyVInfo) Header Parameter</name>
            <t>apv」（合意PartyVInfo）値を使用する鍵合意アルゴリズム（「ECDH-ES」など）のために、base64urlエンコードされた文字列として表現される。使用される場合、PartyVInfo値は受信者の情報を含む。このHeader Parameterの使用はオプション(OPTIONAL)である。このHeader Parameterは、これらのアルゴリズムが使用される場合、実装によって理解され処理されなければならない(MUST)。</t>
          </section>
        </section>
        <section anchor="sect-4.6.2" numbered="true" toc="default">
          <name>Key Derivation for ECDH Key Agreement</name>
          <t>鍵導出プロセスは、[NIST.800-56A]のセクション 6.2.2.2 に従って、ECDH アルゴリズムで確立された共有秘密 Z から合意された鍵を導出するものである。</t>
          <t>鍵の導出は、[NIST.800-56A]のセクション 5.8.1 で定義される Concat KDF を用いて行われ、ダイジェスト法 は SHA-256 である。Concat KDF のパラメータは以下のように設定される。</t>
          <ul empty="true" spacing="normal">
            <li>
              <t>Z 共有秘密Zをオクテット列で表現したものが設定される。</t>
              <dl newline="true" spacing="normal" indent="3">
                <dt>keydatalen</dt>
                <dd>
	This is set to the number of bits in the desired output key.  For
      "ECDH-ES", this is length of the key used by the "enc" algorithm.
      For "ECDH-ES+A128KW", "ECDH-ES+A192KW", and "ECDH-ES+A256KW", this
      is 128, 192, and 256, respectively.
	</dd>
                <dt>AlgorithmID</dt>
                <dd>
	The AlgorithmID value is of the form Datalen || Data, where Data
      is a variable-length string of zero or more octets, and Datalen is
      a fixed-length, big-endian 32-bit counter that indicates the
      length (in octets) of Data.  In the Direct Key Agreement case,
      Data is set to the octets of the ASCII representation of the "enc"
      Header Parameter value.  In the Key Agreement with Key Wrapping
      case, Data is set to the octets of the ASCII representation of the
      "alg" (algorithm) Header Parameter value.
	</dd>
                <dt>PartyUInfo</dt>
                <dd>
	The PartyUInfo value is of the form Datalen || Data, where Data is
      a variable-length string of zero or more octets, and Datalen is a
      fixed-length, big-endian 32-bit counter that indicates the length
      (in octets) of Data.  If an "apu" (agreement PartyUInfo) Header
      Parameter is present, Data is set to the result of base64url
      decoding the "apu" value and Datalen is set to the number of
      octets in Data.  Otherwise, Datalen is set to 0 and Data is set to
      the empty octet sequence.
	</dd>
                <dt>PartyVInfo</dt>
                <dd>
	The PartyVInfo value is of the form Datalen || Data, where Data is
      a variable-length string of zero or more octets, and Datalen is a
      fixed-length, big-endian 32-bit counter that indicates the length
      (in octets) of Data.  If an "apv" (agreement PartyVInfo) Header
      Parameter is present, Data is set to the result of base64url
      decoding the "apv" value and Datalen is set to the number of
      octets in Data.  Otherwise, Datalen is set to 0 and Data is set to
      the empty octet sequence.
	</dd>
                <dt>SuppPubInfo</dt>
                <dd>
	This is set to the keydatalen represented as a 32-bit big-endian
      integer.
	</dd>
                <dt>SuppPrivInfo</dt>
                <dd>
	This is set to the empty octet sequence.
	</dd>
              </dl>
            </li>
          </ul>
          <t>アプリケーションは、"apu "と "apv "Header Parameterがそのアプリケーションでどのように使用されるかを指定する必要がある。apu」と「apv」の値は、使用される場合、区別されなければならない(MUST)。NIST.800-56A]に準拠したいアプリケーションは、例えば生産者と消費者を 識別する値を使用するなど、同文書の要求事項を満たす値を提供する必要がある。あるいは、アプリケーションは「Diffie-Hellman Key Agreement Method」<xref target="RFC2631" format="default"/> と同様の方法で鍵導出を実施してもよい[MAY]。この場合、「apu」パラメータは省略しても、ランダムな512ビット値 (RFC 2631のEpathemeral-StaticモードのPartyAInfoと同様)を表し、 「apv」パラメータは存在してはならない[SHOULD NOT]。</t>
          <t>この方法による鍵合意計算の例については、付録Cを参照のこと。</t>
        </section>
      </section>
      <section anchor="sect-4.7" numbered="true" toc="default">
        <name>Key Encryption with AES GCM</name>
        <t>本節では、JWE のコンテンツ暗号化キー（CEK）を、Galois/Counter Mode（GCM）の Advanced Encryption Standard（AES）（［AES］および［NIST.800-38D］）で暗号化する際の具体的な仕様を規定する。</t>
        <t>このアルゴリズムでは、サイズ96ビットの初期化ベクター(IV)の使用が必須である。IVはbase64urlエンコード形式で "iv"（初期化ベクトル）ヘッダーパラメータ値として表現されます。</t>
        <t>使用される Additional Authenticated Data の値は、空のオクテット文字列である。</t>
        <t>Authentication Tag出力の要求サイズは、鍵のサイズに関係なく、128ビットでなければならない(MUST)。</t>
        <t>JWE Encrypted Keyの値が暗号文の出力となる。</t>
        <t>Authentication Tagの出力は、base64urlエンコード形式で "tag"（認証タグ）ヘッダーパラメータ値として表現される。</t>
        <t>JWE 暗号化鍵が、対応するアルゴリズムと鍵サイズで CEK を暗号化した結果であることを示すために、以下の "alg"（アルゴリズム）ヘッダーパラメータ値が使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Key Management Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">A128GCMKW</td>
              <td align="left">Key wrapping with AES GCM using 128-bit key</td>
            </tr>
            <tr>
              <td align="left">A192GCMKW</td>
              <td align="left">Key wrapping with AES GCM using 192-bit key</td>
            </tr>
            <tr>
              <td align="left">A256GCMKW</td>
              <td align="left">Key wrapping with AES GCM using 256-bit key</td>
            </tr>
          </tbody>
        </table>
        <section anchor="sect-4.7.1" numbered="true" toc="default">
          <name>Header Parameters Used for AES GCM Key Encryption</name>
          <t>AES GCM 鍵の暗号化には以下の Header Parameter を使用する．</t>
          <section anchor="sect-4.7.1.1" numbered="true" toc="default">
            <name>"iv" (Initialization Vector) Header Parameter</name>
            <t>iv" (initialization vector) Header Parameter 値は、鍵の暗号化操作に使用される96ビットのIV値をbase64urlでエンコードしたものである。このHeader Parameterは、これらのアルゴリズムが使用されるとき、必ず存在し、実装によって理解され、処理されなければならない(MUST)。</t>
          </section>
          <section anchor="sect-4.7.1.2" numbered="true" toc="default">
            <name>"tag" (Authentication Tag) Header Parameter</name>
            <t>tag」(認証タグ)Header Parameter値は、鍵の暗号化操作の結果得られた128ビットAuthentication Tag値をbase64urlでエンコードしたものである。このHeader Parameterは、これらのアルゴリズムが使用されるときに存在し、実装によって理解され処理されなければならない(MUST)。</t>
          </section>
        </section>
      </section>
      <section anchor="sect-4.8" numbered="true" toc="default">
        <name>Key Encryption with PBES2</name>
        <t>本節では、JWE の CEK をパスワードで暗号化する際の具体的な方法として、<xref target="RFC2898" format="default"/> の 6.2 節で規定される PBES2 方式を用いてユーザから与えられたパスワードから暗号鍵を導出し、その暗号鍵を用いて JWE CEK を暗号化する方法を定義している。</t>
        <t>これらのアルゴリズムは、PBKDF2鍵導出のための疑似乱数関数(PRF)としてHMAC SHA-2アルゴリズムを使用し、暗号化スキームにはAES Key Wrap<xref target="RFC3394" format="default"/> を使用する。PBES2パスワードの入力はオクテット列である。使用するパスワードがオクテット列ではなくテキスト文字列として表現される場合、テキスト文字列のUTF-8エンコーディングがオクテット列として使用されなければならない(MUST)。saltパラメータは、以下の「p2s」の定義で指定されているように、「p2s」 (PBES2 salt input) Header Parameter値と「alg」 (algorithm) Header Parameter値から計算されなければならない (MUST)。反復回数パラメータは、"p2c" (PBES2 count) Header Parameter の値として提供されなければならない(MUST)。これらのアルゴリズムはそれぞれPRFとしてHMAC SHA-256、HMAC SHA-384、HMAC SHA-512を使用し、128、192、256ビットのAES Key Wrapキーを使用する。派生鍵の長さはそれぞれ16、24、32オクテットである。</t>
        <t>以下の "alg"（アルゴリズム）Header Parameter の値は、JWE 暗号化鍵が、対応するパスワードベースの暗号化アルゴリズムの結果を、対応する鍵の暗号化鍵として用いて CEK を暗号化した結果であることを示すために用いられる。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "alg" Param Value</th>
              <th align="left"> Key Management Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">PBES2-HS256+A128KW</td>
              <td align="left">PBES2 with HMAC SHA-256 and "A128KW"</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">wrapping</td>
            </tr>
            <tr>
              <td align="left">PBES2-HS384+A192KW</td>
              <td align="left">PBES2 with HMAC SHA-384 and "A192KW"</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">wrapping</td>
            </tr>
            <tr>
              <td align="left">PBES2-HS512+A256KW</td>
              <td align="left">PBES2 with HMAC SHA-512 and "A256KW"</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">wrapping</td>
            </tr>
          </tbody>
        </table>
        <t>PBES2-HS256+A128KW」を用いた鍵暗号の計算例については、JWK仕様書（<xref target="JWK" format="default"/> ）の付録Cを参照してください。</t>
        <section anchor="sect-4.8.1" numbered="true" toc="default">
          <name>Header Parameters Used for PBES2 Key Encryption</name>
          <t>PBES2 による鍵暗号化には、以下の Header Parameter が使用される。</t>
          <section anchor="sect-4.8.1.1" numbered="true" toc="default">
            <name>"p2s" (PBES2 Salt Input) Header Parameter</name>
            <t>p2s" (PBES2 salt input) Header Parameterは、PBKDF2ソルト値の一部として使用される Salt Input値をエンコードする。p2s」値はBASE64URL(Salt Input)である。このHeader Parameterは、これらのアルゴリズムが使用されるときに存在し、実装に よって理解され処理されなければならない[MUST]。</t>
            <t>ソルトは、与えられたパスワードから派生する可能性のある鍵を拡張する。8オクテット以上を含むSalt Input値が使用されなければならない[MUST]。新しいSalt Input値は、暗号化操作のたびにランダムに生成されなけれ ばならない[MUST]。ランダムな値の生成に関する考察は、RFC 4086<xref target="RFC4086" format="default"/> を参照すること。使用されるソルト値は、(UTF8(Alg) || 0x00 || Salt Input) であり、Algは「alg」ヘッダーパラメータ値である。</t>
          </section>
          <section anchor="sect-4.8.1.2" numbered="true" toc="default">
            <name>"p2c" (PBES2 Count) Header Parameter</name>
            <t>p2c" (PBES2 count) Header Parameter は、正のJSON整数で表されるPBKDF2反復回数を含む。この Header Parameter は、これらのアルゴリズムが使用されるとき、必ず存在し、実装によって理解され、処理されなければならない(MUST)。</t>
            <t>反復計算の回数は、理想的にはソルトによってもたらされる可能性のある鍵の範囲によって複合的に計算される費用を追加します。最小反復回数1000回が推奨される(RECOMMENDED)。</t>
          </section>
        </section>
      </section>
    </section>
    <section anchor="sect-5" numbered="true" toc="default">
      <name>Cryptographic Algorithms for Content Encryption</name>
      <t>JWEは、暗号化アルゴリズムを用いて平文を暗号化し、完全性を保護するとともに、追加認証データを完全性保護する。</t>
      <section anchor="sect-5.1" numbered="true" toc="default">
        <name>"enc" (Encryption Algorithm) Header Parameter Values for JWE</name>
        <t>以下の表は、JWE で使用するために本仕様で定義された "enc"（暗号化アルゴリズム）ヘッダーパラメータの値群である。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "enc" Param Value</th>
              <th align="left"> Content Encryption Algorithm </th>
              <th align="left"> Implementation Requirements</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">A128CBC-HS256</td>
              <td align="left">AES_128_CBC_HMAC_SHA_256</td>
              <td align="left">Required</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">authenticated encryption</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">algorithm, as defined in Section</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">5.2.3</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A192CBC-HS384</td>
              <td align="left">AES_192_CBC_HMAC_SHA_384</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">authenticated encryption</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">algorithm, as defined in Section</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">5.2.4</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A256CBC-HS512</td>
              <td align="left">AES_256_CBC_HMAC_SHA_512</td>
              <td align="left">Required</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">authenticated encryption</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">algorithm, as defined in Section</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">5.2.5</td>
              <td align="left"/>
            </tr>
            <tr>
              <td align="left">A128GCM</td>
              <td align="left">AES GCM using 128-bit key</td>
              <td align="left">Recommended</td>
            </tr>
            <tr>
              <td align="left">A192GCM</td>
              <td align="left">AES GCM using 192-bit key</td>
              <td align="left">Optional</td>
            </tr>
            <tr>
              <td align="left">A256GCM</td>
              <td align="left">AES GCM using 256-bit key</td>
              <td align="left">Recommended</td>
            </tr>
          </tbody>
        </table>
        <t>また、すべてJWE Initialization Vectorの値を使用し、JWE CiphertextとJWE Authentication Tagの値を生成します。</t>
        <t>本仕様で定義される JWE "enc"（暗号化アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用される同等の識別子を相互参照する表は付録 A.3 を参照されたい。</t>
      </section>
      <section anchor="sect-5.2" numbered="true" toc="default">
        <name>AES_CBC_HMAC_SHA2 Algorithms</name>
        <t>このセクションでは、Cipher Block Chaining (CBC) モード [NIST.800-38A] の AES [AES] と<xref target="RFC5652" format="default"/> のセクション 6.3 による PKCS #7 パディング操作、および HMAC (<xref target="RFC2104" format="default"/> と [SHS]) 操作を組み合わせて構築した認証暗号化アルゴリズムファミリーを定義している。このアルゴリズムファミリーは AES_CBC_HMAC_SHA2 と呼ばれます。最初のものは128ビットCBCキーとHMAC SHA-256、2番目は192ビットCBCキーとHMAC SHA-384、 3番目は256ビットCBCキーとHMAC SHA-512を使用するものである。これらのアルゴリズムのテストケースは、付録Bに記載されている。</t>
        <t>これらのアルゴリズムは、「Authenticated Encryption with AES-CBC and HMAC-SHA」<xref target="I-D.mcgrew-aead-aes-cbc-hmac-sha2" format="default"/> に基づいており、同じ暗号計算を行うが、出力表現において暗号文の値に連結されるのではなく、 初期化ベクトル(IV)と認証タグの値は別々のままである。このオプションについては、同仕様の付録Bで説明されている。このアルゴリズムファミリーは、<xref target="I-D.mcgrew-aead-aes-cbc-hmac-sha2" format="default"/> のアルゴリズムファミリーを一般化したものであり、それらのアルゴリズムを実装するために使用することができる。</t>
        <section anchor="sect-5.2.1" numbered="true" toc="default">
          <name>Conventions Used in Defining AES_CBC_HMAC_SHA2</name>
          <dl newline="true" spacing="normal" indent="3">
            <dt>We use the following notational conventions.</dt>
            <dd>
	CBC-PKCS7-ENC(X, P) denotes the AES-CBC encryption of P using PKCS
      #7 padding utilizing the cipher with the key X.
      MAC(Y, M) denotes the application of the MAC to the message M
      using the key Y.
	</dd>
          </dl>
        </section>
        <section anchor="sect-5.2.2" numbered="true" toc="default">
          <name>Generic AES_CBC_HMAC_SHA2 Algorithm</name>
          <t>本節では、AES_CBC_HMAC_SHA2 を、使用する AES-CBC 鍵サイズやハッシュ関数に依存しない形で定義する。5.2.2.1 節と 5.2.2.2 節では、一般的な暗号化アルゴリズムと復号化アルゴリズムを定義する。5.2.3 節から 5.2.5 節では、これらの詳細を指定する AES_CBC_HMAC_SHA2 のインスタンスを定義している。</t>
          <section anchor="sect-5.2.2.1" numbered="true" toc="default">
            <name>AES_CBC_HMAC_SHA2 Encryption</name>
            <t>認証付き暗号アルゴリズムは、秘密鍵K、平文P、追加認証データA、初期化ベクトルIVの4つのオクテット文字列を入力として受け取る。出力として、認証された暗号文の値Eと認証タグの値Tが提供される。平文のデータは暗号化され認証され、追加認証データは認証されるが、暗号化されない。</t>
            <t>暗号化処理は以下の通り、または同等の手順で行われます。</t>
            <ol spacing="normal" type="1"><li>The secondary keys MAC_KEY and ENC_KEY are generated from the
       input key K as follows.  Each of these two keys is an octet
       string.</li>
            </ol>
            <artwork name="" type="" align="left" alt="">
       MAC_KEY consists of the initial MAC_KEY_LEN octets of K, in
       order.
       ENC_KEY consists of the final ENC_KEY_LEN octets of K, in
       order.
</artwork>
            <dl newline="false" spacing="normal" indent="4">
              <dt/>
              <dd>
       The number of octets in the input key K MUST be the sum of
       MAC_KEY_LEN and ENC_KEY_LEN.  The values of these parameters are
       specified by the Authenticated Encryption algorithms in Sections
       5.2.3 through 5.2.5.  Note that the MAC key comes before the
       encryption key in the input key K; this is in the opposite order
       of the algorithm names in the identifier "AES_CBC_HMAC_SHA2".</dd>
            </dl>
            <ol spacing="normal" type="1"><li>The IV used is a 128-bit value generated randomly or
       pseudorandomly for use in the cipher.</li>
              <li>The plaintext is CBC encrypted using PKCS #7 padding using
       ENC_KEY as the key and the IV.  We denote the ciphertext output
       from this step as E.</li>
              <li>The octet string AL is equal to the number of bits in the
       Additional Authenticated Data A expressed as a 64-bit unsigned
       big-endian integer.</li>
              <li>A message Authentication Tag T is computed by applying HMAC
       <xref target="RFC2104" format="default"/> to the following data, in order:</li>
            </ol>
            <artwork name="" type="" align="left" alt="">
       the Additional Authenticated Data A,
       the Initialization Vector IV,
       the ciphertext E computed in the previous step, and
       the octet string AL defined above.
</artwork>
            <dl newline="false" spacing="normal" indent="4">
              <dt/>
              <dd>
       The string MAC_KEY is used as the MAC key.  We denote the output
       of the MAC computed in this step as M.  The first T_LEN octets of
       M are used as T.</dd>
            </dl>
            <ol spacing="normal" type="1"><li>The ciphertext E and the Authentication Tag T are returned as the
       outputs of the authenticated encryption.</li>
            </ol>
            <t>暗号化処理は以下のように図示することができる。ここで、K、P、A、IV、Eはそれぞれ、鍵、平文、追加認証データ、初期化ベクトル、暗号文を表す。</t>
            <artwork name="" type="" align="left" alt="">
   MAC_KEY = initial MAC_KEY_LEN octets of K,
   ENC_KEY = final ENC_KEY_LEN octets of K,
   E = CBC-PKCS7-ENC(ENC_KEY, P),
   M = MAC(MAC_KEY, A || IV || E || AL),
   T = initial T_LEN octets of M.
</artwork>
          </section>
          <section anchor="sect-5.2.2.2" numbered="true" toc="default">
            <name>AES_CBC_HMAC_SHA2 Decryption</name>
            <t>認証された復号化操作は、5つの入力を有する。K、A、IV、E、およびTである。出力は1つだけで、平文値Pか、入力が真正でないことを示す特別な記号FAILのどちらかである。認証された復号アルゴリズムは以下の通りであり、または同等の手順が用いられる。</t>
            <ol spacing="normal" type="1"><li>The secondary keys MAC_KEY and ENC_KEY are generated from the
       input key K as in Step 1 of <xref target="sect-5.2.2.1" format="default"/>.</li>
              <li>The integrity and authenticity of A and E are checked by
       computing an HMAC with the inputs as in Step 5 of
       <xref target="sect-5.2.2.1" format="default"/>.  The value T, from the previous step, is
       compared to the first MAC_KEY length bits of the HMAC output.  If
       those values are identical, then A and E are considered valid,
       and processing is continued.  Otherwise, all of the data used in
       the MAC validation are discarded, and the authenticated
       decryption operation returns an indication that it failed, and
       the operation halts.  (But see Section 11.5 of <xref target="JWE" format="default"/> for security
       considerations on thwarting timing attacks.)</li>
              <li>The value E is decrypted and the PKCS #7 padding is checked and
       removed.  The value IV is used as the Initialization Vector.  The
       value ENC_KEY is used as the decryption key.</li>
              <li>The plaintext value is returned.</li>
            </ol>
          </section>
        </section>
        <section anchor="sect-5.2.3" numbered="true" toc="default">
          <name>AES_128_CBC_HMAC_SHA_256</name>
          <t>このアルゴリズムは、上記の汎用 AES_CBC_HMAC_SHA2 アルゴリズムの具体的なインスタンス化である。HMACメッセージ認証コード(<xref target="RFC2104" format="default"/> )とSHA-256ハッシュ関数[SHS]を使用してメッセージ認証を行い、HMAC出力は128ビットに切り詰められ、<xref target="RFC4868" format="default"/> で定義されているHMAC-SHA-256-128アルゴリズムに相当する。暗号化には、[NIST.800-38A]のセクション6.2に定義されているCBC動作モードのAESを使用し、PKCS#7パディングと128ビットIV値を使用する。</t>
          <t>AES_128_CBC_HMAC_SHA_256に固有のAES_CBC_HMAC_SHA2パラメータは以下の通りである。</t>
          <artwork name="" type="" align="left" alt="">
   The input key K is 32 octets long.
   ENC_KEY_LEN is 16 octets.
   MAC_KEY_LEN is 16 octets.
   The SHA-256 hash algorithm is used for the HMAC.
   The HMAC-SHA-256 output is truncated to T_LEN=16 octets, by
   stripping off the final 16 octets.
</artwork>
        </section>
        <section anchor="sect-5.2.4" numbered="true" toc="default">
          <name>AES_192_CBC_HMAC_SHA_384</name>
          <t>AES_192_CBC_HMAC_SHA_384 は AES_128_CBC_HMAC_SHA_256 をベースにしているが、以下のような違いがある。</t>
          <artwork name="" type="" align="left" alt="">
   The input key K is 48 octets long instead of 32.
   ENC_KEY_LEN is 24 octets instead of 16.
   MAC_KEY_LEN is 24 octets instead of 16.
   SHA-384 is used for the HMAC instead of SHA-256.
   The HMAC SHA-384 value is truncated to T_LEN=24 octets instead of
   16.
</artwork>
        </section>
        <section anchor="sect-5.2.5" numbered="true" toc="default">
          <name>AES_256_CBC_HMAC_SHA_512</name>
          <t>AES_256_CBC_HMAC_SHA_512はAES_128_CBC_HMAC_SHA_256をベースにしていますが、以下のような違いがあります。</t>
          <artwork name="" type="" align="left" alt="">
   The input key K is 64 octets long instead of 32.
   ENC_KEY_LEN is 32 octets instead of 16.
   MAC_KEY_LEN is 32 octets instead of 16.
   SHA-512 is used for the HMAC instead of SHA-256.
   The HMAC SHA-512 value is truncated to T_LEN=32 octets instead of
   16.
</artwork>
        </section>
        <section anchor="sect-5.2.6" numbered="true" toc="default">
          <name>Content Encryption with AES_CBC_HMAC_SHA2</name>
          <t>ここでは、AES_CBC_HMAC_SHA2 アルゴリズムによる認証付き暗号化の具体的な方法を定義する。</t>
          <t>CEKは秘密鍵Kとして使用される。</t>
          <t>以下の "enc"（暗号化アルゴリズム）ヘッダパラメータ値は、JWE 暗号文と JWE 認証タグの値が対応するアルゴリズムを使用して計算されたことを示すために使用される。</t>
          <table align="center">
            <thead>
              <tr>
                <th align="left"> "enc" Param Value</th>
                <th align="left"> Content Encryption Algorithm </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">A128CBC-HS256</td>
                <td align="left">AES_128_CBC_HMAC_SHA_256 authenticated encryption</td>
              </tr>
              <tr>
                <td align="left"/>
                <td align="left">algorithm, as defined in Section 5.2.3</td>
              </tr>
              <tr>
                <td align="left">A192CBC-HS384</td>
                <td align="left">AES_192_CBC_HMAC_SHA_384 authenticated encryption</td>
              </tr>
              <tr>
                <td align="left"/>
                <td align="left">algorithm, as defined in Section 5.2.4</td>
              </tr>
              <tr>
                <td align="left">A256CBC-HS512</td>
                <td align="left">AES_256_CBC_HMAC_SHA_512 authenticated encryption</td>
              </tr>
              <tr>
                <td align="left"/>
                <td align="left">algorithm, as defined in Section 5.2.5</td>
              </tr>
            </tbody>
          </table>
        </section>
      </section>
      <section anchor="sect-5.3" numbered="true" toc="default">
        <name>Content Encryption with AES GCM</name>
        <t>本節では，AES を用いた Galois/Counter Mode (GCM) による認証付き暗号化([AES]および[NIST.800-38D])の具体的な実施方法について定義する．</t>
        <t>CEK は暗号化キーとして使用される。</t>
        <t>このアルゴリズムでは、96 ビットの IV を使用することが要求される。</t>
        <t>Authentication Tag出力の要求サイズは、鍵のサイズに関係なく、128ビットでなければならない(MUST)。</t>
        <t>以下の "enc"（暗号化アルゴリズム）ヘッダーパラメーター値は、JWE 暗号文と JWE 認証タグの値が、対応するアルゴリズムとキーサイズを使用して計算されたことを示すために使用される。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "enc" Param Value</th>
              <th align="left"> Content Encryption Algorithm</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">A128GCM</td>
              <td align="left">AES GCM using 128-bit key</td>
            </tr>
            <tr>
              <td align="left">A192GCM</td>
              <td align="left">AES GCM using 192-bit key</td>
            </tr>
            <tr>
              <td align="left">A256GCM</td>
              <td align="left">AES GCM using 256-bit key</td>
            </tr>
          </tbody>
        </table>
        <t keepWithPrevious="true">このアルゴリズムを用いた例を[JWE]のAppendix A.1に示す。</t>
      </section>
    </section>
    <section anchor="sect-6" numbered="true" toc="default">
      <name>Cryptographic Algorithms for Keys</name>
      <t>JSON Web Key (JWK)<xref target="JWK" format="default"/> は、暗号鍵を表すJSONデータ構造である。これらの鍵は、非対称または対称のいずれかにすることができます。また、鍵に関する公開情報と秘密情報の両方を保持することができる。本節では、本書で規定するアルゴリズムを用いた鍵のパラメータを定義する。</t>
      <section anchor="sect-6.1" numbered="true" toc="default">
        <name>"kty" (Key Type) Parameter Values</name>
        <t>下表は、JWK で使用するために本仕様で定義される "kty"（キータイプ）パラメータ値のセットである。</t>
        <table align="center">
          <thead>
            <tr>
              <th align="left"> "kty" Param Value</th>
              <th align="left"> Key Type </th>
              <th align="left"> Implementation Requirements</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">EC</td>
              <td align="left">Elliptic Curve [DSS]</td>
              <td align="left">Recommended+</td>
            </tr>
            <tr>
              <td align="left">RSA</td>
              <td align="left">RSA [RFC3447]</td>
              <td align="left">Required</td>
            </tr>
            <tr>
              <td align="left">oct</td>
              <td align="left">Octet sequence (used to</td>
              <td align="left">Required</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">represent symmetric keys)</td>
              <td align="left"/>
            </tr>
          </tbody>
        </table>
        <t>実装要件欄の "+"の使用は、要件の強度が将来の仕様のバージョンで増加する可能性があることを示す。</t>
      </section>
      <section anchor="sect-6.2" numbered="true" toc="default">
        <name>Parameters for Elliptic Curve Keys</name>
        <t>JWKは楕円曲線[DSS]鍵を表すことができる。この場合、"kty "メンバの値は "EC "となる。</t>
        <section anchor="sect-6.2.1" numbered="true" toc="default">
          <name>Parameters for Elliptic Curve Public Keys</name>
          <t>楕円曲線公開鍵は、有限体から描かれた座標の組で表され、その組が楕円曲線上の点を定義する。すべての楕円曲線公開鍵には、次のメンバが存在しなければなりません（MUST）。</t>
          <artwork name="" type="" align="left" alt="">
o  "crv"
o  "x"
</artwork>
          <t>次のセクションで定義される3つの曲線の楕円曲線公開鍵には、以下のメンバーも存在しなけれ ばならない。</t>
          <artwork name="" type="" align="left" alt="">
o  "y"
</artwork>
          <section anchor="sect-6.2.1.1" numbered="true" toc="default">
            <name>"crv" (Curve) Parameter</name>
            <t>crv」（curve）パラメータは、鍵で使用される暗号化曲線を識別する。本仕様で使用する[DSS]の曲線の値は以下の通りである。</t>
            <artwork name="" type="" align="left" alt="">
o  "P-256"
o  "P-384"
o  "P-521"
</artwork>
            <t>これらの値は、<xref target="sect-7.6" format="default"/> で定義されている IANA "JSON Web Key Elliptic Curve" レジストリに登録されている。他の仕様により、追加の「crv」値を登録することができる。追加の曲線を登録する仕様では、登録された曲線の鍵を表現するためにどのようなパラメータを使用するかを定義しなければならない。crvの値は、大文字と小文字を区別する文字列である。</t>
            <t>SEC1<xref target="SEC1" format="default"/> ポイント圧縮は、これら3つのカーブのいずれでもサポートされていません。</t>
          </section>
          <section anchor="sect-6.2.1.2" numbered="true" toc="default">
            <name>"x" (X Coordinate) Parameter</name>
            <t>x" (x座標)パラメータは楕円曲線点のx座標を含む。これは、SEC1<xref target="SEC1" format="default"/> のセクション2.3.5で定義されているように、座標のオクテット文字列表現の base64urlエンコーディングとして表現される。このオクテット文字列の長さは、「crv」パラメータで指定された曲線の 座標の全サイズでなければならない[MUST]。例えば、「crv」の値が「P-521」の場合、オクテット文字列は66オクテットの長さでなければならない。</t>
          </section>
          <section anchor="sect-6.2.1.3" numbered="true" toc="default">
            <name>"y" (Y Coordinate) Parameter</name>
            <t>y" (y座標)パラメータは、楕円曲線点のy座標を含む。これは、SEC1<xref target="SEC1" format="default"/> のセクション2.3.5で定義されているように、座標のオクテット文字列表現を base64urlエンコードしたものとして表現される。このオクテット文字列の長さは、「crv」パラメータで指定された曲線の 座標の全サイズでなければならない[MUST]。例えば、「crv」の値が「P-521」の場合、オクテット文字列は66オクテットの長さでなければならない。</t>
          </section>
        </section>
        <section anchor="sect-6.2.2" numbered="true" toc="default">
          <name>Parameters for Elliptic Curve Private Keys</name>
          <t>Elliptic Curve 公開鍵を表現するために使用されるメンバに加えて、Elliptic Curve 秘密鍵を表現するために以下のメンバが存在しなけれ ばならない。</t>
          <section anchor="sect-6.2.2.1" numbered="true" toc="default">
            <name>"d" (ECC Private Key) Parameter</name>
            <t>d" (ECC private key) パラメータには、楕円曲線秘密鍵(Elliptic Curve Private Key)の値が含まれる。これは、SEC1 (<xref target="SEC1" format="default"/>) のセクション2.3.7で定義されているように、秘密鍵の値のオクテット文字列表現を base64url でエンコードしたものとして表現される。このオクテット文字列の長さは ceiling(log-base-2(n)/8) octets (ここでnは曲線の次数)でなければならない(MUST)。</t>
          </section>
        </section>
      </section>
      <section anchor="sect-6.3" numbered="true" toc="default">
        <name>Parameters for RSA Keys</name>
        <t>JWKはRSA<xref target="RFC3447" format="default"/> キーを表すことができる。この場合、"kty "メンバの値は "RSA "となる。以下に定義されるパラメータのセマンティクスは、RFC3447のセクション3.1および 3.2で定義されるものと同じである。</t>
        <section anchor="sect-6.3.1" numbered="true" toc="default">
          <name>Parameters for RSA Public Keys</name>
          <t>RSA公開鍵の場合、以下のメンバが存在しなければならない（MUST）。</t>
          <section anchor="sect-6.3.1.1" numbered="true" toc="default">
            <name>"n" (Modulus) Parameter</name>
            <t>n" (modulus) パラメータには、RSA 公開鍵のモジュラス値が格納される。Base64urlUIntでエンコードされた値として表現されます。</t>
            <t>例えば、2048ビットの鍵の場合、256ではなく257オクテットを返すなど、一部の暗号ライブラリは剰余表現にゼロ値の余分なオクテットを前置することがあることに実装者は気づいています。このようなライブラリを使用する実装では、base64urlエンコードされた表現から余分なオクテットを省略するように注意する必要があります。</t>
          </section>
          <section anchor="sect-6.3.1.2" numbered="true" toc="default">
            <name>"e" (Exponent) Parameter</name>
            <t>e」（指数）パラメータには、RSA公開鍵の指数値が格納される。Base64urlUIntでエンコードされた値として表現されます。</t>
            <t>例えば、65537という値を表現する場合、base64urlエンコードされるオクテット列は3つのオクテット[1, 0, 1]で構成されなければならない[MUST]。</t>
          </section>
        </section>
        <section anchor="sect-6.3.2" numbered="true" toc="default">
          <name>Parameters for RSA Private Keys</name>
          <t>RSA 公開鍵を表すメンバに加えて、RSA 秘密鍵を表すメンバとして以下のメンバを使用する。パラメータ "d "はRSA秘密鍵に必須(Required)である。他のパラメータは最適化を可能にするので、RSA秘密鍵を表すJWKの生成者が 含めるべきである(SHOULD)。製作者が他の秘密鍵パラメータを含む場合、他のパラメータはすべて存在しな ければならない[MUST]。ただし、「oth」は2つ以上の素因数が使われたときのみ存在しな ければならない[MUST]。</t>
          <section anchor="sect-6.3.2.1" numbered="true" toc="default">
            <name>"d" (Private Exponent) Parameter</name>
            <t>d" (private exponent) パラメータは、RSA秘密鍵のプライベート指数値を含む。これはBase64urlUIntでエンコードされた値として表されます。</t>
          </section>
          <section anchor="sect-6.3.2.2" numbered="true" toc="default">
            <name>"p" (First Prime Factor) Parameter</name>
            <t>p" (第一素因数) パラメータは第一素因数を含む。Base64urlUIntでエンコードされた値として表現されます。</t>
          </section>
          <section anchor="sect-6.3.2.3" numbered="true" toc="default">
            <name>"q" (Second Prime Factor) Parameter</name>
            <t>q」（第二素因数）パラメータには第二素因数が含まれる。Base64urlUIntでエンコードされた値として表現されます。</t>
          </section>
          <section anchor="sect-6.3.2.4" numbered="true" toc="default">
            <name>"dp" (First Factor CRT Exponent) Parameter</name>
            <t>dp" (first factor CRT exponent) パラメータには、第一因子の中国残留定理 (Chinese Remainder Theorem, CRT) の指数が格納されます。Base64urlUIntでエンコードされた値として表現されます。</t>
          </section>
          <section anchor="sect-6.3.2.5" numbered="true" toc="default">
            <name>"dq" (Second Factor CRT Exponent) Parameter</name>
            <t>dq" (second factor CRT exponent)パラメータは、第二因子のCRT指数を含む。Base64urlUInt-エンコードされた値で表されます。</t>
          </section>
          <section anchor="sect-6.3.2.6" numbered="true" toc="default">
            <name>"qi" (First CRT Coefficient) Parameter</name>
            <t>qi" (first CRT coefficient) パラメータには、2番目の因子のCRT係数が格納される。Base64urlUIntでエンコードされた値として表現されます。</t>
          </section>
          <section anchor="sect-6.3.2.7" numbered="true" toc="default">
            <name>"oth" (Other Primes Info) Parameter</name>
            <t>oth」(他の素数情報)パラメータは、3番目以降の素数が存在する場合、その素数 に関する情報の配列を含む。2つのプライムしか使われていないとき(通常の場合)、このパラメータは省略しなけれ ばならない(MUST)。3つ以上の素数が使用された場合、配列の要素数は、使用された素数から2を引いた数でなければならない(MUST)。この場合の詳細については、RFC 3447<xref target="RFC3447" format="default"/> の付録A.1.2のOtherPrimeInfoパラメータの説明を参照されたい。JWKの消費者が2つ以上の素数を持つ秘密鍵をサポートしておらず、"oth "パ ラメータを含む秘密鍵に遭遇した場合、その鍵を使用してはならない(MUST NOT)。配列の各要素は、以下のメンバーを持つオブジェクトでなければならない(MUST)。</t>
            <section anchor="sect-6.3.2.7.1" numbered="true" toc="default">
              <name>"r" (Prime Factor)</name>
              <t>oth配列のパラメータ "r"（素因数）は、後続の素因数の値を表す。Base64urlUIntでエンコードされた値として表現されます。</t>
            </section>
            <section anchor="sect-6.3.2.7.2" numbered="true" toc="default">
              <name>"d" (Factor CRT Exponent)</name>
              <t>oth配列のパラメータ d (factor CRT exponent) は、対応する素因数のCRT指数を表します。Base64urlUIntでエンコードされた値として表現されます。</t>
            </section>
            <section anchor="sect-6.3.2.7.3" numbered="true" toc="default">
              <name>"t" (Factor CRT Coefficient)</name>
              <t>oth配列のパラメータ t (factor CRT coefficient) は、対応する素因数のCRT係数を表します。Base64urlUIntでエンコードされた値として表現されます。</t>
            </section>
          </section>
        </section>
      </section>
      <section anchor="sect-6.4" numbered="true" toc="default">
        <name>Parameters for Symmetric Keys</name>
        <t>JWKの "kty "メンバ値が "oct"(オクテット列)の場合、"k"(<xref target="sect-6.4.1" format="default"/> 参照)は対称鍵(または値が1オクテット 列である他の鍵)を表すために使用される。アプリケーションが使用されるアルゴリズムを決定するために別の手段または慣例を使用しない限り、鍵と共に使用されることを意図したアルゴリズムを識別するために「alg」メンバーも存在すべきです(SHOULD)。</t>
        <section anchor="sect-6.4.1" numbered="true" toc="default">
          <name>"k" (Key Value) Parameter</name>
          <t>k」（鍵の値）パラメータは、対称鍵（または他の単一値）の値を含む。これは、鍵の値を含むオクテット列をbase64urlでエンコードしたものとして表現されます。</t>
        </section>
      </section>
    </section>
    <section anchor="sect-7" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>本仕様で確立されたすべてのレジストリには、以下の登録手順が使用される。</t>
      <t>値の登録手続きは、Specification Required<xref target="RFC5226" format="default"/> メーリングリストでの3週間の検討期間を経て、1人以上のDesignated Expertsの助言のもとで行われる。ただし，発行前の値の割り当てを可能にするため，指定専門家は，そのような仕様が発行されることを納得した上で登録を承認することができる。</t>
      <t>審査用メーリングリストに送られる登録依頼は、適切な件名（例："Request to register algorithm: example"）を使用する必要があります。</t>
      <t>レビュー期間内に、指定専門家は登録要求を承認または拒否し、この決定をレビューリストとIANAに伝える。拒否には、説明と、該当する場合、その要求を成功させるための提案を含めるべきである。</t>
      <t>21日を超えて未決定の登録要求は、IESGの注意を喚起し（iesg@ietf.org メーリングリストを使用）、解決を図ることができる。</t>
      <t>指定専門家が適用すべき基準には、提案された登録が既存の機能と重複しているかどうか、一般的な適用性があるか、または単一のアプリケーションにのみ有用であるかどうか、および登録の説明が明確であるかどうかの判断が含まれます。</t>
      <t>IANAは、指定された専門家からのレジストリ更新のみを受け入れなければならず、登録のためのすべての要求をレビューメーリングリストに向けるべきである。</t>
      <t>登録決定について幅広い情報に基づいたレビューを可能にするため、本仕様を使用する異なるアプリケーショ ンの視点を代表することができる複数の指定専門家を任命することが提案される。登録決定が特定の専門家の利益相反を引き起こすと考えられる場合、その専門家は他の専門家の判断に委ねるべきである。</t>
      <section anchor="sect-7.1" numbered="true" toc="default">
        <name>JSON Web Signature and Encryption Algorithms Registry</name>
        <t>この仕様は、JWS と JWE の "alg"（アルゴリズム）と "enc"（暗号化アルゴリズム）の Header Parameter の値に対して、IANA "JSON Web Signature and Encryption Algorithms" レジストリを確立するものである。レジストリには、アルゴリズム名、アルゴリズムの説明、アルゴリズムの使用場所、実装要件、変更コントローラ、それを定義する仕様への参照が記録されています。使用場所のセットが不連続であれば、同じアルゴリズム名を複数回登録することができる。</t>
        <t>鍵の長さが異なる複数のアルゴリズムを登録し、それぞれの鍵の長さを固定する 必要がある場合(例えば、鍵派生関数で生成されるため)、鍵の長さをアルゴリズム名 に含めることが提案されている。これにより、JSONテキストの読者は、より容易にセキュリティ上の判断を下すことができる。</t>
        <t>指定専門家は、登録されるアルゴリズムが現在暗号学的に信頼できると考えられているか、または非推奨または禁止として登録されているか、合理的なデューディリジェンスを行う必要があります。</t>
        <t>アルゴリズムの実装要件は、暗号の進化に伴い、例えばアルゴリズムのステータスをDeprecatedに変更したり、アルゴリズムのステータスをOptionalからRecommended+またはRequiredに変更したりするために、時間の経過とともに変更されることがある。実装要件の変更は、Designated Expertsによるレビューの後、Specification Requiredベースでのみ許可され、新しい仕様では改訂された実装要件レベルが定義される。</t>
        <section anchor="sect-7.1.1" numbered="true" toc="default">
          <name>Registration Template</name>
          <dl newline="true" spacing="normal" indent="3">
            <dt>Algorithm Name:</dt>
            <dd>
	The name requested (e.g., "HS256").  This name is a case-sensitive
      ASCII string.  Names may not match other registered names in a
      case-insensitive manner unless the Designated Experts state that
      there is a compelling reason to allow an exception.
	</dd>
            <dt>Algorithm Description:</dt>
            <dd>
	Brief description of the algorithm (e.g., "HMAC using SHA-256").
	</dd>
            <dt>Algorithm Usage Location(s):</dt>
            <dd>
	The algorithm usage locations.  This must be one or more of the
      values "alg" or "enc" if the algorithm is to be used with JWS or
      JWE.  The value "JWK" is used if the algorithm identifier will be
      used as a JWK "alg" member value, but will not be used with JWS or
      JWE; this could be the case, for instance, for non-authenticated
      encryption algorithms.  Other values may be used with the approval
      of a Designated Expert.
	</dd>
            <dt>JOSE Implementation Requirements:</dt>
            <dd>
	The algorithm implementation requirements for JWS and JWE, which
      must be one the words Required, Recommended, Optional, Deprecated,
      or Prohibited.  Optionally, the word can be followed by a "+" or
      "-".  The use of "+" indicates that the requirement strength is
      likely to be increased in a future version of the specification.
      The use of "-" indicates that the requirement strength is likely
      to be decreased in a future version of the specification.  Any
      identifiers registered for non-authenticated encryption algorithms
      or other algorithms that are otherwise unsuitable for direct use
      as JWS or JWE algorithms must be registered as "Prohibited".
	</dd>
            <dt>Change Controller:</dt>
            <dd>
	For Standards Track RFCs, list the "IESG".  For others, give the
      name of the responsible party.  Other details (e.g., postal
      address, email address, home page URI) may also be included.
	</dd>
            <dt>Specification Document(s):</dt>
            <dd>
	Reference to the document or documents that specify the parameter,
      preferably including URIs that can be used to retrieve copies of
      the documents.  An indication of the relevant sections may also be
      included but is not required.
	</dd>
            <dt>Algorithm Analysis Documents(s):</dt>
            <dd>
	References to a publication or publications in well-known
      cryptographic conferences, by national standards bodies, or by
      other authoritative sources analyzing the cryptographic soundness
      of the algorithm to be registered.  The Designated Experts may
      require convincing evidence of the cryptographic soundness of a
      new algorithm to be provided with the registration request unless
      the algorithm is being registered as Deprecated or Prohibited.
      Having gone through working group and IETF review, the initial
      registrations made by this document are exempt from the need to
      provide this information.
	</dd>
          </dl>
        </section>
        <section anchor="sect-7.1.2" numbered="true" toc="default">
          <name>Initial Registry Contents</name>
          <ul spacing="normal">
            <li>Algorithm Name: "HS256"</li>
            <li>Algorithm Description: HMAC using SHA-256</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Required</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.2 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "HS384"</li>
            <li>Algorithm Description: HMAC using SHA-384</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.2 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "HS512"</li>
            <li>Algorithm Description: HMAC using SHA-512</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.2 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RS256"</li>
            <li>Algorithm Description: RSASSA-PKCS1-v1_5 using SHA-256</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RS384"</li>
            <li>Algorithm Description: RSASSA-PKCS1-v1_5 using SHA-384</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RS512"</li>
            <li>Algorithm Description: RSASSA-PKCS1-v1_5 using SHA-512</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ES256"</li>
            <li>Algorithm Description: ECDSA using P-256 and SHA-256</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended+</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ES384"</li>
            <li>Algorithm Description: ECDSA using P-384 and SHA-384</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ES512"</li>
            <li>Algorithm Description: ECDSA using P-521 and SHA-512</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PS256"</li>
            <li>Algorithm Description: RSASSA-PSS using SHA-256 and MGF1 with
      SHA-256</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.5 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PS384"</li>
            <li>Algorithm Description: RSASSA-PSS using SHA-384 and MGF1 with
      SHA-384</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.5 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PS512"</li>
            <li>Algorithm Description: RSASSA-PSS using SHA-512 and MGF1 with
      SHA-512</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.5 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "none"</li>
            <li>Algorithm Description: No digital signature or MAC performed</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 3.6 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RSA1_5"</li>
            <li>Algorithm Description: RSAES-PKCS1-v1_5</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended-</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.2 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RSA-OAEP"</li>
            <li>Algorithm Description: RSAES OAEP using default parameters</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended+</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "RSA-OAEP-256"</li>
            <li>Algorithm Description: RSAES OAEP using SHA-256 and MGF1 with
      SHA-256</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A128KW"</li>
            <li>Algorithm Description: AES Key Wrap using 128-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A192KW"</li>
            <li>Algorithm Description: AES Key Wrap using 192-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A256KW"</li>
            <li>Algorithm Description: AES Key Wrap using 256-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "dir"</li>
            <li>Algorithm Description: Direct use of a shared symmetric key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.5 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ECDH-ES"</li>
            <li>Algorithm Description: ECDH-ES using Concat KDF</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended+</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ECDH-ES+A128KW"</li>
            <li>Algorithm Description: ECDH-ES using Concat KDF and "A128KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ECDH-ES+A192KW"</li>
            <li>Algorithm Description: ECDH-ES using Concat KDF and "A192KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "ECDH-ES+A256KW"</li>
            <li>Algorithm Description: ECDH-ES using Concat KDF and "A256KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A128GCMKW"</li>
            <li>Algorithm Description: Key wrapping with AES GCM using 128-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.7 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A192GCMKW"</li>
            <li>Algorithm Description: Key wrapping with AES GCM using 192-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.7 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A256GCMKW"</li>
            <li>Algorithm Description: Key wrapping with AES GCM using 256-bit key</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.7 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PBES2-HS256+A128KW"</li>
            <li>Algorithm Description: PBES2 with HMAC SHA-256 and "A128KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.8 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PBES2-HS384+A192KW"</li>
            <li>Algorithm Description: PBES2 with HMAC SHA-384 and "A192KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.8 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "PBES2-HS512+A256KW"</li>
            <li>Algorithm Description: PBES2 with HMAC SHA-512 and "A256KW"
      wrapping</li>
            <li>Algorithm Usage Location(s): "alg"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.8 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A128CBC-HS256"</li>
            <li>Algorithm Description: AES_128_CBC_HMAC_SHA_256 authenticated
      encryption algorithm</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Required</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.2.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A192CBC-HS384"</li>
            <li>Algorithm Description: AES_192_CBC_HMAC_SHA_384 authenticated
      encryption algorithm</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.2.4 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A256CBC-HS512"</li>
            <li>Algorithm Description: AES_256_CBC_HMAC_SHA_512 authenticated
      encryption algorithm</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Required</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.2.5 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A128GCM"</li>
            <li>Algorithm Description: AES GCM using 128-bit key</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A192GCM"</li>
            <li>Algorithm Description: AES GCM using 192-bit key</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
            <li>Algorithm Name: "A256GCM"</li>
            <li>Algorithm Description: AES GCM using 256-bit key</li>
            <li>Algorithm Usage Location(s): "enc"</li>
            <li>JOSE Implementation Requirements: Recommended</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 5.3 of RFC 7518</li>
            <li>Algorithm Analysis Documents(s): n/a</li>
          </ul>
        </section>
      </section>
      <section anchor="sect-7.2" numbered="true" toc="default">
        <name>Header Parameter Names Registration</name>
        <t>本仕様書の 4.6.1 節、4.7.1 節、および 4.8.1 節で定義したヘッダーパラメータ名を、<xref target="JWS" format="default"/> で制定された IANA "JSON Web Signature and Encryption Header Parameters" レジストリに登録する。</t>
        <section anchor="sect-7.2.1" numbered="true" toc="default">
          <name>Registry Contents</name>
          <ul spacing="normal">
            <li>Header Parameter Name: "epk"</li>
            <li>Header Parameter Description: Ephemeral Public Key</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6.1.1 of RFC 7518</li>
            <li>Header Parameter Name: "apu"</li>
            <li>Header Parameter Description: Agreement PartyUInfo</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6.1.2 of RFC 7518</li>
            <li>Header Parameter Name: "apv"</li>
            <li>Header Parameter Description: Agreement PartyVInfo</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.6.1.3 of RFC 7518</li>
            <li>Header Parameter Name: "iv"</li>
            <li>Header Parameter Description: Initialization Vector</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.7.1.1 of RFC 7518</li>
            <li>Header Parameter Name: "tag"</li>
            <li>Header Parameter Description: Authentication Tag</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.7.1.2 of RFC 7518</li>
            <li>Header Parameter Name: "p2s"</li>
            <li>Header Parameter Description: PBES2 Salt Input</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.8.1.1 of RFC 7518</li>
            <li>Header Parameter Name: "p2c"</li>
            <li>Header Parameter Description: PBES2 Count</li>
            <li>Header Parameter Usage Location(s): JWE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 4.8.1.2 of RFC 7518</li>
          </ul>
        </section>
      </section>
      <section anchor="sect-7.3" numbered="true" toc="default">
        <name>JSON Web Encryption Compression Algorithms Registry</name>
        <t>本仕様では、JWE "zip" メンバ値の IANA "JSON Web Encryption Compression Algorithms" レジストリを確立する。レジストリには、圧縮アルゴリズムの値とそれを定義する仕様への参照が記録される。</t>
        <section anchor="sect-7.3.1" numbered="true" toc="default">
          <name>Registration Template</name>
          <dl newline="true" spacing="normal" indent="3">
            <dt>Compression Algorithm Value:</dt>
            <dd>
	The name requested (e.g., "DEF").  Because a core goal of this
      specification is for the resulting representations to be compact,
      it is RECOMMENDED that the name be short -- not to exceed 8
      characters without a compelling reason to do so.  This name is
      case sensitive.  Names may not match other registered names in a
      case-insensitive manner unless the Designated Experts state that
      there is a compelling reason to allow an exception.
	</dd>
            <dt>Compression Algorithm Description:</dt>
            <dd>
	Brief description of the compression algorithm (e.g., "DEFLATE").
	</dd>
            <dt>Change Controller:</dt>
            <dd>
	For Standards Track RFCs, list "IESG".  For others, give the name
      of the responsible party.  Other details (e.g., postal address,
      email address, home page URI) may also be included.
	</dd>
            <dt>Specification Document(s):</dt>
            <dd>
	Reference to the document or documents that specify the parameter,
      preferably including URIs that can be used to retrieve copies of
      the documents.  An indication of the relevant sections may also be
      included but is not required.
	</dd>
          </dl>
        </section>
        <section anchor="sect-7.3.2" numbered="true" toc="default">
          <name>Initial Registry Contents</name>
          <ul spacing="normal">
            <li>Compression Algorithm Value: "DEF"</li>
            <li>Compression Algorithm Description: DEFLATE</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): JSON Web Encryption (JWE) <xref target="JWE" format="default"/></li>
          </ul>
        </section>
      </section>
      <section anchor="sect-7.4" numbered="true" toc="default">
        <name>JSON Web Key Types Registry</name>
        <t>この仕様は、JWK の "kty" (key type) パラメータの値について、IANA の "JSON Web Key Types" レジストリを確立するものである。レジストリには、"kty "の値、実装要件、それを定義する仕様への参照が記録される。</t>
        <t>例えば、ある鍵タイプのステータスを非推奨に変更したり、ある鍵タイプのステータスを オプションから推奨+または必須に変更したりするなど、暗号技術の発展に伴い、 鍵タイプの実装要件は時間の経過とともに変更されることがある。実装要件の変更は、Designated Expertsによるレビューの後、Specification Requiredベースで のみ許可され、新しい仕様では改訂された実装要件レベルが定義される。</t>
        <section anchor="sect-7.4.1" numbered="true" toc="default">
          <name>Registration Template</name>
          <dl newline="true" spacing="normal" indent="3">
            <dt>"kty" Parameter Value:</dt>
            <dd>
	The name requested (e.g., "EC").  Because a core goal of this
      specification is for the resulting representations to be compact,
      it is RECOMMENDED that the name be short -- not to exceed 8
      characters without a compelling reason to do so.  This name is
      case sensitive.  Names may not match other registered names in a
      case-insensitive manner unless the Designated Experts state that
      there is a compelling reason to allow an exception.
	</dd>
            <dt>Key Type Description:</dt>
            <dd>
	Brief description of the Key Type (e.g., "Elliptic Curve").
	</dd>
            <dt>Change Controller:</dt>
            <dd>
	For Standards Track RFCs, list "IESG".  For others, give the name
      of the responsible party.  Other details (e.g., postal address,
      email address, home page URI) may also be included.
	</dd>
            <dt>JOSE Implementation Requirements:</dt>
            <dd>
	The key type implementation requirements for JWS and JWE, which
      must be one the words Required, Recommended, Optional, Deprecated,
      or Prohibited.  Optionally, the word can be followed by a "+" or
      "-".  The use of "+" indicates that the requirement strength is
      likely to be increased in a future version of the specification.
      The use of "-" indicates that the requirement strength is likely
      to be decreased in a future version of the specification.
	</dd>
            <dt>Specification Document(s):</dt>
            <dd>
	Reference to the document or documents that specify the parameter,
      preferably including URIs that can be used to retrieve copies of
      the documents.  An indication of the relevant sections may also be
      included but is not required.
	</dd>
          </dl>
        </section>
        <section anchor="sect-7.4.2" numbered="true" toc="default">
          <name>Initial Registry Contents</name>
          <t>ここでは、<xref target="sect-6.1" format="default"/> で定義された値を登録する。</t>
          <ul spacing="normal">
            <li>"kty" Parameter Value: "EC"</li>
            <li>Key Type Description: Elliptic Curve</li>
            <li>JOSE Implementation Requirements: Recommended+</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2 of RFC 7518</li>
            <li>"kty" Parameter Value: "RSA"</li>
            <li>Key Type Description: RSA</li>
            <li>JOSE Implementation Requirements: Required</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3 of RFC 7518</li>
            <li>"kty" Parameter Value: "oct"</li>
            <li>Key Type Description: Octet Sequence</li>
            <li>JOSE Implementation Requirements: Required</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.4 of RFC 7518</li>
          </ul>
        </section>
      </section>
      <section anchor="sect-7.5" numbered="true" toc="default">
        <name>JSON Web Key Parameters Registration</name>
        <t>本仕様書の 6.2 節、6.3 節、6.4 節で定義されたパラメータ名を、<xref target="JWK" format="default"/> で制定された IANA "JSON Web Key Parameters" レジストリに登録する。</t>
        <section anchor="sect-7.5.1" numbered="true" toc="default">
          <name>Registry Contents</name>
          <ul spacing="normal">
            <li>Parameter Name: "crv"</li>
            <li>Parameter Description: Curve</li>
            <li>Used with "kty" Value(s): "EC"</li>
            <li>Parameter Information Class: Public</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.1 of RFC 7518</li>
            <li>Parameter Name: "x"</li>
            <li>Parameter Description: X Coordinate</li>
            <li>Used with "kty" Value(s): "EC"</li>
            <li>Parameter Information Class: Public</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.2 of RFC 7518</li>
            <li>Parameter Name: "y"</li>
            <li>Parameter Description: Y Coordinate</li>
            <li>Used with "kty" Value(s): "EC"</li>
            <li>Parameter Information Class: Public</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.3 of RFC 7518</li>
            <li>Parameter Name: "d"</li>
            <li>Parameter Description: ECC Private Key</li>
            <li>Used with "kty" Value(s): "EC"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.2.1 of RFC 7518</li>
            <li>Parameter Name: "n"</li>
            <li>Parameter Description: Modulus</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Public</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.1.1 of RFC 7518</li>
            <li>Parameter Name: "e"</li>
            <li>Parameter Description: Exponent</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Public</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.1.2 of RFC 7518</li>
            <li>Parameter Name: "d"</li>
            <li>Parameter Description: Private Exponent</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.1 of RFC 7518</li>
            <li>Parameter Name: "p"</li>
            <li>Parameter Description: First Prime Factor</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.2 of RFC 7518</li>
            <li>Parameter Name: "q"</li>
            <li>Parameter Description: Second Prime Factor</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.3 of RFC 7518</li>
            <li>Parameter Name: "dp"</li>
            <li>Parameter Description: First Factor CRT Exponent</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.4 of RFC 7518</li>
            <li>Parameter Name: "dq"</li>
            <li>Parameter Description: Second Factor CRT Exponent</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.5 of RFC 7518</li>
            <li>Parameter Name: "qi"</li>
            <li>Parameter Description: First CRT Coefficient</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.6 of RFC 7518</li>
            <li>Parameter Name: "oth"</li>
            <li>Parameter Description: Other Primes Info</li>
            <li>Used with "kty" Value(s): "RSA"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.3.2.7 of RFC 7518</li>
            <li>Parameter Name: "k"</li>
            <li>Parameter Description: Key Value</li>
            <li>Used with "kty" Value(s): "oct"</li>
            <li>Parameter Information Class: Private</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.4.1 of RFC 7518</li>
          </ul>
        </section>
      </section>
      <section anchor="sect-7.6" numbered="true" toc="default">
        <name>JSON Web Key Elliptic Curve Registry</name>
        <t>このセクションでは、JWK "crv" メンバ値のための IANA "JSON Web Key Elliptic Curve" レジストリを確立する。レジストリには、曲線の名前、実装要件、それを定義する仕様への参照が記録される。本仕様では、<xref target="sect-6.2.1.1" format="default"/> で定義されたパラメータ名を登録する。</t>
        <t>例えば、ある曲線のステータスを非推奨に変更したり、ある曲線のステータスをオプションから推奨＋または必須 に変更するなど、暗号の進化に伴って実装要件を変更することがある。実装要件の変更は、Designated Expertsによるレビューの後、Specification Requiredベースでのみ許可され、新しい仕様では改訂された実装要件レベルが定義されます。</t>
        <section anchor="sect-7.6.1" numbered="true" toc="default">
          <name>Registration Template</name>
          <dl newline="true" spacing="normal" indent="3">
            <dt>Curve Name:</dt>
            <dd>
	The name requested (e.g., "P-256").  Because a core goal of this
      specification is for the resulting representations to be compact,
      it is RECOMMENDED that the name be short -- not to exceed 8
      characters without a compelling reason to do so.  This name is
      case sensitive.  Names may not match other registered names in a
      case-insensitive manner unless the Designated Experts state that
      there is a compelling reason to allow an exception.
	</dd>
            <dt>Curve Description:</dt>
            <dd>
	Brief description of the curve (e.g., "P-256 Curve").
	</dd>
            <dt>JOSE Implementation Requirements:</dt>
            <dd>
              <t> 	JWSとJWEの曲線実装要件で、Required、Recommended、Optional、Deprecated、Prohibitedのいずれかの単語でなければならない。オプションで、単語の後に "+"または"-"を付けることができる。 </t>
              <t> 	の使用は、要求強度が仕様の将来のバージョンで増加する可能性があることを示す。の使用は、要求強度が仕様の将来のバージョンで減少する可能性があることを示す。 </t>
            </dd>
            <dt>Change Controller:</dt>
            <dd>
	For Standards Track RFCs, list "IESG".  For others, give the name
      of the responsible party.  Other details (e.g., postal address,
      email address, home page URI) may also be included.
	</dd>
            <dt>Specification Document(s):</dt>
            <dd>
	Reference to the document or documents that specify the parameter,
      preferably including URIs that can be used to retrieve copies of
      the documents.  An indication of the relevant sections may also be
      included but is not required.
	</dd>
          </dl>
        </section>
        <section anchor="sect-7.6.2" numbered="true" toc="default">
          <name>Initial Registry Contents</name>
          <ul spacing="normal">
            <li>Curve Name: "P-256"</li>
            <li>Curve Description: P-256 Curve</li>
            <li>JOSE Implementation Requirements: Recommended+</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.1 of RFC 7518</li>
            <li>Curve Name: "P-384"</li>
            <li>Curve Description: P-384 Curve</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.1 of RFC 7518</li>
            <li>Curve Name: "P-521"</li>
            <li>Curve Description: P-521 Curve</li>
            <li>JOSE Implementation Requirements: Optional</li>
            <li>Change Controller: IESG</li>
            <li>Specification Document(s): Section 6.2.1.1 of RFC 7518</li>
          </ul>
        </section>
      </section>
    </section>
    <section anchor="sect-8" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>JWS/JWE/JWKエージェントは、あらゆる暗号アプリケーションに関連するすべてのセキュリティ問題に対処しなければならない。これらの問題の中には、ユーザーの非対称秘密鍵や対称秘密鍵の保護や、様々な攻撃への対策が含まれています。</t>
      <artwork name="" type="" align="left" alt="">
The security considerations in [AES], [DSS], [JWE], [JWK], [JWS],
[NIST.800-38D], [NIST.800-56A], [NIST.800-107], [RFC2104], [RFC3394],
[RFC3447], [RFC5116], [RFC6090], and [SHS] apply to this
specification.
</artwork>
      <section anchor="sect-8.1" numbered="true" toc="default">
        <name>Cryptographic Agility</name>
        <t>実装者は、暗号アルゴリズムが時間とともに弱くなることを認識しておく必要がある。新しい暗号解読技術が開発され、計算機の性能が向上すれば、特定の暗号アルゴリズムを破 るための作業要因は減少する。したがって、実装者と配備者は、サポートされ使用される一連のアルゴリズムが時間の経過とともに変化することに備えなければならない。したがって、暗号アルゴリズムの実装は、新しいアルゴリズムを容易に挿入できるようなモジュール式であるべきである。</t>
      </section>
      <section anchor="sect-8.2" numbered="true" toc="default">
        <name>Key Lifetimes</name>
        <t>多くのアルゴリズムは、鍵の寿命や鍵の使用回数に関連したセキュリティの考慮事項があります。JOSEデータ構造でこれらのアルゴリズムを使用する場合、これらのセキュリティ上の考慮事項は引き続き適用されます。鍵の有効期間に関する具体的なガイダンスについては、NIST SP 800-57 [NIST.800-57]を参照してください。</t>
      </section>
      <section anchor="sect-8.3" numbered="true" toc="default">
        <name>RSAES-PKCS1-v1_5 Security Considerations</name>
        <t>RFC 3447<xref target="RFC3447" format="default"/> のセクション8では、新しいアプリケーションに RSASSA-PKCS1-v1_5 を採用せず、代わりに RSASSA-PSS に移行することを明確に求めているが、この仕様では、相互運用性の理由から、一般的に実装されている RSASSA-PKCS1-v1_5 を含めている。</t>
        <t>RSAES-PKCS1-v1_5で使用する鍵は、RFC3447のセクション7.2の制約に従わなければならない。また、"Twenty Years of Attacks on the RSA Cryptosystem" [Boneh99]のセクション3に記載されているような公開鍵の指数値の低い鍵は使用してはならない。</t>
      </section>
      <section anchor="sect-8.4" numbered="true" toc="default">
        <name>AES GCM Security Considerations</name>
        <t>AES GCM で使用される鍵は [NIST.800-38D] のセクション 8.3 に記載されている制約に従わなければなりません。「認証された暗号化関数の呼び出しの総数は，すべての IV 長と与えられた鍵による認証された暗号化関数のすべてのインスタンスを含めて，2^32 を超えてはならない。この規定に基づき，AES GCM は同じ鍵の値を 2^32 回以上使用してはならない(MUST NOT)．</t>
        <t>IV 値は、同一の AES GCM 鍵で複数回使用してはならない（MUST NOT）。これを防ぐ一つの方法は、鍵と共にカウンタを保存し、使用するたびにそれをインクリメントすることである。このカウンタは、上記の2^32の制限を超えないようにするために使用することもできる。</t>
        <t>このセキュリティ上の配慮は、複合AES-CBC HMAC SHA-2またはAES Key Wrapアルゴリズムには適用されない。</t>
      </section>
      <section anchor="sect-8.5" numbered="true" toc="default">
        <name>Unsecured JWS Security Considerations</name>
        <t>非保障型JWS（"alg "値 "none "を使用するJWS）は、完全性保護を提供しない。したがって、ペイロードが電子署名やMAC値以外の手段で保護されているコンテキストでのみ使用されなければならないし、保護される必要もない。</t>
        <t>無保護JWSをデフォルトで受け入れないようにする方法の例として、仮想的なJWSソフトウェアライブラリの「verify」メソッドに、「none」が許容可能な「alg」値であることを示すブール値の「acceptUnsecured」パラメータを持たせることが挙げられる。別の例として、"verify "メソッドは、アプリケーションに受け入れられるアルゴリズムのリストをパラメータとして取り、"none "がそのリストにない場合、Unsecured JWSの値を拒否することができる。</t>
        <t>次の例は、グローバルレベルでUnsecured JWSを受け入れない理由を説明するものである。あるアプリケーションが、(1) HTTP と (2) HTTPS の 2 つのチャネルでクライアント認証を伴う JWS を受け入れるとする。HTTPで受信したオブジェクトにはJWS署名を要求するが、HTTPSではUnsecured JWSを受け入れるとする。もしアプリケーションがグローバルに "none "を受け入れることを示すなら、攻撃者はHTTP上でUnsecured JWSを提供し、そのオブジェクトが正常に検証される可能性がある。その代わり、アプリケーションは HTTPS で受け取った各オブジェクトに対して "none" を受け入れることを示す必要があり（例えば、上記の最初の仮説の JWS ソフトウェアライブラリに対して "acceptUnsecured" を "true" に設定する）、HTTP で受け取った各オブジェクトに対しては認めない。</t>
      </section>
      <section anchor="sect-8.6" numbered="true" toc="default">
        <name>Denial-of-Service Attacks</name>
        <t>署名を検証する受信側エージェントとメッセージを暗号化する送信側エージェントは、 本仕様で義務付けられている鍵よりも大きな鍵を使用して署名を検証したりメッセージを 暗号化する場合、暗号処理の使用量に注意する必要がある。攻撃者は、過剰な暗号処理となる鍵、例えば本仕様で義務付けられている鍵よりも大きな鍵を使用してコンテンツを提供する可能性がある。実装は、受け入れる鍵のサイズに上限を設定し、実施すべきである。NIST SP 800-57 [NIST.800-57]のセクション 5.6.1 (Comparable Algorithm Strengths) には、適用可能な最大認可鍵サイズに関する記述がある。</t>
      </section>
      <section anchor="sect-8.7" numbered="true" toc="default">
        <name>Reusing Key Material when Encrypting Keys</name>
        <t>複数の JWK または JWK セットの暗号化、あるいは同一の JWK または JWK セットの複数回 の暗号化に、同一の鍵素材一式（鍵暗号化鍵、コンテンツ暗号化鍵、初期化ベクタなど）を再利用することは 推奨されない。再利用を防ぐための1つの提案は、本文書およびRFC 4086 (<xref target="RFC4086" format="default"/>) に記載されている考慮事項に基づき、暗号化操作ごとに少なくとも1つの新しい鍵材料（例えば、新しいコンテンツ暗号鍵、新しいIV、新しいPBES2ソルト）を常に生成することである。</t>
      </section>
      <section anchor="sect-8.8" numbered="true" toc="default">
        <name>Password Considerations</name>
        <t>パスワードは、多くの攻撃に対して脆弱である。これらの制限のいくつかを緩和するために、この文書は RFC 2898<xref target="RFC2898" format="default"/> の原則を適用して、ユーザーが提供したパスワードから暗号鍵を導出する。</t>
        <t>しかし、パスワードの強度は依然として大きな影響を及ぼしている。高エントロピーのパスワードは、辞書攻撃に対してより大きな抵抗力を持ちます。[NIST.800-63-2]には、パスワードのエントロピーを推定するためのガイドラインが含まれており、アプリケーションとユーザーがより強力なパスワードを生成するのに役立ちます。</t>
        <t>理想的なパスワードは、導出された鍵の長さと同じかそれ以上の大きさのものである。しかし、あるアルゴリズム固有のサイズより大きいパスワードは、まずハッシュ化されるため、攻撃者の有効な探索空間は、ハッシュアルゴリズムの長さに減少する。PBES2-HS256+A128KW」のパスワードは16オクテット以上128オクテット以下、「PBES2-HS512+A256KW」のパスワードは32オクテット以上128オクテット以下が推奨される。</t>
        <t>それでも、パスワードベースの暗号化を使用する場所と方法には注意が必要です。このアルゴリズムは、反復回数が少なすぎる場合、辞書ベースの攻撃を受ける可能性があります。これは、ファイルシステム上に保存された保護されたデータのように、攻撃者が保護を回避するために不定回数を持つことができるデータを保護するためにこれらのアルゴリズムが使用されている場合に特に懸念されることです。</t>
      </section>
      <section anchor="sect-8.9" numbered="true" toc="default">
        <name>Key Entropy and Random Values</name>
        <t>鍵のエントロピーと乱数値に関するセキュリティ上の考慮点については、<xref target="JWS" format="default"/> のセクション 10.1 を参照のこと。</t>
      </section>
      <section anchor="sect-8.10" numbered="true" toc="default">
        <name>Differences between Digital Signatures and MACs</name>
        <t>デジタル署名とMACの違いに関するセキュリティ上の考慮点については、<xref target="JWS" format="default"/> のセクション10.5を参照してください。</t>
      </section>
      <section anchor="sect-8.11" numbered="true" toc="default">
        <name>Using Matching Algorithm Strengths</name>
        <t>マッチングアルゴリズム強度の使用に関するセキュリティの考慮事項については、<xref target="JWE" format="default"/> のセクション 11.3 を参照してください。</t>
      </section>
      <section anchor="sect-8.12" numbered="true" toc="default">
        <name>Adaptive Chosen-Ciphertext Attacks</name>
        <t>適応型選択暗号文攻撃に関するセキュリティの考察については、<xref target="JWE" format="default"/> のセクション 11.4 を参照してください。</t>
      </section>
      <section anchor="sect-8.13" numbered="true" toc="default">
        <name>Timing Attacks</name>
        <t>タイミング攻撃に関するセキュリティの考慮事項については、<xref target="JWS" format="default"/> のセクション 10.9 および<xref target="JWE" format="default"/> のセクション 11.5 を参照してください。</t>
      </section>
      <section anchor="sect-8.14" numbered="true" toc="default">
        <name>RSA Private Key Representations and Blinding</name>
        <t>RSA秘密鍵の表現とブラインドに関するセキュリティの考察については、<xref target="JWK" format="default"/> の9.3節を参照のこと。</t>
      </section>
    </section>
    <section anchor="sect-9" numbered="true" toc="default">
      <name>Internationalization Considerations</name>
      <t>ユーザーから取得したパスワードは、異なる入力デバイスやロケールなどによって生成されるオクテットシーケンスの違いを考慮し、準備と正規化が必要になる可能性があります。鍵の導出と暗号化を行う前に、アプリケーションが<xref target="I-D.ietf-precis-saslprepbis" format="default"/> で説明されている手順を実行して、ユーザーから直接提供されたパスワードを準備することが推奨される（RECOMMENDED）。</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference anchor="JWE" target="http://www.rfc-editor.org/info/rfc7516">
          <front>
            <title>JSON Web Encryption (JWE)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
	</author>
            <author initials="J." surname="Hildebrand" fullname="J. Hildebrand">
	</author>
            <date month="May" year="2015"/>
          </front>
          <seriesInfo name="RFC" value="7516"/>
          <seriesInfo name="DOI" value="10.17487/RFC7516"/>
        </reference>
        <reference anchor="JWK" target="http://www.rfc-editor.org/info/rfc7517">
          <front>
            <title>JSON Web Key (JWK)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
	</author>
            <date month="May" year="2015"/>
          </front>
          <seriesInfo name="RFC" value="7517"/>
          <seriesInfo name="DOI" value="10.17487/RFC7517"/>
        </reference>
        <reference anchor="JWS" target="http://www.rfc-editor.org/info/rfc7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author initials="M." surname="Jones" fullname="M. Jones">
	</author>
            <author initials="J." surname="Bradley" fullname="J. Bradley">
	</author>
            <author initials="N." surname="Sakimura" fullname="N. Sakimura">
	</author>
            <date month="May" year="2015"/>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference anchor="RFC0020" target="https://www.rfc-editor.org/info/rfc20" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.0020.xml">
          <front>
            <title>ASCII format for network interchange</title>
            <author fullname="V.G. Cerf" initials="V.G." surname="Cerf"/>
            <date month="October" year="1969"/>
          </front>
          <seriesInfo name="STD" value="80"/>
          <seriesInfo name="RFC" value="20"/>
          <seriesInfo name="DOI" value="10.17487/RFC0020"/>
        </reference>
        <reference anchor="RFC2104" target="https://www.rfc-editor.org/info/rfc2104" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2104.xml">
          <front>
            <title>HMAC: Keyed-Hashing for Message Authentication</title>
            <author fullname="H. Krawczyk" initials="H." surname="Krawczyk"/>
            <author fullname="M. Bellare" initials="M." surname="Bellare"/>
            <author fullname="R. Canetti" initials="R." surname="Canetti"/>
            <date month="February" year="1997"/>
            <abstract>
              <t>本書は、暗号ハッシュ関数を用いたメッセージ認証のためのメカニズムであるHMACについて説明する。HMACは、MD5やSHA-1などの任意の繰り返し暗号ハッシュ関数と、秘密の共有鍵の組み合わせで使用することができる。HMACの暗号強度は、基礎となるハッシュ関数の性質に依存する。このメモでは、インターネットコミュニティのための情報を提供する。このメモは、いかなる種類のインターネット標準を指定するものではありません。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2104"/>
          <seriesInfo name="DOI" value="10.17487/RFC2104"/>
        </reference>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>多くの標準追跡文書では、仕様の要件を示すためにいくつかの単語が使用されています。これらの単語はしばしば大文字で表記される。この文書では、IETFの文書で解釈されるべきこれらの単語を定義する。この文書は、インターネットコミュニティのためのインターネットベストカレントプラクティスを規定し、改善のための議論と提案を要請するものである。</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC2898" target="https://www.rfc-editor.org/info/rfc2898" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2898.xml">
          <front>
            <title>PKCS #5: Password-Based Cryptography Specification Version 2.0</title>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="September" year="2000"/>
            <abstract>
              <t>この文書は、鍵導出関数、暗号化スキーム、メッセージ認証スキーム、および技術を識別する ASN.1 構文について、パスワードベースの暗号を実装するための推奨事項を提供するものである。このメモは、インターネットコミュニティのための情報を提供する。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2898"/>
          <seriesInfo name="DOI" value="10.17487/RFC2898"/>
        </reference>
        <reference anchor="RFC3394" target="https://www.rfc-editor.org/info/rfc3394" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3394.xml">
          <front>
            <title>Advanced Encryption Standard (AES) Key Wrap Algorithm</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2002"/>
          </front>
          <seriesInfo name="RFC" value="3394"/>
          <seriesInfo name="DOI" value="10.17487/RFC3394"/>
        </reference>
        <reference anchor="RFC3447" target="https://www.rfc-editor.org/info/rfc3447" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3447.xml">
          <front>
            <title>Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1</title>
            <author fullname="J. Jonsson" initials="J." surname="Jonsson"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="February" year="2003"/>
            <abstract>
              <t>このメモは、RSA 研究所の公開鍵暗号標準（PKCS）シリーズの PKCS #1 v2.1 の再出版であり、PKCS プロセス内での変更管理が保持されている。この文書の本文は、PKCS #1 v2.1文書から直接引用され、出版過程で一定の修正が加えられている。このメモは、インターネットコミュニティのための情報を提供するものです。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3447"/>
          <seriesInfo name="DOI" value="10.17487/RFC3447"/>
        </reference>
        <reference anchor="RFC3629" target="https://www.rfc-editor.org/info/rfc3629" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 は、Universal Character Set (UCS) と呼ばれる大規模な文字セットを定義しており、世界のほとんどの文字システムを包含しています。しかし、当初提案されたUCSのエンコーディングは、現在の多くのアプリケーションやプロトコルと互換性がなかったため、このメモの対象であるUTF-8が開発されるに至った。UTF-8 は、US-ASCII の全範囲を保持するという特徴を持ち、US-ASCII の値に依存し、他の値に対しては透過的なファイルシステム、パーサー、その他のソフトウェアに互換性を提供します。このメモは RFC 2279 を廃止し、置き換えるものです。</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC4868" target="https://www.rfc-editor.org/info/rfc4868" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4868.xml">
          <front>
            <title>Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec</title>
            <author fullname="S. Kelly" initials="S." surname="Kelly"/>
            <author fullname="S. Frankel" initials="S." surname="Frankel"/>
            <date month="May" year="2007"/>
            <abstract>
              <t>この仕様は、IPsec における SHA-256、SHA-384、および SHA-512 アルゴリズムと組み合わせた Hashed Message Authentication Mode (HMAC) の使用について記述している。これらのアルゴリズムは、認証ヘッダー(AH)、カプセル化セキュリティペイロード(ESP)、インターネット鍵交換プロトコル(IKE)、およびIKEv2プロトコル用のデータ起源の認証および完全性検証機構の基礎として、またIKEおよびIKEv2用の疑似ランダム関数 (PRF) として使用されるかもしれない。切り捨てられた出力長は、認証関連の亜種に指定され、対応するアルゴリズムは HMAC-SHA-256-128、HMAC-SHA-384-192、および HMAC-SHA-512-256 として指定されている。PRFの亜種は切り捨てられず、PRF-HMAC-SHA-256、PRF-HMAC-SHA-384、PRF-HMAC-SHA-512と呼ばれます。[標準化トラック] (standards-track)</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4868"/>
          <seriesInfo name="DOI" value="10.17487/RFC4868"/>
        </reference>
        <reference anchor="RFC4949" target="https://www.rfc-editor.org/info/rfc4949" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4949.xml">
          <front>
            <title>Internet Security Glossary, Version 2</title>
            <author fullname="R. Shirey" initials="R." surname="Shirey"/>
            <date month="August" year="2007"/>
            <abstract>
              <t>この用語集は、情報システムセキュリティに関する用語の定義、略語、および説明を提供するものです。334ページに及ぶ項目には、インターネット標準化プロセス（RFC 2026）で作成される文書の理解度を向上させるための推奨事項が記載されています。この勧告は、(a)同じ概念が言及されるときは常に同じ用語または定義を使用する、(b)用語は最も平易な辞書的意味で使用する、(c)公開出版物ですでに定着している用語を使用する、(d)特定のベンダーを支持する用語または特定の技術や機構が、すでに存在するか開発可能な他の競合技術に優先する用語を回避すべきであるという原則に従っています。このメモは、インターネットコミュニティのための情報を提供するものです。</t>
            </abstract>
          </front>
          <seriesInfo name="FYI" value="36"/>
          <seriesInfo name="RFC" value="4949"/>
          <seriesInfo name="DOI" value="10.17487/RFC4949"/>
        </reference>
        <reference anchor="RFC5652" target="https://www.rfc-editor.org/info/rfc5652" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t>本書は，Cryptographic Message Syntax (CMS)について記述している。この構文は、任意のメッセージコンテンツに電子署名、ダイジェスト、認証、暗号化するために使用されます。[standards-track]（スタンダードトラック</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC6090" target="https://www.rfc-editor.org/info/rfc6090" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6090.xml">
          <front>
            <title>Fundamental Elliptic Curve Cryptography Algorithms</title>
            <author fullname="D. McGrew" initials="D." surname="McGrew"/>
            <author fullname="K. Igoe" initials="K." surname="Igoe"/>
            <author fullname="M. Salter" initials="M." surname="Salter"/>
            <date month="February" year="2011"/>
            <abstract>
              <t>このノートでは、楕円曲線暗号(ECC)の基本的なアルゴリズムについて、1994年以前のいくつかの代表的な文献で定義されているものを説明します。これらの記述は、それ以降に開発された特殊な手法を用いずに基本的なアルゴリズムを実装する際に有用であろう。3以上の特性を持つフィールド上で定義された楕円曲線のみが対象であり、これらの曲線はスイートBで使用されるものである。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6090"/>
          <seriesInfo name="DOI" value="10.17487/RFC6090"/>
        </reference>
        <reference anchor="RFC7159" target="https://www.rfc-editor.org/info/rfc7159" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="March" year="2014"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) は、軽量でテキストベースの、言語に依存しないデータ交換フォーマットです。これは ECMAScript Programming Language Standard から派生したものです。JSONは、構造化されたデータを移植可能に表現するための小さなフォーマット規則のセットを定義しています。</t>
              <t>この文書は、JSONの他の仕様との不整合を取り除き、仕様の誤りを修復し、経験に基づく相互運用性のガイダンスを提供するものである。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7159"/>
          <seriesInfo name="DOI" value="10.17487/RFC7159"/>
        </reference>
        <reference anchor="SEC1" target="http://www.secg.org/sec1-v2.pdf">
          <front>
            <title>SEC 1: Elliptic Curve Cryptography</title>
            <author>
              <organization>Standards for Efficient Cryptography Group</organization>
            </author>
            <date month="May" year="2009"/>
          </front>
          <seriesInfo name="Version" value="2.0"/>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference anchor="UNICODE" target="http://www.unicode.org/versions/latest/">
          <front>
            <title>The Unicode Standard</title>
            <author>
              <organization>The Unicode Consortium</organization>
            </author>
            <date/>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="I-D.mcgrew-aead-aes-cbc-hmac-sha2" target="https://www.ietf.org/archive/id/draft-mcgrew-aead-aes-cbc-hmac-sha2-05.txt" xml:base="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mcgrew-aead-aes-cbc-hmac-sha2.xml">
          <front>
            <title>Authenticated Encryption with AES-CBC and HMAC-SHA</title>
            <author fullname="David McGrew" initials="D." surname="McGrew">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="John Foley" initials="J." surname="Foley">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Kenny Paterson" initials="K." surname="Paterson">
              <organization>Royal Holloway</organization>
            </author>
            <date day="4" month="July" year="2014"/>
            <abstract>
              <t>本書は，暗号化方式としてCBC（Cipher Block Chaining）方式のAES（Advanced Encryption Standard），メッセージ認証コード（MAC）としてHMAC-SHAを用いたAEAD（Assisted Encryption with associated Data）アルゴリズムを規定したものである．これらはランダム化された暗号化アルゴリズムであるため、AEADの暗号化操作の各呼び出しに個別のnonceを提供できないアプリケーションでの使用に適している。</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-mcgrew-aead-aes-cbc-hmac-sha2-05"/>
        </reference>
        <reference anchor="CanvasApp" target="http://developers.facebook.com/docs/authentication/canvas">
          <front>
            <title>Canvas Applications</title>
            <author>
              <organization>Facebook</organization>
            </author>
            <date year="2010"/>
          </front>
        </reference>
        <reference anchor="JCA" target="http://docs.oracle">
          <front>
            <title>Java Cryptography Architecture (JCA) Reference Guide</title>
            <author>
              <organization>Oracle</organization>
            </author>
            <date year="2014"/>
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference anchor="I-D.rescorla-jsms" target="https://www.ietf.org/archive/id/draft-rescorla-jsms-00.txt" xml:base="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.rescorla-jsms.xml">
          <front>
            <title>JavaScript Message Security Format</title>
            <author fullname="Eric Rescorla" initials="E." surname="Rescorla">
              <organization>RTFM, Inc.</organization>
            </author>
            <author fullname="Joe Hildebrand" initials="J." surname="Hildebrand">
              <organization>Cisco Systems</organization>
            </author>
            <date day="7" month="March" year="2011"/>
            <abstract>
              <t>多くのアプリケーションは、暗号化された安全なメッセージを送信する機能を必要とします。IETFはこのようなメッセージのフォーマットをいくつか定義しているが（CMSなど）、これらのフォーマットはWebアプリケーションになじまないエンコーディングを使用している。この文書では、JavaScript Object Notation (JSON) をベースとし、Web アプリケーションが容易に生成・解析できる新しい暗号メッセージ形式を説明します。</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-rescorla-jsms-00"/>
        </reference>
        <reference anchor="JSS" target="http://jsonenc.info/jss/1.0/">
          <front>
            <title>JSON Simple Sign 1.0</title>
            <author initials="J." surname="Bradley" fullname="J. Bradley">
	</author>
            <author initials="N." surname="Sakimura" fullname="N. Sakimura" role="editor">
	</author>
            <date month="September" year="2010"/>
          </front>
          <seriesInfo name="Draft" value="01"/>
        </reference>
        <reference anchor="I-D.miller-jose-jwe-protected-jwk" target="https://www.ietf.org/archive/id/draft-miller-jose-jwe-protected-jwk-02.txt" xml:base="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.miller-jose-jwe-protected-jwk.xml">
          <front>
            <title>Using JavaScript Object Notation (JSON) Web Encryption (JWE) for Protecting JSON Web Key (JWK) Objects</title>
            <author fullname="Matthew A. Miller" initials="M. A." surname="Miller">
              <organization>Cisco Systems</organization>
            </author>
            <date day="13" month="June" year="2013"/>
            <abstract>
              <t>本書は、JSON Web Encryption (JWE) を用いて、JavaScript Syntax Object Notation (JSON) Web Key (JWK) オブジェクトとしてフォーマットされた秘密鍵を保護する方法を規定するものである。また、このようなコンテンツをパスワードベースの暗号を用いて保護するためのアルゴリズム群についても規定する。</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-miller-jose-jwe-protected-jwk-02"/>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference>
          <front>
            
          </front>
        </reference>
        <reference anchor="I-D.ietf-precis-saslprepbis" target="https://www.ietf.org/archive/id/draft-ietf-precis-saslprepbis-18.txt" xml:base="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-precis-saslprepbis.xml">
          <front>
            <title>Preparation, Enforcement, and Comparison of Internationalized Strings Representing Usernames and Passwords</title>
            <author fullname="Peter Saint-Andre" initials="P." surname="Saint-Andre"/>
            <author fullname="Alexey Melnikov" initials="A." surname="Melnikov">
              <organization>Isode Ltd</organization>
            </author>
            <date day="28" month="May" year="2015"/>
            <abstract>
              <t>このドキュメントは、ユーザー名とパスワードを表すUnicode文字列を処理するための更新された方法を説明する。以前のアプローチはSASLprep (RFC 4013)として知られ、stringprep (RFC 3454)をベースにしていた。この文書で指定されている方法は、国際化されたユーザー名とパスワードの処理に、より持続可能なアプローチを提供する。RFC 7564のPRECIS (preparation, enforcement, and comparison of internationalized strings)フレームワークはRFC 3454を廃止し、この文書はRFC 4013を廃止したものである。</t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-precis-saslprepbis-18"/>
        </reference>
        <reference anchor="RFC2631" target="https://www.rfc-editor.org/info/rfc2631" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2631.xml">
          <front>
            <title>Diffie-Hellman Key Agreement Method</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="June" year="1999"/>
            <abstract>
              <t>この文書は、ANSI X9F1作業部会が作成したANSI X9.42ドラフトをベースに、ある特定のDiffie-Hellman変種を標準化するものである。[standards-track]である。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2631"/>
          <seriesInfo name="DOI" value="10.17487/RFC2631"/>
        </reference>
        <reference anchor="RFC3275" target="https://www.rfc-editor.org/info/rfc3275" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3275.xml">
          <front>
            <title>(Extensible Markup Language) XML-Signature Syntax and Processing</title>
            <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
            <author fullname="J. Reagle" initials="J." surname="Reagle"/>
            <author fullname="D. Solo" initials="D." surname="Solo"/>
            <date month="March" year="2002"/>
            <abstract>
              <t>本書は、XML（Extensible Markup Language）電子署名の処理規則と構文について規定するものである。[standards-track]（スタンダードトラック</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3275"/>
          <seriesInfo name="DOI" value="10.17487/RFC3275"/>
        </reference>
        <reference anchor="RFC4086" target="https://www.rfc-editor.org/info/rfc4086" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4086.xml">
          <front>
            <title>Randomness Requirements for Security</title>
            <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
            <author fullname="J. Schiller" initials="J." surname="Schiller"/>
            <author fullname="S. Crocker" initials="S." surname="Crocker"/>
            <date month="June" year="2005"/>
            <abstract>
              <t>セキュリティシステムは、パターン解析の試みをくじく強力な暗号アルゴリズムで構築されている。しかし、これらのシステムの安全性は、パスワードや暗号鍵などの秘密量を生成することに依存している。秘密量を生成するために擬似乱数処理を使用すると、擬似的なセキュリティになることがあります。巧妙な攻撃者は、潜在的な数空間全体から数量を探し出すよりも、秘密の数量を生成した環境を再現し、結果として得られるわずかな可能性の集合を探索する方が簡単であると考えるかもしれないのだ。</t>
              <t>機知に富み動機づけられた敵に対抗するためにランダムな量を選択することは驚くほど困難です。この文書では、そのような量を生成するために貧弱なエントロピー源や従来の擬似乱数生成技術を使用することの多くの落とし穴を指摘しています。真にランダムなハードウェア技術の使用を推奨し、多くのシステム上の既存のハードウェアがこの目的のために使用できることを示します。また、ハードウェアによる解決策がない場合に問題を改善するための提案を行い、いくつかのアプリケーションでそのような量がどの程度必要であるかの例を示している。この文書は、インターネットコミュニティのためのインターネットベストカレントプラクティスを指定し、改善のための議論と提案を要求します。</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="106"/>
          <seriesInfo name="RFC" value="4086"/>
          <seriesInfo name="DOI" value="10.17487/RFC4086"/>
        </reference>
        <reference anchor="RFC5116" target="https://www.rfc-editor.org/info/rfc5116" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5116.xml">
          <front>
            <title>An Interface and Algorithms for Authenticated Encryption</title>
            <author fullname="D. McGrew" initials="D." surname="McGrew"/>
            <date month="January" year="2008"/>
            <abstract>
              <t>本書は、Authenticated Encryption with Associated Data (AEAD)のアルゴリズムを定義し、そのための統一的なインタフェースとレジストリを定義するものである。このインターフェイスとレジストリは、アプリケーションに依存しない一連の cryptoalgorithm スイートとして使用することができる。このアプローチは、効率とセキュリティの面で利点があり、暗号実装の再利用を促進する。[標準化トラック] (standards-track)</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5116"/>
          <seriesInfo name="DOI" value="10.17487/RFC5116"/>
        </reference>
        <reference anchor="RFC5226" target="https://www.rfc-editor.org/info/rfc5226" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5226.xml">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <author fullname="T. Narten" initials="T." surname="Narten"/>
            <author fullname="H. Alvestrand" initials="H." surname="Alvestrand"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>多くのプロトコルは定数や他のよく知られた値からなる識別子を使用します。プロトコルが定義され、実装が開始された後でも、新しい値を割り当てる必要があるかもしれません（例えば、DHCPの新しいオプションタイプや、IPsecの新しい暗号化または認証変換のための値など）。DHCPの新しいオプションタイプやIPsecの新しい暗号化または認証変換など） このような数量が全ての実装で一貫した値と解釈を持つようにするために、その割り当ては中央機関 によって管理されなければなりません。IETFのプロトコルでは、その役割はInternet Assigned Numbers Authority (IANA)によって提供されます。</t>
              <t>IANAが与えられた名前空間を慎重に管理するためには、新しい値を割り当てることができる条件、または既存の値に修正を加えることができる条件を記述したガイドラインが必要である。IANAが名前空間の管理において役割を果たすことが期待される場合、IANAにはその役割を 明確かつ簡潔に説明する指示が与えられなければならない。この文書では，名前空間に値を割り当てるためのポリシーを策定する際に考慮すべき問題を論じ， IANAに要求を出す文書に含まれなければならない特定のテキストに関する作成者のためのガイドラインを提供する。</t>
              <t>この文書は、RFC 2434 を廃止するものである。この文書は、インターネットコミュニティのためのインターネットベストカレントプラクティスを規定し、改善のための議論と提案を要請するものである。</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5226"/>
          <seriesInfo name="DOI" value="10.17487/RFC5226"/>
        </reference>
        <reference anchor="W3C.NOTE-xmldsig-core2-20130411" target="http://www.w3.org/TR/2013/NOTE-xmldsig-core2-20130411/" xml:base="https://bib.ietf.org/public/rfc/bibxml4/reference.W3C.NOTE-xmldsig-core2-20130411.xml">
          <front>
            <title>XML Signature Syntax and Processing Version 2.0</title>
            <author fullname="David Solo" role="editor"/>
            <author fullname="Donald Eastlake" role="editor"/>
            <author fullname="Frederick Hirsch" role="editor"/>
            <author fullname="Joseph Reagle" role="editor"/>
            <author fullname="Kelvin Yiu" role="editor"/>
            <author fullname="Pratik Datta" role="editor"/>
            <author fullname="Scott Cantor" role="editor"/>
            <author fullname="Thomas Roessler" role="editor"/>
            <date day="11" month="April" year="2013"/>
          </front>
          <seriesInfo name="W3C NOTE" value="NOTE-xmldsig-core2-20130411"/>
          <seriesInfo name="W3C" value="NOTE-xmldsig-core2-20130411"/>
        </reference>
        <reference anchor="W3C.REC-xmlenc-core-20021210" target="https://www.w3.org/TR/2002/REC-xmlenc-core-20021210/" xml:base="https://bib.ietf.org/public/rfc/bibxml4/reference.W3C.REC-xmlenc-core-20021210.xml">
          <front>
            <title>XML Encryption Syntax and Processing</title>
            <author fullname="Donald Eastlake" role="editor"/>
            <author fullname="Joseph Reagle" role="editor"/>
            <date day="10" month="December" year="2002"/>
          </front>
          <seriesInfo name="W3C REC" value="REC-xmlenc-core-20021210"/>
          <seriesInfo name="W3C" value="REC-xmlenc-core-20021210"/>
        </reference>
        <reference anchor="W3C.REC-xmlenc-core1-20130411" target="https://www.w3.org/TR/2013/REC-xmlenc-core1-20130411/" xml:base="https://bib.ietf.org/public/rfc/bibxml4/reference.W3C.REC-xmlenc-core1-20130411.xml">
          <front>
            <title>XML Encryption Syntax and Processing Version 1.1</title>
            <author fullname="Donald Eastlake" role="editor"/>
            <author fullname="Frederick Hirsch" role="editor"/>
            <author fullname="Joseph Reagle" role="editor"/>
            <author fullname="Thomas Roessler" role="editor"/>
            <date day="11" month="April" year="2013"/>
          </front>
          <seriesInfo name="W3C REC" value="REC-xmlenc-core1-20130411"/>
          <seriesInfo name="W3C" value="REC-xmlenc-core1-20130411"/>
        </reference>
      </references>
    </references>
    <section anchor="sect-a" numbered="true" toc="default">
      <name>Algorithm Identifier Cross-Reference</name>
      <artwork name="" type="" align="left" alt="">
This appendix contains tables cross-referencing the cryptographic
algorithm identifier values defined in this specification with the
equivalent identifiers used by other standards and software packages.
See XML DSIG [RFC3275], XML DSIG 2.0
[W3C.NOTE-xmldsig-core2-20130411], XML Encryption
[W3C.REC-xmlenc-core-20021210], XML Encryption 1.1
[W3C.REC-xmlenc-core1-20130411], and Java Cryptography Architecture
[JCA] for more information about the names defined by those
documents.
</artwork>
      <section anchor="sect-a.1" numbered="true" toc="default">
        <name>Digital Signature/MAC Algorithm Identifier Cross-Reference</name>
        <t>このセクションでは、本仕様で定義されたJWS電子署名とMACの "alg"（アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用されている同等の識別子をクロスリファレンスするテーブルを含んでいます。</t>
        <artwork name="" type="" align="left" alt="">
+-------------------------------------------------------------------+
| JWS      | XML DSIG                                               |
| | JCA                                   | OID                     |
+-------------------------------------------------------------------+
| HS256    | http://www.w3.org/2001/04/xmldsig-more#hmac-sha256     |
| | HmacSHA256                            | 1.2.840.113549.2.9      |
+-------------------------------------------------------------------+
| HS384    | http://www.w3.org/2001/04/xmldsig-more#hmac-sha384     |
| | HmacSHA384                            | 1.2.840.113549.2.10     |
+-------------------------------------------------------------------+
| HS512    | http://www.w3.org/2001/04/xmldsig-more#hmac-sha512     |
| | HmacSHA512                            | 1.2.840.113549.2.11     |
+-------------------------------------------------------------------+
| RS256    | http://www.w3.org/2001/04/xmldsig-more#rsa-sha256      |
| | SHA256withRSA                         | 1.2.840.113549.1.1.11   |
+-------------------------------------------------------------------+
| RS384    | http://www.w3.org/2001/04/xmldsig-more#rsa-sha384      |
| | SHA384withRSA                         | 1.2.840.113549.1.1.12   |
+-------------------------------------------------------------------+
| RS512    | http://www.w3.org/2001/04/xmldsig-more#rsa-sha512      |
| | SHA512withRSA                         | 1.2.840.113549.1.1.13   |
+-------------------------------------------------------------------+
| ES256    | http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256    |
| | SHA256withECDSA                       | 1.2.840.10045.4.3.2     |
+-------------------------------------------------------------------+
| ES384    | http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384    |
| | SHA384withECDSA                       | 1.2.840.10045.4.3.3     |
+-------------------------------------------------------------------+
| ES512    | http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512    |
| | SHA512withECDSA                       | 1.2.840.10045.4.3.4     |
+-------------------------------------------------------------------+
| PS256    | http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1 |
| | SHA256withRSAandMGF1                  | 1.2.840.113549.1.1.10   |
+-------------------------------------------------------------------+
| PS384    | http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1 |
| | SHA384withRSAandMGF1                  | 1.2.840.113549.1.1.10   |
+-------------------------------------------------------------------+
| PS512    | http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1 |
| | SHA512withRSAandMGF1                  | 1.2.840.113549.1.1.10   |
+-------------------------------------------------------------------+
</artwork>
      </section>
      <section anchor="sect-a.2" numbered="true" toc="default">
        <name>Key Management Algorithm Identifier Cross-Reference</name>
        <t>本仕様で定義されたJWEの "alg"（アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用されている同等の識別子を相互参照するための表が記載されている。</t>
        <artwork name="" type="" align="left" alt="">
+-------------------------------------------------------------------+
| JWE           | XML ENC                                           |
| | JCA                                   | OID                     |
+-------------------------------------------------------------------+
| RSA1_5        | http://www.w3.org/2001/04/xmlenc#rsa-1_5          |
| | RSA/ECB/PKCS1Padding                  | 1.2.840.113549.1.1.1    |
+-------------------------------------------------------------------+
| RSA-OAEP      | http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p   |
| | RSA/ECB/OAEPWithSHA-1AndMGF1Padding   | 1.2.840.113549.1.1.7    |
+-------------------------------------------------------------------+
| RSA-OAEP-256  | http://www.w3.org/2009/xmlenc11#rsa-oaep          |
|               | &amp; http://www.w3.org/2009/xmlenc11#mgf1sha256      |
| | RSA/ECB/OAEPWithSHA-256AndMGF1Padding |                         |
| | &amp; MGF1ParameterSpec.SHA256            | 1.2.840.113549.1.1.7    |
+-------------------------------------------------------------------+
| ECDH-ES       | http://www.w3.org/2009/xmlenc11#ECDH-ES           |
| | ECDH                                  | 1.3.132.1.12            |
+-------------------------------------------------------------------+
| A128KW        | http://www.w3.org/2001/04/xmlenc#kw-aes128        |
| | AESWrap                               | 2.16.840.1.101.3.4.1.5  |
+-------------------------------------------------------------------+
| A192KW        | http://www.w3.org/2001/04/xmlenc#kw-aes192        |
| | AESWrap                               | 2.16.840.1.101.3.4.1.25 |
+-------------------------------------------------------------------+
| A256KW        | http://www.w3.org/2001/04/xmlenc#kw-aes256        |
| | AESWrap                               | 2.16.840.1.101.3.4.1.45 |
+-------------------------------------------------------------------+
</artwork>
      </section>
      <section anchor="sect-a.3" numbered="true" toc="default">
        <name>Content Encryption Algorithm Identifier Cross-Reference</name>
        <t>本仕様で定義されたJWEの "enc"（暗号化アルゴリズム）の値と、他の規格やソフトウェアパッケージで使用されている同等の識別子をクロスリファレンスで示した表がある。</t>
        <t>複合アルゴリズム「A128CBC-HS256」「A192CBC-HS384」「A256CBC-HS512」については、対応するAES-CBCアルゴリズムの識別子が記載されています。</t>
        <artwork name="" type="" align="left" alt="">
+-------------------------------------------------------------------+
| JWE           | XML ENC                                           |
| | JCA                                   | OID                     |
+-------------------------------------------------------------------+
| A128CBC-HS256 | http://www.w3.org/2001/04/xmlenc#aes128-cbc       |
| | AES/CBC/PKCS5Padding                  | 2.16.840.1.101.3.4.1.2  |
+-------------------------------------------------------------------+
| A192CBC-HS384 | http://www.w3.org/2001/04/xmlenc#aes192-cbc       |
| | AES/CBC/PKCS5Padding                  | 2.16.840.1.101.3.4.1.22 |
+-------------------------------------------------------------------+
| A256CBC-HS512 | http://www.w3.org/2001/04/xmlenc#aes256-cbc       |
| | AES/CBC/PKCS5Padding                  | 2.16.840.1.101.3.4.1.42 |
+-------------------------------------------------------------------+
| A128GCM       | http://www.w3.org/2009/xmlenc11#aes128-gcm        |
| | AES/GCM/NoPadding                     | 2.16.840.1.101.3.4.1.6  |
+-------------------------------------------------------------------+
| A192GCM       | http://www.w3.org/2009/xmlenc11#aes192-gcm        |
| | AES/GCM/NoPadding                     | 2.16.840.1.101.3.4.1.26 |
+-------------------------------------------------------------------+
| A256GCM       | http://www.w3.org/2009/xmlenc11#aes256-gcm        |
| | AES/GCM/NoPadding                     | 2.16.840.1.101.3.4.1.46 |
+-------------------------------------------------------------------+
</artwork>
      </section>
    </section>
    <section anchor="sect-b" numbered="true" toc="default">
      <name>Test Cases for AES_CBC_HMAC_SHA2 Algorithms</name>
      <t>以下のテストケースは、<xref target="sect-5.2" format="default"/> で定義された AES_CBC_HMAC_SHA2 アルゴリズムの実装を検証するために使用することができる。また、これらは<xref target="I-D.mcgrew-aead-aes-cbc-hmac-sha2" format="default"/> の将来のバージョンで登場する可能性のあるテストケースに対応することを意図しており、実行される暗号計算が同じであることを実証するものである。</t>
      <t>変数名は、<xref target="sect-5.2" format="default"/> で定義されているものです。値はすべて16進数である。</t>
      <section anchor="sect-b.1" numbered="true" toc="default">
        <name>Test Cases for AES_128_CBC_HMAC_SHA_256</name>
        <dl newline="true" spacing="normal" indent="-1">
          <dt>AES_128_CBC_HMAC_SHA_256</dt>
          <dd/>
        </dl>
        <artwork name="" type="" align="left" alt="">
  K =       00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
            10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f

  MAC_KEY = 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f

  ENC_KEY = 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f

  P =       41 20 63 69 70 68 65 72 20 73 79 73 74 65 6d 20
            6d 75 73 74 20 6e 6f 74 20 62 65 20 72 65 71 75
            69 72 65 64 20 74 6f 20 62 65 20 73 65 63 72 65
            74 2c 20 61 6e 64 20 69 74 20 6d 75 73 74 20 62
            65 20 61 62 6c 65 20 74 6f 20 66 61 6c 6c 20 69
            6e 74 6f 20 74 68 65 20 68 61 6e 64 73 20 6f 66
            20 74 68 65 20 65 6e 65 6d 79 20 77 69 74 68 6f
            75 74 20 69 6e 63 6f 6e 76 65 6e 69 65 6e 63 65

  IV =      1a f3 8c 2d c2 b9 6f fd d8 66 94 09 23 41 bc 04

  A =       54 68 65 20 73 65 63 6f 6e 64 20 70 72 69 6e 63
            69 70 6c 65 20 6f 66 20 41 75 67 75 73 74 65 20
            4b 65 72 63 6b 68 6f 66 66 73

  AL =      00 00 00 00 00 00 01 50

  E =       c8 0e df a3 2d df 39 d5 ef 00 c0 b4 68 83 42 79
            a2 e4 6a 1b 80 49 f7 92 f7 6b fe 54 b9 03 a9 c9
            a9 4a c9 b4 7a d2 65 5c 5f 10 f9 ae f7 14 27 e2
            fc 6f 9b 3f 39 9a 22 14 89 f1 63 62 c7 03 23 36
            09 d4 5a c6 98 64 e3 32 1c f8 29 35 ac 40 96 c8
            6e 13 33 14 c5 40 19 e8 ca 79 80 df a4 b9 cf 1b
            38 4c 48 6f 3a 54 c5 10 78 15 8e e5 d7 9d e5 9f
            bd 34 d8 48 b3 d6 95 50 a6 76 46 34 44 27 ad e5
            4b 88 51 ff b5 98 f7 f8 00 74 b9 47 3c 82 e2 db

  M =       65 2c 3f a3 6b 0a 7c 5b 32 19 fa b3 a3 0b c1 c4
            e6 e5 45 82 47 65 15 f0 ad 9f 75 a2 b7 1c 73 ef

  T =       65 2c 3f a3 6b 0a 7c 5b 32 19 fa b3 a3 0b c1 c4
</artwork>
      </section>
      <section anchor="sect-b.2" numbered="true" toc="default">
        <name>Test Cases for AES_192_CBC_HMAC_SHA_384</name>
        <artwork name="" type="" align="left" alt="">
  K =       00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
            10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
            20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f

  MAC_KEY = 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
            10 11 12 13 14 15 16 17

  ENC_KEY = 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27
            28 29 2a 2b 2c 2d 2e 2f

  P =       41 20 63 69 70 68 65 72 20 73 79 73 74 65 6d 20
            6d 75 73 74 20 6e 6f 74 20 62 65 20 72 65 71 75
            69 72 65 64 20 74 6f 20 62 65 20 73 65 63 72 65
            74 2c 20 61 6e 64 20 69 74 20 6d 75 73 74 20 62
            65 20 61 62 6c 65 20 74 6f 20 66 61 6c 6c 20 69
            6e 74 6f 20 74 68 65 20 68 61 6e 64 73 20 6f 66
            20 74 68 65 20 65 6e 65 6d 79 20 77 69 74 68 6f
            75 74 20 69 6e 63 6f 6e 76 65 6e 69 65 6e 63 65

  IV =      1a f3 8c 2d c2 b9 6f fd d8 66 94 09 23 41 bc 04

  A =       54 68 65 20 73 65 63 6f 6e 64 20 70 72 69 6e 63
            69 70 6c 65 20 6f 66 20 41 75 67 75 73 74 65 20
            4b 65 72 63 6b 68 6f 66 66 73

  AL =      00 00 00 00 00 00 01 50

  E =       ea 65 da 6b 59 e6 1e db 41 9b e6 2d 19 71 2a e5
            d3 03 ee b5 00 52 d0 df d6 69 7f 77 22 4c 8e db
            00 0d 27 9b dc 14 c1 07 26 54 bd 30 94 42 30 c6
            57 be d4 ca 0c 9f 4a 84 66 f2 2b 22 6d 17 46 21
            4b f8 cf c2 40 0a dd 9f 51 26 e4 79 66 3f c9 0b
            3b ed 78 7a 2f 0f fc bf 39 04 be 2a 64 1d 5c 21
            05 bf e5 91 ba e2 3b 1d 74 49 e5 32 ee f6 0a 9a
            c8 bb 6c 6b 01 d3 5d 49 78 7b cd 57 ef 48 49 27
            f2 80 ad c9 1a c0 c4 e7 9c 7b 11 ef c6 00 54 e3

  M =       84 90 ac 0e 58 94 9b fe 51 87 5d 73 3f 93 ac 20
            75 16 80 39 cc c7 33 d7 45 94 f8 86 b3 fa af d4
            86 f2 5c 71 31 e3 28 1e 36 c7 a2 d1 30 af de 57

  T =       84 90 ac 0e 58 94 9b fe 51 87 5d 73 3f 93 ac 20
            75 16 80 39 cc c7 33 d7
</artwork>
      </section>
      <section anchor="sect-b.3" numbered="true" toc="default">
        <name>Test Cases for AES_256_CBC_HMAC_SHA_512</name>
        <artwork name="" type="" align="left" alt="">
  K =       00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
            10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
            20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f
            30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f

  MAC_KEY = 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
            10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f

  ENC_KEY = 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f
            30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f

  P =       41 20 63 69 70 68 65 72 20 73 79 73 74 65 6d 20
            6d 75 73 74 20 6e 6f 74 20 62 65 20 72 65 71 75
            69 72 65 64 20 74 6f 20 62 65 20 73 65 63 72 65
            74 2c 20 61 6e 64 20 69 74 20 6d 75 73 74 20 62
            65 20 61 62 6c 65 20 74 6f 20 66 61 6c 6c 20 69
            6e 74 6f 20 74 68 65 20 68 61 6e 64 73 20 6f 66
            20 74 68 65 20 65 6e 65 6d 79 20 77 69 74 68 6f
            75 74 20 69 6e 63 6f 6e 76 65 6e 69 65 6e 63 65

  IV =      1a f3 8c 2d c2 b9 6f fd d8 66 94 09 23 41 bc 04

  A =       54 68 65 20 73 65 63 6f 6e 64 20 70 72 69 6e 63
            69 70 6c 65 20 6f 66 20 41 75 67 75 73 74 65 20
            4b 65 72 63 6b 68 6f 66 66 73

  AL =      00 00 00 00 00 00 01 50

  E =       4a ff aa ad b7 8c 31 c5 da 4b 1b 59 0d 10 ff bd
            3d d8 d5 d3 02 42 35 26 91 2d a0 37 ec bc c7 bd
            82 2c 30 1d d6 7c 37 3b cc b5 84 ad 3e 92 79 c2
            e6 d1 2a 13 74 b7 7f 07 75 53 df 82 94 10 44 6b
            36 eb d9 70 66 29 6a e6 42 7e a7 5c 2e 08 46 a1
            1a 09 cc f5 37 0d c8 0b fe cb ad 28 c7 3f 09 b3
            a3 b7 5e 66 2a 25 94 41 0a e4 96 b2 e2 e6 60 9e
            31 e6 e0 2c c8 37 f0 53 d2 1f 37 ff 4f 51 95 0b
            be 26 38 d0 9d d7 a4 93 09 30 80 6d 07 03 b1 f6

  M =       4d d3 b4 c0 88 a7 f4 5c 21 68 39 64 5b 20 12 bf
            2e 62 69 a8 c5 6a 81 6d bc 1b 26 77 61 95 5b c5
            fd 30 a5 65 c6 16 ff b2 f3 64 ba ec e6 8f c4 07
            53 bc fc 02 5d de 36 93 75 4a a1 f5 c3 37 3b 9c

  T =       4d d3 b4 c0 88 a7 f4 5c 21 68 39 64 5b 20 12 bf
            2e 62 69 a8 c5 6a 81 6d bc 1b 26 77 61 95 5b c5
</artwork>
      </section>
    </section>
    <section anchor="sect-c" numbered="true" toc="default">
      <name>Example ECDH-ES Key Agreement Computation</name>
      <t>この例では、ECDH-ES 鍵合意および Concat KDF を用いて、<xref target="sect-4.6" format="default"/> で説明した方法で CEK を導出する。 この例では、ECDH-ES 直接鍵合意モード (「alg」の値 "ECDH-ES") により、AES GCM で 128bit 鍵 (「enc」の値 "A128GCM") で合意した鍵を生成している。</t>
      <t>この例では、生産者Aliceが消費者Bobにコンテンツを暗号化する。生産者(Alice)は、鍵合意(key agreement)の計算のために、一時的な鍵を生成する。この例で鍵合意計算に使用するAliceのエフェメラルキー(JWK形式)(プライベート部分を含む)は以下の通りです。</t>
      <artwork name="" type="" align="left" alt="">
  {"kty":"EC",
   "crv":"P-256",
   "x":"gI0GAILBdu7T53akrFmMyGcsF3n5dO7MmwNBHKW5SV0",
   "y":"SLW_xSffzlPWrHEVI30DHM_4egVwt3NQqeUD7nMFpps",
   "d":"0_NxaRPUMQoAJt50Gz8YiTr8gRTwyEaCumd-MToTmIo"
  }
</artwork>
      <t>この例で鍵合意計算に使用する消費者（Bob）の鍵（JWK形式）は、（秘密部分も含めて）以下の通りです。</t>
      <artwork name="" type="" align="left" alt="">
  {"kty":"EC",
   "crv":"P-256",
   "x":"weNJy2HscCSM6AEDTDg04biOvhFhyyWvOHQfeF_PxMQ",
   "y":"e8lnCO-AlStT-NJVX-crhB7QRYhiix03illJOVAOyck",
   "d":"VEmDZpDXXK8p8N0Cndsxs924q6nS1RXFASRl6BfUqdw"
  }
</artwork>
      <t>この例で使用される Header Parameter の値は、以下の通りである。apu」（agreement PartyUInfo）ヘッダーパラメータ値は、「Alice」というUTF-8文字列のbase64urlエンコーディング、「apv」（agreement PartyVInfo）ヘッダーパラメータ値は、「Bob」というUTF-8文字列のbase64urlエンコーディングである。epk" (ephemeral public key) Header Parameter は、生産者 (Alice) のエフェメラル公開鍵の値を消費者 (Bob) に伝達するために使用される。</t>
      <artwork name="" type="" align="left" alt="">
  {"alg":"ECDH-ES",
   "enc":"A128GCM",
   "apu":"QWxpY2U",
   "apv":"Qm9i",
   "epk":
    {"kty":"EC",
     "crv":"P-256",
     "x":"gI0GAILBdu7T53akrFmMyGcsF3n5dO7MmwNBHKW5SV0",
     "y":"SLW_xSffzlPWrHEVI30DHM_4egVwt3NQqeUD7nMFpps"
    }
  }

The resulting Concat KDF [NIST.800-56A] parameter values are:
</artwork>
      <ul empty="true" spacing="normal">
        <li>
          <t>Z ECDH-ESの鍵合意出力に設定される。(この値は、NISTのセキュリティ要件により、ライブラリから直接公開されないことが多く、KDFへの入力としてのみ機能する)。この例では、Zはオクテット列(JSON配列表記を使用)に従っている。[158, 86, 217, 29, 129, 113, 53, 211, 114, 131, 66, 131, 191, 132, 38, 156, 251, 49, 110, 163, 218, 128, 106, 72, 246, 218, 167, 121, 140, 254, 144, 196].</t>
          <dl newline="true" spacing="normal" indent="3">
            <dt>keydatalen</dt>
            <dd>
	This value is 128 - the number of bits in the desired output key
      (because "A128GCM" uses a 128-bit key).
	</dd>
            <dt>AlgorithmID</dt>
            <dd>
	This is set to the octets representing the 32-bit big-endian value
      7 - [0, 0, 0, 7] - the number of octets in the AlgorithmID content
      "A128GCM", followed, by the octets representing the ASCII string
      "A128GCM" - [65, 49, 50, 56, 71, 67, 77].
	</dd>
            <dt>PartyUInfo</dt>
            <dd>
	This is set to the octets representing the 32-bit big-endian value
      5 - [0, 0, 0, 5] - the number of octets in the PartyUInfo content
      "Alice", followed, by the octets representing the UTF-8 string
      "Alice" - [65, 108, 105, 99, 101].
	</dd>
            <dt>PartyVInfo</dt>
            <dd>
	This is set to the octets representing the 32-bit big-endian value
      3 - [0, 0, 0, 3] - the number of octets in the PartyUInfo content
      "Bob", followed, by the octets representing the UTF-8 string "Bob"
      - [66, 111, 98].
	</dd>
            <dt>SuppPubInfo</dt>
            <dd>
	This is set to the octets representing the 32-bit big-endian value
      128 - [0, 0, 0, 128] - the keydatalen value.
	</dd>
            <dt>SuppPrivInfo</dt>
            <dd>
	This is set to the empty octet sequence.
	</dd>
          </dl>
        </li>
      </ul>
      <artwork name="" type="" align="left" alt="">
Concatenating the parameters AlgorithmID through SuppPubInfo results
in an OtherInfo value of:
[0, 0, 0, 7, 65, 49, 50, 56, 71, 67, 77, 0, 0, 0, 5, 65, 108, 105,
99, 101, 0, 0, 0, 3, 66, 111, 98, 0, 0, 0, 128]

Concatenating the round number 1 ([0, 0, 0, 1]), Z, and the OtherInfo
value results in the Concat KDF round 1 hash input of:
[0, 0, 0, 1,
158, 86, 217, 29, 129, 113, 53, 211, 114, 131, 66, 131, 191, 132, 38,
156, 251, 49, 110, 163, 218, 128, 106, 72, 246, 218, 167, 121, 140,
254, 144, 196,
0, 0, 0, 7, 65, 49, 50, 56, 71, 67, 77, 0, 0, 0, 5, 65, 108, 105, 99,
101, 0, 0, 0, 3, 66, 111, 98, 0, 0, 0, 128]

The resulting derived key, which is the first 128 bits of the round 1
hash output is:
[86, 170, 141, 234, 248, 35, 109, 32, 92, 34, 40, 205, 113, 167, 16,
26]

The base64url-encoded representation of this derived key is:

  VqqN6vgjbSBcIijNcacQGg
</artwork>
    </section>
    <section numbered="false" anchor="acknowledgements" toc="default">
      <name>Acknowledgements</name>
      <t>JSONコンテンツの署名と暗号化のソリューションは、以前、「Magic Signatures」<xref target="I-D.panzer-magicsig" format="default"/> 、「JSON Simple Sign 1.0」<xref target="JSS" format="default"/> 、「Canvas Applications」<xref target="CanvasApp" format="default"/> 、「JSON Simple Encryption」 [JSE] 、「JavaScript Message Security Format」<xref target="I-D.rescorla-jsms" format="default"/> で検討されており、いずれもこの文書に影響を与えた。</t>
      <t>AES_CBC_HMAC_SHA2 アルゴリズムのベースとなる "Authenticated Encryption with AES-CBC and HMAC-SHA"<xref target="I-D.mcgrew-aead-aes-cbc-hmac-sha2" format="default"/> 仕様は David A. McGrew と Kenny Paterson によって書かれた。AES_CBC_HMAC_SHA2のテストケースは、John Foleyによる<xref target="I-D.mcgrew-aead-aes-cbc-hmac-sha2" format="default"/> のテストケースに基づいたものである。</t>
      <t>マット・ミラーが書いた「Using JavaScript Object Notation (JSON) Web Encryption (JWE) for Protecting JSON Web Key (JWK) Objects」<xref target="I-D.miller-jose-jwe-protected-jwk" format="default"/> は、このドキュメントのパスワードによる暗号化の内容が元になっています。</t>
      <t>本仕様は、JOSEワーキンググループの成果であり、多数の積極的かつ献身的な参加者を含んでいます。特に、以下の方々は、この仕様に影響を与えるアイデア、フィードバック、および表現を提供してくださいました。</t>
      <t>Dirk Balfanz, Richard Barnes, Carsten Bormann, John Bradley, Brian Campbell, Alissa Cooper, Breno de Medeiros, Vladimir Dzhuvinov, Roni Even, Stephen Farrell, Yaron Y.Goland, Dick Hardt, Joe Hildebrand, Jeff Hodges, Edmund Jay, Charlie Kaufman, Barry Leiba, James Manger, Matt Miller, Kathleen Moriarty, Tony Nadalin, Axel Nennker, John Panzer, Emmanuel Raviart, Eric Rescorla, Pete Resnick, Nat Sakimura, Jim Schaad, Hannes Tchofenig, そしてSean Turner.</t>
      <t>Jim SchaadとKaren O'DonoghueがJOSE作業グループの議長を務め、Sean Turner、Stephen Farrell、Kathleen Moriartyがこの仕様作成時のセキュリティエリア担当ディレクターを務めました。</t>
    </section>
  </back>
</rfc>
