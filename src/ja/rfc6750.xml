<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" docName="draft-ietf-oauth-v2-bearer-23" indexInclude="true" number="6750" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-bearer-23" rel="prev"/>
<link href="https://dx.doi.org/10.17487/rfc6750" rel="alternate"/>
  <front>
    <title>OAuth 2.0認可フレームワーク：Bearerトークンの使用</title>
    <seriesInfo name="RFC" value="6750" stream="IETF"/>
    <date year="2012" month="October"/>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">この仕様書は、HTTPリクエストでBearerトークンを使用してOAuth 2.0で保護されたリソースにアクセスする方法を説明しています。Bearerトークンを保持している任意の当事者は、暗号鍵の所有を証明する必要なく、関連するリソースにアクセスできます。誤用を防ぐために、Bearerトークンはストレージと転送中の漏洩から保護する必要があります。</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">このメモのステータス</name>
        <t indent="0" pn="section-boilerplate.1.1">これはインターネット標準トラック文書です。</t>
<t indent="0" pn="section-boilerplate.1.2">この文書は、Internet Engineering Task Force（IETF）の製品です。IETFコミュニティの合意を表しています。公開レビューを受け、Internet Engineering Steering Group（IESG）によって公開承認されました。インターネット標準に関する詳細は、RFC 5741のセクション2にあります。</t>
        <t indent="0" pn="section-boilerplate.1.3">この文書の現在のステータス、正誤表、およびフィードバックの提供方法に関する情報については、http://www.rfc-editor.org/info/rfc6750 を参照してください。</t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">Copyright (c) 2012 IETF Trust and the persons identified as the
document authors.  All rights reserved.</t>
        <t indent="0" pn="section-boilerplate.2-2">この文書はBCP 78およびIETFドキュメントに関するIETF Trustの法的規定（http://trustee.ietf.org/license-info）に従う必要があります。この文書の発行日に有効なこれらの文書を注意深く確認して、この文書に関するあなたの権利と制限について説明しています。この文書から抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているように、Simplified BSD Licenseのテキストを含める必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。</t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">目次</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">はじめに</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
            <li pn="section-toc.1-1.1.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notational-conventions">表記上の規則</xref></t>
            </li>
            <li pn="section-toc.1-1.1.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">用語</xref></t>
            </li>
            <li pn="section-toc.1-1.1.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">概要</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authenticated-requests">認証済みリクエスト</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
            <li pn="section-toc.1-1.2.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-request-header-field">Authorizationリクエストヘッダーフィールド</xref></t>
            </li>
            <li pn="section-toc.1-1.2.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-form-encoded-body-parameter">フォームエンコードされたボディパラメーター</xref></t>
            </li>
            <li pn="section-toc.1-1.2.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-query-parameter">URIクエリパラメーター</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-www-authenticate-response-header-field">WWW-Authenticateレスポンスヘッダーフィールド</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
            <li pn="section-toc.1-1.3.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-error-codes">エラーコード</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-access-token-response">アクセストークンを含むレスポンスの例</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">セキュリティーに関する考察</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
            <li pn="section-toc.1-1.5.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-threats">セキュリティー脅威</xref></t>
            </li>
            <li pn="section-toc.1-1.5.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-mitigation">脅威の緩和</xref></t>
            </li>
            <li pn="section-toc.1-1.5.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-recommendations">推奨事項の概要</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANAに関する考慮事項</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
            <li pn="section-toc.1-1.6.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-access-token-type-registration">OAuthアクセストークンタイプの登録</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.1.2">
              <li pn="section-toc.1-1.6.1.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1.1"><xref derivedContent="6.1.1" format="counter" sectionFormat="of" target="section-6.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;bearer&quot;-oauth-access-token-type">「Bearer」OAuthアクセストークンタイプ</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.6.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-extensions-error-registration">OAuth拡張エラーの登録</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_request&quot;-error-value">「invalid_request」エラー値</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2.2" format="counter" sectionFormat="of" target="section-6.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_token&quot;-error-value">「invalid_token」エラー値</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.2.3" format="counter" sectionFormat="of" target="section-6.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;insufficient_scope&quot;-error-value">「insufficient_scope」エラー値</xref></t>
              </li>
              </ul>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">参考文献</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
            <li pn="section-toc.1-1.7.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">引用規格</xref></t>
            </li>
            <li pn="section-toc.1-1.7.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">参考文献</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.A">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.1"><xref derivedContent="A" format="counter" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">謝辞</xref></t>
          </li>
      </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">OAuthは、リソースオーナーの資格情報を直接使用する代わりに、クライアントがアクセストークンを取得することによって保護されたリソースにアクセスできるようにします。アクセストークンは、「クライアントに発行されたアクセス承認を表す文字列」として定義されています。これは、「The OAuth 2.0 Authorization Framework」<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されています。</t>
      <t indent="0" pn="section-1-2">トークンは、リソースオーナーの承認により、認可サーバーによってクライアントに発行されます。クライアントは、アクセストークンを使用して、リソースサーバーによってホストされる保護されたリソースにアクセスします。この仕様では、OAuthアクセストークンがベアラートークンである場合に、保護されたリソースリクエストを行う方法について説明しています。</t>
      <t indent="0" pn="section-1-3">この仕様では、HTTP/1.1を介してベアラートークンを使用する方法を定義しています。TLSを使用して保護されたリソースにアクセスするために、TLSの使用が必須となっています。この仕様では、OAuth 2.0認可フローからのアクセストークンを使用してOAuth保護されたリソースにアクセスすることを目的としていますが、実際には、任意のソースからのベアラートークンを使用して保護されたリソースにアクセスするための一般的なHTTP認証方法を定義しています。Bearer認証スキームは、WWW-AuthenticateおよびAuthorization HTTPヘッダーを使用したサーバー認証に主に使用されることを意図していますが、プロキシ認証に使用することを妨げるものではありません。</t>
      <section anchor="notational-conventions" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-notational-conventions">表記上の規則</name>
        <t indent="0" pn="section-1.1-1">キーワード「<bcp14>しなければなりません（MUST）</bcp14>」、「<bcp14>してはなりません（MUST NOT）</bcp14>」、
「<bcp14>要求されています（REQUIRED）</bcp14>」、
「<bcp14>することになります（SHALL）</bcp14>」、「<bcp14>することはありません（SHALL NOT）</bcp14>」、
「<bcp14>すべきです（SHOULD）</bcp14>」、「<bcp14>すべきではありません（SHOULD NOT）</bcp14>」、
「<bcp14>推奨されます（RECOMMENDED）</bcp14>」、「<bcp14>推奨されません（NOT RECOMMENDED）</bcp14>」、
「<bcp14>してもよいです（MAY）</bcp14>」、「<bcp14>選択できます（OPTIONAL）</bcp14>」は、
<xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/>に記載されているとおりに解釈されるものとします。</t>
        <t indent="0" pn="section-1.1-2">このドキュメントでは、<xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>の拡張バッカス・ナウア形式（ABNF）表記法を使用しています。さらに、以下の規則が含まれています。
HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>: auth-paramおよびauth-scheme。「Uniform Resource Identifier（URI）：Generic Syntax」<xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>：URI-reference。</t>
        <t indent="0" pn="section-1.1-3">特に注記がない限り、すべてのプロトコルパラメーター名および値は大文字と小文字を区別します。</t>
      </section>
      <section anchor="terminology" numbered="true" removeInRFC="false" toc="include" pn="section-1.2">
        <name slugifiedName="name-terminology">用語</name>
        <t indent="0" pn="section-1.2-1">Bearer token
   セキュリティトークンで、保持している当事者（「Bearer」）がトークンを使用できるという特性を持ちます。Bearerトークンを使用する場合、Bearerは暗号鍵の所有を証明する必要はありません（所有の証明）。</t>
        <t indent="0" pn="section-1.2-2">その他の用語は、『OAuth 2.0 Authorization Framework』<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されているものと同じ意味で使用されます。</t>
      </section>
      <section anchor="overview" numbered="true" removeInRFC="false" toc="include" pn="section-1.3">
        <name slugifiedName="name-overview">概要</name>
        <t indent="0" pn="section-1.3-1">OAuthは、クライアントがリソースオーナーの代理で保護されたリソースにアクセスするための方法を提供します。一般的な場合では、クライアントが保護されたリソースにアクセスする前に、まずリソースオーナーから承認許可を取得し、その承認許可をアクセストークンに交換する必要があります。アクセストークンは、承認許可によって付与されたスコープ、期間、およびその他の属性を表します。クライアントは、アクセストークンをリソースサーバーに提示することで保護されたリソースにアクセスします。一部の場合では、クライアントは、リソースオーナーから承認許可を取得することなく、直接認証サーバーに自分自身の資格情報を提示してアクセストークンを取得することができます。</t>
        <t indent="0" pn="section-1.3-2">アクセストークンは、リソースサーバーが理解できる単一のトークンに置き換えることで、異なる認証構造（例：ユーザー名とパスワード、アサーション）を抽象化します。この抽象化により、短時間有効なアクセストークンを発行することができ、リソースサーバーが理解する必要がある認証スキームの範囲を広げる必要がなくなります。</t>
        <t indent="0" pn="section-1.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  +--------+                               +---------------+
  |        |--(A)- Authorization Request ->|   Resource    |
  |        |                               |     Owner     |
  |        |<-(B)-- Authorization Grant ---|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(C)-- Authorization Grant -->| Authorization |
  | Client |                               |     Server    |
  |        |<-(D)----- Access Token -------|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(E)----- Access Token ------>|    Resource   |
  |        |                               |     Server    |
  |        |<-(F)--- Protected Resource ---|               |
  +--------+                               +---------------+
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-4"><artwork name="" type="" align="left" alt=""><![CDATA[
                  図1: 抽象プロトコルフロー
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-5">図1に示す抽象的なOAuth 2.0フローは、クライアント、リソースオーナー、認可サーバー、およびリソースサーバー（<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で説明されている）の間の相互作用を説明しています。このドキュメントでは、次の2つのステップが指定されています。</t>
        <t indent="0" pn="section-1.3-6">(E) クライアントは、アクセストークンを提示して認証し、リソースサーバーから保護されたリソースを要求します。</t>
        <t indent="0" pn="section-1.3-7">(F) リソースサーバーはアクセストークンを検証し、有効であればリクエストを処理します。</t>
        <t indent="0" pn="section-1.3-8">このドキュメントは、ステップ(D)で返されるアクセストークンに対して意味的な要件を課します。</t>
      </section>
    </section>
    <section anchor="authenticated-requests" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-authenticated-requests">認証済みリクエスト</name>
      <t indent="0" pn="section-2-1">このセクションでは、リソースサーバーに対するリソースリクエストでBearerアクセストークンを送信する3つの方法を定義しています。クライアントは、各リクエストでトークンを転送するために複数の方法を使用<bcp14>してはなりません（MUST NOT）</bcp14>。</t>
      <section anchor="authorization-request-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-authorization-request-header-field">Authorizationリクエストヘッダーフィールド</name>
        <t indent="0" pn="section-2.1-1">HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>で定義された「Authorization」リクエストヘッダーフィールドにアクセストークンを送信する場合、クライアントは「Bearer」認証スキームを使用してアクセストークンを送信します。</t>
        <t indent="0" pn="section-2.1-2">例:</t>
        <t indent="0" pn="section-2.1-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource HTTP/1.1
  Host: server.example.com
  Authorization: Bearer mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-4">このスキームの「Authorization」ヘッダーフィールドの構文は、<xref target="RFC2617" section="2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-2" derivedContent="RFC2617"/>で定義されたBasicスキームの使用方法にしたがいます。Basicと同様に、<xref target="RFC2617" section="1.2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-1.2" derivedContent="RFC2617"/>で定義された一般的な構文には準拠していませんが、HTTP 1.1で開発されている一般的な認証フレームワークには互換性があります。ただし、既存の展開を反映するために、そこで概説されている推奨される方法にはしたがいません。Bearer資格情報の構文は次のとおりです。</t>
        <t indent="0" pn="section-2.1-5"><artwork name="" type="" align="left" alt=""><![CDATA[
  b64token    = 1*( ALPHA / DIGIT /
                    "-" / "." / "_" / "~" / "+" / "/" ) *"="
  credentials = "Bearer" 1*SP b64token
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-6">クライアントは、Bearerトークンを使用して認証されたリクエストを「Authorization」リクエストヘッダーフィールドを使用して送信<bcp14>すべきです（SHOULD）</bcp14>（HTTP認証スキーム「Bearer」を使用）。リソースサーバーは、この方法をサポート<bcp14>しなければなりません（MUST）</bcp14>。 </t>
      </section>
      <section anchor="form-encoded-body-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.2">
        <name slugifiedName="name-form-encoded-body-parameter">Form-Encoded Body Parameter</name>
        <t indent="0" pn="section-2.2-1">アクセストークンをHTTPリクエストエンティティボディに送信する場合、クライアントは「access_token」パラメーターを使用してリクエストボディにアクセストークンを追加します。以下の条件がすべて満たされている場合、クライアントはこの方法を使用しては<bcp14>なりません</bcp14>。</t>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-2">
          <li pn="section-2.2-2.1"> HTTPリクエストエンティティヘッダーに「Content-Type」ヘッダーフィールドが含まれ、値が「application/x-www-form-urlencoded」に設定されていること。</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-3">
          <li pn="section-2.2-3.1"> エンティティボディが、HTML 4.01 [W3C.REC-html401-19991224]で定義されている「application/x-www-form-urlencoded」コンテンツタイプのエンコーディング要件に従っていること。</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-4">
          <li pn="section-2.2-4.1"> HTTPリクエストエンティティボディが単一パートであること。</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-5">
          <li pn="section-2.2-5.1"> エンティティボディにエンコードされるコンテンツは、ASCII [USASCII]文字のみで構成されていること。</li>
        </ul>
        <ul bare="false" empty="false" indent="3" spacing="normal" pn="section-2.2-6">
          <li pn="section-2.2-6.1"> HTTPリクエストメソッドが、リクエストボディに定義されたセマンティクスを持つものであること。特に、「GET」メソッドは使用<bcp14>できません</bcp14>。</li>
        </ul>
        <t indent="0" pn="section-2.2-7">エンティティボディには、リクエスト固有のパラメーターを含めることができますが、その場合、「access_token」パラメーターは「&amp;」文字（ASCIIコード38）を使用してリクエスト固有のパラメーターから適切に分離する<bcp14>必要があります</bcp14>。</t>
        <t indent="0" pn="section-2.2-8">たとえば、クライアントはトランスポート層セキュリティを使用して、以下のHTTPリクエストを行います。</t>
        <t indent="0" pn="section-2.2-9"><artwork name="" type="" align="left" alt=""><![CDATA[
  POST /resource HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-10"><artwork name="" type="" align="left" alt=""><![CDATA[
  access_token=mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-11">「application/x-www-form-urlencoded」メソッドは、参加するブラウザが「Authorization」リクエストヘッダーフィールドにアクセスできないアプリケーションコンテキスト以外では、使用<bcp14>すべきではありません（SHOULD NOT）</bcp14>。リソースサーバーは、このメソッドをサポート<bcp14>してもよいです（MAY）</bcp14>。</t>
      </section>
      <section anchor="uri-query-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.3">
        <name slugifiedName="name-uri-query-parameter">URIクエリパラメーター</name>
        <t indent="0" pn="section-2.3-1">アクセストークンをHTTPリクエストURIで送信する場合、クライアントは、「Uniform Resource Identifier (URI): Generic Syntax」<xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>で定義されたリクエストURIクエリコンポーネントに「access_token」パラメーターを使用してアクセストークンを追加します。</t>
        <t indent="0" pn="section-2.3-2">たとえば、クライアントは、トランスポート層セキュリティを使用して、以下のHTTPリクエストを行います。</t>
        <t indent="0" pn="section-2.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource?access_token=mF_9.B5f-4.1JqM HTTP/1.1
  Host: server.example.com
]]></artwork>
</t>
        <t indent="0" pn="section-2.3-4">HTTPリクエストURIクエリには、他のリクエスト固有のパラメーターを含めることができます。この場合、「access_token」パラメーターは、リクエスト固有のパラメーターと適切に区別するために、「&amp;」文字（ASCIIコード38）を使用して分離<bcp14>しなければなりません（MUST）</bcp14>。</t>
        <t indent="0" pn="section-2.3-5">例:</t>
        <t indent="0" pn="section-2.3-6"> https://server.example.com/resource?access_token=mF_9.B5f-4.1JqM&amp;p=q</t>
        <t indent="0" pn="section-2.3-7">URIクエリパラメーターメソッドを使用するクライアントは、「no-store」オプションを含むCache-Controlヘッダーを送信<bcp14>すべきです（SHOULD）</bcp14>。これらのリクエストに対するサーバーの成功（2XXステータス）レスポンスは、「private」オプションを含むCache-Controlヘッダーを含む<bcp14>べきです（SHOULD）</bcp14>。</t>
        <t indent="0" pn="section-2.3-8">URIメソッドに関連するセキュリティ上の脆弱性（セクション5を参照）により、アクセストークンを含むURLがログに記録される可能性が高いため、アクセストークンを「Authorization」リクエストヘッダーフィールドまたはHTTPリクエストエンティティボディに輸送することが不可能な場合を除き、このメソッドは使用<bcp14>すべきではありません（SHOULD NOT）</bcp14>。リソースサーバーは、このメソッドをサポート<bcp14>してもよいです（MAY）</bcp14>。</t>
        <t indent="0" pn="section-2.3-9">このメソッドは、現在の使用状況を文書化するために含まれていますが、その使用は推奨されていません。これは、そのセキュリティ上の欠陥（セクション5を参照）と、URI名前空間のベストプラクティスに反する予約済みのクエリパラメーター名を使用するためです。「World Wide Webのアーキテクチャ、第1巻」<xref target="W3C.REC-webarch-20041215" format="default" sectionFormat="of" derivedContent="W3C.REC-webarch-20041215"/>によると、URI名前空間のベストプラクティスに反するためです。</t>
      </section>
    </section>
    <section anchor="the-www-authenticate-response-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-the-www-authenticate-response-header-field">The WWW-Authenticate Response Header Field</name>
      <t indent="0" pn="section-3-1">保護されたリソースリクエストに認証資格情報が含まれていない場合、または保護されたリソースへのアクセスを可能にするアクセストークンが含まれていない場合、リソースサーバーはHTTP「WWW-Authenticate」レスポンスヘッダーフィールドを含める<bcp14>必要があります</bcp14>。また、他の条件に対してもレスポンスに含める<bcp14>ことができます</bcp14>。「WWW-Authenticate」ヘッダーフィールドは、HTTP/1.1で定義されたフレームワークを使用します。<xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/></t>
      <t indent="0" pn="section-3-2">この仕様で定義されたすべてのチャレンジは、認証スキーム値「Bearer」を使用する<bcp14>必要があります</bcp14>。このスキームは、1つ以上の認証パラメーター値に続く<bcp14>必要があります</bcp14>。この仕様で使用または定義された認証パラメーター属性は、以下のとおりです。他の認証パラメーター属性<bcp14>も使用できます</bcp14>。</t>
      <t indent="0" pn="section-3-3">「realm」属性は、HTTP/1.1で説明されている方法で保護範囲を示すために含めることができます。<xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>。「realm」属性は、1回以上現れては<bcp14>いけません</bcp14>。</t>
      <t indent="0" pn="section-3-4">「scope」属性は、<xref target="RFC6749" section="3.3" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc6749#section-3.3" derivedContent="RFC6749"/>で定義されています。「scope」属性は、要求されたリソースにアクセスするために必要なアクセストークンの必要なスコープを示す大文字と小文字を区別するスコープ値のスペース区切りリストです。「scope」値は実装によって定義され、中央集権型のレジストリはありません。許可される値は認可サーバーによって定義されます。「scope」値の順序は重要ではありません。場合によっては、保護されたリソースを利用するために十分なアクセススコープを持つ新しいアクセストークンを要求する際に「scope」値が使用されます。「scope」属性の使用は<bcp14>オプションです</bcp14>。「scope」属性は1回以上現れては<bcp14>いけません</bcp14>。「scope」値はプログラムで使用することを目的としており、エンドユーザーに表示することは意図されていません。</t>
      <t indent="0" pn="section-3-5">2つの例として、OpenID Connect<xref target="OpenID.Messages" format="default" sectionFormat="of" derivedContent="OpenID.Messages"/>およびOpen Authentication Technology Committee（OATC）Online Multimedia Authorization Protocol<xref target="OMAP" format="default" sectionFormat="of" derivedContent="OMAP"/> OAuth 2.0のユースケースから取得したスコープ値が続きます。</t>
      <t indent="0" pn="section-3-6"><artwork name="" type="" align="left" alt=""><![CDATA[
  scope="openid profile email"
  scope="urn:example:channel=HBO&urn:example:rating=G,PG-13"
]]></artwork>
</t>
      <t indent="0" pn="section-3-7">If the protected resource request included an access token and failed
authentication, the resource server <bcp14>SHOULD</bcp14> include the &quot;error&quot;
attribute to provide the client with the reason why the access
request was declined.  The parameter value is described in
Section 3.1.  In addition, the resource server <bcp14>MAY</bcp14> include the
&quot;error_description&quot; attribute to provide developers a human-readable
explanation that is not meant to be displayed to end-users.  It also
<bcp14>MAY</bcp14> include the &quot;error_uri&quot; attribute with an absolute URI
identifying a human-readable web page explaining the error.  The
&quot;error&quot;, &quot;error_description&quot;, and &quot;error_uri&quot; attributes <bcp14>MUST NOT</bcp14>
appear more than once.</t>
      <t indent="0" pn="section-3-8">Values for the &quot;scope&quot; attribute (specified in Appendix A.4 of
<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST NOT</bcp14> include characters outside the set %x21 / %x23-5B
/ %x5D-7E for representing scope values and %x20 for delimiters
between scope values.  Values for the &quot;error&quot; and &quot;error_description&quot;
attributes (specified in Appendixes A.7 and A.8 of <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST
NOT</bcp14> include characters outside the set %x20-21 / %x23-5B / %x5D-7E.
Values for the &quot;error_uri&quot; attribute (specified in Appendix A.9 of
<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>) <bcp14>MUST</bcp14> conform to the URI-reference syntax and thus <bcp14>MUST NOT</bcp14>
include characters outside the set %x21 / %x23-5B / %x5D-7E.</t>
      <t indent="0" pn="section-3-9">For example, in response to a protected resource request without
authentication:</t>
      <t indent="0" pn="section-3-10"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      <t indent="0" pn="section-3-11">And in response to a protected resource request with an
authentication attempt using an expired access token:</t>
      <t indent="0" pn="section-3-12"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example",
                    error="invalid_token",
                    error_description="The access token expired"
]]></artwork>
</t>
      <section anchor="error-codes" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-error-codes">エラーコード</name>
        <t indent="0" pn="section-3.1-1">リクエストが失敗した場合、リソースサーバーは適切なHTTPステータスコード（通常は400、401、403、または405）を使用して応答し、応答に次のエラーコードのいずれかを含めます。</t>
        <t indent="0" pn="section-3.1-2">invalid_request
      リクエストに必要なパラメーターが欠落している、サポートされていないパラメーターまたはパラメーター値が含まれている、同じパラメーターが繰り返されている、アクセストークンを含めるために複数の方法を使用している、またはその他の形式で不正である場合。リソースサーバーはHTTP 400（不正なリクエスト）ステータスコードで応答<bcp14>すべきです（SHOULD）</bcp14>。</t>
        <t indent="0" pn="section-3.1-3">invalid_token
      提供されたアクセストークンが期限切れ、取り消され、形式が不正であるか、その他の理由で無効である場合、リソースはHTTP 401（認証失敗）ステータスコードで応答<bcp14>すべきです（SHOULD）</bcp14>。クライアントは新しいアクセストークンを要求して保護されたリソースリクエストを再試行<bcp14>してもよいです（MAY）</bcp14>。</t>
        <t indent="0" pn="section-3.1-4">insufficient_scope
      リクエストに必要な権限がアクセストークンで提供される権限よりも高い場合、リソースサーバーはHTTP 403（禁止）ステータスコードで応答<bcp14>すべきです（SHOULD）</bcp14>。また、リソースへのアクセスに必要なスコープを含む「scope」属性を含め<bcp14>てもよいです（MAY）</bcp14>。</t>
        <t indent="0" pn="section-3.1-5">リクエストに認証情報が含まれていない場合（たとえば、クライアントが認証が必要であることを知らず、またはサポートされていない認証方法を使用して試行した場合）、リソースサーバーはエラーコードやその他のエラー情報を含める<bcp14>べきではありません（SHOULD NOT）</bcp14>。</t>
        <t indent="0" pn="section-3.1-6">例:</t>
        <t indent="0" pn="section-3.1-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      </section>
    </section>
    <section anchor="example-access-token-response" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-example-access-token-response">アクセストークンを含むレスポンスの例</name>
      <t indent="0" pn="section-4-1">通常、BearerトークンはOAuth 2.0のアクセストークンレスポンスの一部としてクライアントに返されます。そのようなレスポンスの例を以下に示します。</t>
      <t indent="0" pn="section-4-2"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json;charset=UTF-8
  Cache-Control: no-store
  Pragma: no-cache
]]></artwork>
</t>
      <t indent="0" pn="section-4-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  {
    "access_token":"mF_9.B5f-4.1JqM",
    "token_type":"Bearer",
    "expires_in":3600,
    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA"
  }
]]></artwork>
</t>
    </section>
    <section anchor="security-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-security-considerations">セキュリティーに関する考察</name>
      <t indent="0" pn="section-5-1">このセクションでは、Bearerトークンを使用する場合のトークン処理に関する関連するセキュリティー脅威について説明し、これらの脅威を緩和する方法について説明します。</t>
      <section anchor="security-threats" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-security-threats">セキュリティー脅威</name>
        <t indent="0" pn="section-5.1-1">以下のリストは、トークンを使用するプロトコルに対するいくつかの一般的な脅威を示しています。この脅威のリストは、NIST特別出版物800-63 <xref target="NIST800-63" format="default" sectionFormat="of" derivedContent="NIST800-63"/>に基づいています。このドキュメントはOAuth 2.0認可仕様 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>にもとづいているため、そこで説明されている脅威や関連するドキュメントで説明されている脅威については除外します。</t>
        <t indent="0" pn="section-5.1-2">トークンの生成/変更：攻撃者は、偽のトークンを生成したり、既存のトークンの認証ステートメントや属性ステートメントなどのトークンの内容を変更することで、リソースサーバーがクライアントに不適切なアクセスを許可することができます。たとえば、攻撃者はトークンを変更して有効期間を延長することができます。悪意のあるクライアントは、アサーションを変更して、閲覧することができない情報にアクセスすることができます。</t>
        <t indent="0" pn="section-5.1-3">トークンの開示：トークンには、機密情報を含む認証および属性ステートメントが含まれる場合があります。</t>
        <t indent="0" pn="section-5.1-4">トークンリダイレクト：攻撃者は、誤ってトークンが自分のものであると信じている別のリソースサーバーにアクセスするために生成されたトークンを使用します。</t>
        <t indent="0" pn="section-5.1-5">トークンの再利用：攻撃者は、過去にそのリソースサーバーで使用されたトークンを再利用しようとします。</t>
      </section>
      <section anchor="threat-mitigation" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-threat-mitigation">Threat Mitigation</name>
        <t indent="0" pn="section-5.2-1">デジタル署名またはメッセージ認証コード（MAC）を使用してトークンの内容を保護することにより、さまざまな脅威を軽減できます。また、ベアラートークンには、情報を直接エンコードする代わりに、認証情報への参照が含まれる場合があります。そのような参照は、攻撃者が推測することが不可能である必要があります。参照を使用する場合、サーバーとトークン発行者の間に追加のやり取りが必要になる場合があります。この仕様では、そのようなやり取りのメカニズムは定義されていません。<bcp14>MUST</bcp14></t>
        <t indent="0" pn="section-5.2-2">このドキュメントでは、トークンのエンコード方法や内容については指定されていないため、トークンの整合性保護を保証する手段に関する詳細な推奨事項は、このドキュメントの範囲外です。トークンの整合性保護は、トークンが変更されないようにするために十分である必要があります。<bcp14>MUST</bcp14></t>
        <t indent="0" pn="section-5.2-3">トークンのリダイレクトに対処するためには、認証サーバーがトークンに意図された受信者（オーディエンス）のID、通常は単一のリソースサーバー（またはリソースサーバーのリスト）を含めることが重要です。トークンの使用を特定のスコープに制限することも<bcp14>RECOMMENDED</bcp14>されます。</t>
        <t indent="0" pn="section-5.2-4">認証サーバーはTLSを実装する<bcp14>MUST</bcp14>があります。実装すべきバージョンは時間とともに変化し、実装時の広範な展開と既知のセキュリティ脆弱性に依存します。この執筆時点では、TLSバージョン1.2が最新バージョンですが、実際の展開は非常に限定的であり、実装ツールキットで容易に利用できない場合があります。TLSバージョン1.0は最も広く展開されており、最も広範な相互運用性を提供します。<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/><xref target="RFC2246" format="default" sectionFormat="of" derivedContent="RFC2246"/></t>
        <t indent="0" pn="section-5.2-5">トークンの漏洩を防ぐために、機密性保護はTLS<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>を使用して適用する<bcp14>MUST</bcp14>されます。これには、クライアントと認証サーバーの間の通信インタラクション、およびクライアントとリソースサーバーの間のインタラクションが、機密性と整合性の保護を提供する暗号スイートを使用する必要があります。TLSは、この仕様で実装および使用する必要があるため、通信チャネルを介したトークンの漏洩を防止するための優先的なアプローチです。トークンの内容を観察できないようにする場合、トークンの暗号化<bcp14>MUST</bcp14>がTLS保護の使用に加えて適用されます。トークンの漏洩に対するさらなる防御策として、クライアント<bcp14>MUST</bcp14>は、保護されたリソースに対するリクエストを行うときにTLS証明書チェーンを検証する必要があります。これには、証明書失効リスト（CRL）<xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>のチェックも含まれます。</t>
        <t indent="0" pn="section-5.2-6">Cookieは通常、平文で送信されます。したがって、それらに含まれる情報は漏洩の危険にさらされます。したがって、ベアラートークン<bcp14>MUST NOT</bcp14>は、平文で送信されるCookieに保存されるべきではありません。Cookieに関するセキュリティについては、「HTTP State Management Mechanism」<xref target="RFC6265" format="default" sectionFormat="of" derivedContent="RFC6265"/>を参照してください。</t>
        <t indent="0" pn="section-5.2-7">ロードバランサーを利用するなど、一部の展開では、リソースサーバーへのTLS接続が実際のリソースを提供するサーバーの前に終了する場合があります。これにより、フロントエンドサーバーとバックエンドサーバーの間でトークンが保護されない可能性があります。そのような展開では、トークンの機密性を確保するために、十分な措置<bcp14>MUST</bcp14>が講じられる必要があります。トークンの暗号化は、そのような可能性がある措置の1つです。</t>
        <t indent="0" pn="section-5.2-8">トークンのキャプチャと再生に対処するために、以下の推奨事項があります。まず、トークンの有効期間<bcp14>MUST</bcp14>が制限される必要があります。これを実現する1つの手段は、トークンの保護された部分に有効期間フィールドを配置することです。短時間（1時間以下）のトークンを使用することで、漏洩の影響を軽減できます。第二に、クライアントと認証サーバー、およびクライアントとリソースサーバーの間の交換の機密性保護<bcp14>MUST</bcp14>が適用される必要があります。その結果、通信パスにいる盗聴者はトークン交換を観察できません。したがって、そのようなパス上の攻撃者はトークンを再生できません。さらに、トークンをリソースサーバーに提示する際に、クライアント<bcp14>MUST</bcp14>は、HTTP Over TLSのセクション3.1に従って、そのリソースサーバーのIDを検証する必要があります。証明書チェーンの検証を行わずにトークンを認証されていないリソースサーバーに提示すると、攻撃者はトークンを盗み、保護されたリソースに不正アクセスできるようになります。</t>
      </section>
      <section anchor="summary-of-recommendations" numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-summary-of-recommendations">推奨事項の概要</name>
        <t indent="0" pn="section-5.3-1">Bearerトークンを保護する：クライアント実装は必ず、Bearerトークンが意図しないパーティに漏洩しないように<bcp14>しなければなりません（MUST）</bcp14>。そうしないと、彼らはそれらを使用して保護されたリソースにアクセスできるため、これはベアラトークンを使用する際の主要なセキュリティ上の考慮事項であり、以下に続くより具体的な推奨事項の基礎となります。</t>
        <t indent="0" pn="section-5.3-2">TLS証明書チェーンの検証：クライアントは、保護されたリソースに対するリクエストを行う際にTLS証明書チェーンを検証<bcp14>しなければなりません（MUST）</bcp14>。そうしないと、DNSハイジャック攻撃によりトークンが盗まれ、意図しないアクセスが可能になる可能性があります。</t>
        <t indent="0" pn="section-5.3-3">常にTLS（https）を使用する：クライアント<bcp14>は必ず</bcp14>、Bearerトークンを使用してリクエストを行う場合には、常にTLS<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>（https）または同等のトランスポートセキュリティを使用する必要があります。そうしないと、トークンが多数の攻撃にさらされ、攻撃者が意図しないアクセスを取得する可能性があります。</t>
        <t indent="0" pn="section-5.3-4">Bearerトークンをクッキーに保存しないでください：実装は、クッキーで送信されることがデフォルトの転送モードであるため、平文で送信される可能性があるクッキー内にBearerトークンを保存<bcp14>してはなりません（MUST NOT）</bcp14>。Bearerトークンをクッキーに保存する実装は、クロスサイトリクエストフォージェリに対する予防措置を必ず講じる<bcp14>必要があります（MUST）</bcp14>。</t>
        <t indent="0" pn="section-5.3-5">短命なBearerトークンを発行する：トークンサーバーは、特にWebブラウザ内または情報漏洩が発生する他の環境で実行されるクライアントにトークンを発行する場合、短命（1時間以下）のBearerトークンを発行<bcp14>すべきです（SHOULD）</bcp14>。短命なBearerトークンを使用することで、漏洩の影響を軽減できます。</t>
        <t indent="0" pn="section-5.3-6">発行対象のスコープ付きBearerトークン：トークンサーバーは、意図した信頼するパーティまたは信頼するパーティのセットに使用を限定するオーディエンス制限を含むBearerトークンを発行<bcp14>すべきです（SHOULD）</bcp14>。</t>
        <t indent="0" pn="section-5.3-7">ページURLにBearerトークンを渡さないでください：Bearerトークンは、ページURL（たとえば、クエリ文字列パラメーターとして）に渡<bcp14>すべきではありません（SHOULD NOT）</bcp14>。代わりに、機密性対策が講じられたHTTPメッセージヘッダーまたはメッセージボディにBearerトークンを渡<bcp14>すべきです（SHOULD）</bcp14>。ブラウザ、Webサーバー、その他のソフトウェアは、ブラウザの履歴、Webサーバーのログ、およびその他のデータ構造を十分に保護できない場合があります。BearerトークンがページURLに渡される場合、攻撃者は履歴データ、ログ、またはその他の保護されていない場所からそれらを盗むことができる可能性があります。</t>
      </section>
    </section>
    <section anchor="iana-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANAに関する考慮事項</name>
      <section anchor="oauth-access-token-type-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-oauth-access-token-type-registration">OAuthアクセストークンタイプの登録</name>
        <t indent="0" pn="section-6.1-1">この仕様書は、<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されたOAuth Access Token Typesレジストリに以下のアクセストークンタイプを登録します。</t>
        <section anchor="the-&quot;bearer&quot;-oauth-access-token-type" numbered="true" removeInRFC="false" toc="include" pn="section-6.1.1">
          <name slugifiedName="name-the-&quot;bearer&quot;-oauth-access-token-type">「Bearer」OAuthアクセストークンタイプ</name>
          <t indent="0" pn="section-6.1.1-1">タイプ名：
   Bearer</t>
          <t indent="0" pn="section-6.1.1-2">追加のトークンエンドポイントレスポンスパラメーター：
   (なし)</t>
          <t indent="0" pn="section-6.1.1-3">HTTP認証スキーム：
   Bearer</t>
          <t indent="0" pn="section-6.1.1-4">変更コントローラー：
   IETF</t>
          <t indent="0" pn="section-6.1.1-5">仕様書：
   RFC 6750</t>
        </section>
      </section>
      <section anchor="oauth-extensions-error-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-oauth-extensions-error-registration">OAuth拡張エラーの登録</name>
        <t indent="0" pn="section-6.2-1">この仕様書は、<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されたOAuth拡張エラーレジストリに以下のエラー値を登録します。</t>
        <section anchor="the-&quot;invalid_request&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.1">
          <name slugifiedName="name-the-&quot;invalid_request&quot;-error-value">「invalid_request」エラー値</name>
          <t indent="0" pn="section-6.2.1-1">エラー名：
   invalid_request</t>
          <t indent="0" pn="section-6.2.1-2">エラー使用場所：
   リソースアクセスエラーレスポンス</t>
          <t indent="0" pn="section-6.2.1-3">関連するプロトコル拡張：
   ベアラアクセストークンタイプ</t>
          <t indent="0" pn="section-6.2.1-4">変更コントローラー：
   IETF</t>
          <t indent="0" pn="section-6.2.1-5">仕様書：
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;invalid_token&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.2">
          <name slugifiedName="name-the-&quot;invalid_token&quot;-error-value">「invalid_token」エラー値</name>
          <t indent="0" pn="section-6.2.2-1">エラー名：
   invalid_token</t>
          <t indent="0" pn="section-6.2.2-2">エラー使用場所：
   リソースアクセスエラーレスポンス</t>
          <t indent="0" pn="section-6.2.2-3">関連するプロトコル拡張：
   ベアラアクセストークンタイプ</t>
          <t indent="0" pn="section-6.2.2-4">変更コントローラー：
   IETF</t>
          <t indent="0" pn="section-6.2.2-5">仕様書：
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;insufficient_scope&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.3">
          <name slugifiedName="name-the-&quot;insufficient_scope&quot;-error-value">「insufficient_scope」エラー値</name>
          <t indent="0" pn="section-6.2.3-1">エラー名：
   insufficient_scope</t>
          <t indent="0" pn="section-6.2.3-2">エラー使用場所：
   リソースアクセスエラーレスポンス</t>
          <t indent="0" pn="section-6.2.3-3">関連するプロトコル拡張：
   ベアラアクセストークンタイプ</t>
          <t indent="0" pn="section-6.2.3-4">変更コントローラー：
   IETF</t>
          <t indent="0" pn="section-6.2.3-5">仕様書：
   RFC 6750</t>
        </section>
      </section>
    </section>
  </middle>
  <back>
    <references pn="section-7">
      <name slugifiedName="name-references">参考文献</name>
      <references pn="section-7.1">
        <name slugifiedName="name-normative-references">引用規格</name>
        <reference anchor="RFC2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>RFCで使用する要求レベルを表すキーワード</title>
            <date year="1997" month="March"/>
          </front>
          <seriesInfo name="BCP">14</seriesInfo>
          <seriesInfo name="RFC">2119</seriesInfo>
        </reference>
        <reference anchor="RFC2246" quoteTitle="true" derivedAnchor="RFC2246">
          <front>
            <title>The TLS Protocol Version 1.0</title>
            <date year="1999" month="January"/>
          </front>
          <seriesInfo name="RFC">2246</seriesInfo>
        </reference>
        <reference anchor="RFC2616" quoteTitle="true" derivedAnchor="RFC2616">
          <front>
            <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2616</seriesInfo>
        </reference>
        <reference anchor="RFC2617" quoteTitle="true" derivedAnchor="RFC2617">
          <front>
            <title>HTTP Authentication: Basic and Digest Access Authentication</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2617</seriesInfo>
        </reference>
        <reference anchor="RFC2818" quoteTitle="true" derivedAnchor="RFC2818">
          <front>
            <title>HTTP Over TLS</title>
            <date year="2000" month="May"/>
          </front>
          <seriesInfo name="RFC">2818</seriesInfo>
        </reference>
        <reference anchor="RFC3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <date year="2005" month="January"/>
          </front>
          <seriesInfo name="STD">66</seriesInfo>
          <seriesInfo name="RFC">3986</seriesInfo>
        </reference>
        <reference anchor="RFC5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <date year="2008" month="January"/>
          </front>
          <seriesInfo name="STD">68</seriesInfo>
          <seriesInfo name="RFC">5234</seriesInfo>
        </reference>
        <reference anchor="RFC5246" quoteTitle="true" derivedAnchor="RFC5246">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
            <date year="2008" month="August"/>
          </front>
          <seriesInfo name="RFC">5246</seriesInfo>
        </reference>
        <reference anchor="RFC5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <date year="2008" month="May"/>
          </front>
          <seriesInfo name="RFC">5280</seriesInfo>
        </reference>
        <reference anchor="RFC6265" quoteTitle="true" derivedAnchor="RFC6265">
          <front>
            <title>HTTP State Management Mechanism</title>
            <date year="2011" month="April"/>
          </front>
          <seriesInfo name="RFC">6265</seriesInfo>
        </reference>
        <reference anchor="RFC6749" quoteTitle="true" derivedAnchor="RFC6749">
          <front>
            <title>The OAuth 2.0 Authorization Framework</title>
            <date year="2012" month="October"/>
          </front>
          <seriesInfo name="RFC">6749</seriesInfo>
        </reference>
        <reference anchor="USASCII" quoteTitle="true" derivedAnchor="USASCII">
          <front>
            <title>Coded Character Set -- 7-bit American Standard Code for Information Interchange</title>
            <date year="1986"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-html401-19991224" target="http://www.w3.org/TR/1999/REC-html401-19991224" quoteTitle="true" derivedAnchor="W3C.REC-html401-19991224">
          <front>
            <title>HTML 4.01 Specification</title>
            <date year="1999" month="December"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-webarch-20041215" target="http://www.w3.org/TR/2004/REC-webarch-20041215" quoteTitle="true" derivedAnchor="W3C.REC-webarch-20041215">
          <front>
            <title>Architecture of the World Wide Web, Volume One</title>
            <date year="2004" month="December"/>
          </front>
        </reference>
      </references>
      <references pn="section-7.2">
        <name slugifiedName="name-informative-references">参考文献</name>
        <reference anchor="HTTP-AUTH" quoteTitle="true" derivedAnchor="HTTP-AUTH">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
            <date year="2012" month="October"/>
          </front>
        </reference>
        <reference anchor="NIST800-63" target="http://csrc.nist.gov/publications/" quoteTitle="true" derivedAnchor="NIST800-63">
          <front>
            <title>NIST Special Publication 800-63-1, INFORMATION SECURITY</title>
            <date year="2011" month="December"/>
          </front>
        </reference>
        <reference anchor="OMAP" target="http://www.oatc.us/Standards/Download.aspx" quoteTitle="true" derivedAnchor="OMAP">
          <front>
            <title>Online Multimedia Authorization Protocol: An Industry Standard for Authorized Access to Internet Multimedia Resources</title>
            <date year="2012" month="April"/>
          </front>
        </reference>
        <reference anchor="OpenID.Messages" target="http://openid.net/specs/ openid-connect-messages-1_0.html" quoteTitle="true" derivedAnchor="OpenID.Messages">
          <front>
            <title>OpenID Connect Messages 1.0</title>
            <date year="2012" month="June"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="acknowledgements" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">謝辞</name>
      <t indent="0" pn="section-appendix.a-1">以下の人々がこの文書の初期バージョンに貢献しました：Blaine Cook（BT）、Brian Eaton（Google）、Yaron Y. Goland（Microsoft）、Brent Goldman（Facebook）、Raffi Krikorian（Twitter）、Luke Shepard（Facebook）、およびAllen Tom（Yahoo！）。 内容と概念は、OAuthコミュニティ、Webリソース認可プロファイル（WRAP）コミュニティ、およびOAuthワーキンググループの製品です。 David Recordonは、OAuth 2.0 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>に進化した仕様書の初期草案に基づいて、この仕様書の初期バージョンを作成しました。Michael B. Jonesは、Davidの草案の一部を使用して、この仕様書の最初のバージョン（00）を作成し、その後のすべてのバージョンを編集しました。</t>
      <t indent="0" pn="section-appendix.a-2">OAuthワーキンググループには、Michael Adams、Amanda Anganes、Andrew Arnott、Derek Atkins、Dirk Balfanz、John Bradley、Brian Campbell、Francisco Corella、Leah Culver、Bill de hOra、Breno de Medeiros、Brian Ellin、Stephen Farrell、Igor Faynberg、George Fletcher、Tim Freeman、Evan Gilbert、Yaron Y. Goland、Eran Hammer、Thomas Hardjono、Dick Hardt、Justin Hart、Phil Hunt、John Kemp、Chasen Le Hara、Barry Leiba、Amos Jeffries、Michael B. Jones、Torsten Lodderstedt、Paul Madsen、Eve Maler、James Manger、Laurence Miao、William J. Mills、Chuck Mortimore、Anthony Nadalin、Axel Nennker、Mark Nottingham、David Recordon、Julian Reschke、Rob Richards、Justin Richer、Peter Saint-Andre、Nat Sakimura、Rob Sayre、Marius Scurtescu、Naitik Shah、Justin Smith、Christian Stuebner、Jeremy Suriel、Doug Tangren、Paul Tarjan、Hannes Tschofenig、Franklin Tse、Sean Turner、Paul Walker、Shane Weeden、Skylar Woodward、およびZachary Zeltsanを含む、非常に活発な貢献者が数十人います。</t>
    </section>
  </back>
</rfc>
