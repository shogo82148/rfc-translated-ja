<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" docName="draft-ietf-oauth-v2-bearer-23" indexInclude="true" number="6750" symRefs="true" tocDepth="3" tocInclude="true" xml:lang="en">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-oauth-v2-bearer-23" rel="prev"/>
<link href="https://dx.doi.org/10.17487/rfc6750" rel="alternate"/>
  <front>
    <title>The OAuth 2.0 Authorization Framework: Bearer Token Usage</title>
    <seriesInfo name="RFC" value="6750" stream="IETF"/>
    <date year="2012" month="October"/>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">この仕様書は、HTTPリクエストでBearerトークンを使用してOAuth 2.0で保護されたリソースにアクセスする方法を説明しています。Bearerトークンを保持している任意の当事者は、暗号鍵の所有を証明する必要なく、関連するリソースにアクセスできます。誤用を防ぐために、Bearerトークンはストレージと転送中の漏洩から保護する必要があります。</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">このメモのステータス</name>
        <t indent="0" pn="section-boilerplate.1.1">これはインターネット標準トラック文書です。</t>
<t indent="0" pn="section-boilerplate.1.2">この文書は、Internet Engineering Task Force（IETF）の製品です。IETFコミュニティの合意を表しています。公開レビューを受け、Internet Engineering Steering Group（IESG）によって公開承認されました。インターネット標準に関する詳細は、RFC 5741のセクション2にあります。</t>
        <t indent="0" pn="section-boilerplate.1.3">この文書の現在のステータス、正誤表、およびフィードバックの提供方法に関する情報については、http://www.rfc-editor.org/info/rfc6750 を参照してください。</t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">Copyright (c) 2012 IETF Trust and the persons identified as the
document authors.  All rights reserved.</t>
        <t indent="0" pn="section-boilerplate.2-2">この文書はBCP 78およびIETFドキュメントに関するIETF Trustの法的規定（http://trustee.ietf.org/license-info）に従う必要があります。この文書の発行日に有効なこれらの文書を注意深く確認して、この文書に関するあなたの権利と制限について説明しています。この文書から抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているように、Simplified BSD Licenseのテキストを含める必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます。</t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">目次</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.1.2">
            <li pn="section-toc.1-1.1.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1.1"><xref derivedContent="1.1" format="counter" sectionFormat="of" target="section-1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-notational-conventions">Notational Conventions</xref></t>
            </li>
            <li pn="section-toc.1-1.1.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.2.1"><xref derivedContent="1.2" format="counter" sectionFormat="of" target="section-1.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-terminology">Terminology</xref></t>
            </li>
            <li pn="section-toc.1-1.1.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.3.1"><xref derivedContent="1.3" format="counter" sectionFormat="of" target="section-1.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-overview">Overview</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authenticated-requests">Authenticated Requests</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.2.2">
            <li pn="section-toc.1-1.2.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1.1"><xref derivedContent="2.1" format="counter" sectionFormat="of" target="section-2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-authorization-request-header-field">Authorization Request Header Field</xref></t>
            </li>
            <li pn="section-toc.1-1.2.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.2.1"><xref derivedContent="2.2" format="counter" sectionFormat="of" target="section-2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-form-encoded-body-parameter">Form-Encoded Body Parameter</xref></t>
            </li>
            <li pn="section-toc.1-1.2.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.3.1"><xref derivedContent="2.3" format="counter" sectionFormat="of" target="section-2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-uri-query-parameter">URI Query Parameter</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-www-authenticate-response-header-field">The WWW-Authenticate Response Header Field</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.3.2">
            <li pn="section-toc.1-1.3.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1.1"><xref derivedContent="3.1" format="counter" sectionFormat="of" target="section-3.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-error-codes">Error Codes</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-example-access-token-response">Example Access Token Response</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
            <li pn="section-toc.1-1.5.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-threats">Security Threats</xref></t>
            </li>
            <li pn="section-toc.1-1.5.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-threat-mitigation">Threat Mitigation</xref></t>
            </li>
            <li pn="section-toc.1-1.5.3">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.5.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-summary-of-recommendations">Summary of Recommendations</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2">
            <li pn="section-toc.1-1.6.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1"><xref derivedContent="6.1" format="counter" sectionFormat="of" target="section-6.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-access-token-type-registration">OAuth Access Token Type Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.1.2">
              <li pn="section-toc.1-1.6.1.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.1.1.1"><xref derivedContent="6.1.1" format="counter" sectionFormat="of" target="section-6.1.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;bearer&quot;-oauth-access-token-type">The &quot;Bearer&quot; OAuth Access Token Type</xref></t>
              </li>
              </ul>
            </li>
            <li pn="section-toc.1-1.6.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1"><xref derivedContent="6.2" format="counter" sectionFormat="of" target="section-6.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-oauth-extensions-error-registration">OAuth Extensions Error Registration</xref></t>
              <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.6.2.2">
              <li pn="section-toc.1-1.6.2.1">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.1.1"><xref derivedContent="6.2.1" format="counter" sectionFormat="of" target="section-6.2.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_request&quot;-error-value">The &quot;invalid_request&quot; Error Value</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.2">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.2.1"><xref derivedContent="6.2.2" format="counter" sectionFormat="of" target="section-6.2.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;invalid_token&quot;-error-value">The &quot;invalid_token&quot; Error Value</xref></t>
              </li>
              <li pn="section-toc.1-1.6.2.3">
                <t indent="0" keepWithNext="true" pn="section-toc.1-1.6.2.3.1"><xref derivedContent="6.2.3" format="counter" sectionFormat="of" target="section-6.2.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-the-&quot;insufficient_scope&quot;-error-value">The &quot;insufficient_scope&quot; Error Value</xref></t>
              </li>
              </ul>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
            <li pn="section-toc.1-1.7.1">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
            </li>
            <li pn="section-toc.1-1.7.2">
              <t indent="0" keepWithNext="true" pn="section-toc.1-1.7.2.1"><xref derivedContent="7.2" format="counter" sectionFormat="of" target="section-7.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
            </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.A">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.A.1"><xref derivedContent="A" format="counter" sectionFormat="of" target="section-appendix.a"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgements">Acknowledgements</xref></t>
          </li>
      </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">OAuthは、リソースオーナーの資格情報を直接使用する代わりに、クライアントがアクセストークンを取得することで保護されたリソースにアクセスできるようにします。アクセストークンは、「クライアントに発行されたアクセス承認を表す文字列」として、『OAuth 2.0 Authorization Framework』<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されています。</t>
      <t indent="0" pn="section-1-2">承認サーバーによってクライアントに発行されたトークンを使用して、クライアントはリソースサーバーによってホストされる保護されたリソースにアクセスします。この仕様書では、OAuthアクセストークンがベアラトークンである場合に保護されたリソースリクエストを行う方法について説明します。</t>
      <t indent="0" pn="section-1-3">この仕様書では、HTTP/1.1を介してBearerトークンを使用してTLS（Transport Layer Security）<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>を使用して保護されたリソースにアクセスする方法を定義しています。この仕様書ではTLSの実装と使用が必須であり、他の仕様書は、他のプロトコルで使用するためにこの仕様書を拡張することができます。この仕様書は、OAuth 2.0認可フローからのアクセストークンを使用してOAuth保護されたリソースにアクセスするために設計されていますが、実際には、任意のソースからのBearerトークンを使用して、それらのBearerトークンで保護された任意のリソースにアクセスするための一般的なHTTP認証方法を定義しています。Bearer認証スキームは、WWW-AuthenticateおよびAuthorization HTTPヘッダーを使用したサーバー認証に主に使用されることを意図していますが、プロキシ認証に使用することを妨げるものではありません。</t>
      <t indent="0" pn="section-1-4"></t>
      <section anchor="notational-conventions" numbered="true" removeInRFC="false" toc="include" pn="section-1.1">
        <name slugifiedName="name-notational-conventions">Notational Conventions</name>
        <t indent="0" pn="section-1.1-1">キーワード「<bcp14>しなければなりません（MUST）</bcp14>」、「<bcp14>してはなりません（MUST NOT）</bcp14>」、
「<bcp14>要求されています（REQUIRED）</bcp14>」、
「<bcp14>することになります（SHALL）</bcp14>」、「<bcp14>することはありません（SHALL NOT）</bcp14>」、
「<bcp14>すべきです（SHOULD）</bcp14>」、「<bcp14>すべきではありません（SHOULD NOT）</bcp14>」、
「<bcp14>推奨されます（RECOMMENDED）</bcp14>」、「<bcp14>推奨されません（NOT RECOMMENDED）</bcp14>」、
「<bcp14>してもよいです（MAY）</bcp14>」、「<bcp14>選択できます（OPTIONAL）</bcp14>」は、
<xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/>に記載されているとおりに解釈されるものとします。</t>
        <t indent="0" pn="section-1.1-2">このドキュメントでは、<xref target="RFC5234" format="default" sectionFormat="of" derivedContent="RFC5234"/>の拡張バッカス・ナウア形式（ABNF）表記法を使用しています。さらに、以下の規則が含まれています。
HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>: auth-paramおよびauth-scheme。「Uniform Resource Identifier（URI）：Generic Syntax」<xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>：URI-reference。</t>
        <t indent="0" pn="section-1.1-3">特に注記がない限り、すべてのプロトコルパラメータ名および値は大文字と小文字を区別します。</t>
      </section>
      <section anchor="terminology" numbered="true" removeInRFC="false" toc="include" pn="section-1.2">
        <name slugifiedName="name-terminology">用語</name>
        <t indent="0" pn="section-1.2-1">Bearer token
   セキュリティトークンで、保持している当事者（「Bearer」）がトークンを使用できるという特性を持ちます。Bearerトークンを使用する場合、Bearerは暗号鍵の所有を証明する必要はありません（所有の証明）。</t>
        <t indent="0" pn="section-1.2-2">その他の用語は、『OAuth 2.0 Authorization Framework』<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で定義されているものと同じ意味で使用されます。</t>
      </section>
      <section anchor="overview" numbered="true" removeInRFC="false" toc="include" pn="section-1.3">
        <name slugifiedName="name-overview">Overview</name>
        <t indent="0" pn="section-1.3-1">OAuthは、クライアントがリソースオーナーの代理で保護されたリソースにアクセスするための方法を提供します。一般的な場合では、クライアントが保護されたリソースにアクセスする前に、まずリソースオーナーから承認許可を取得し、その承認許可をアクセストークンに交換する必要があります。アクセストークンは、承認許可によって付与されたスコープ、期間、およびその他の属性を表します。クライアントは、アクセストークンをリソースサーバーに提示することで保護されたリソースにアクセスします。一部の場合では、クライアントは、リソースオーナーから承認許可を取得することなく、直接認証サーバーに自分自身の資格情報を提示してアクセストークンを取得することができます。</t>
        <t indent="0" pn="section-1.3-2">アクセストークンは、リソースサーバーが理解できる単一のトークンに置き換えることで、異なる認証構造（例：ユーザー名とパスワード、アサーション）を抽象化します。この抽象化により、短時間有効なアクセストークンを発行することができ、リソースサーバーが理解する必要がある認証スキームの範囲を広げる必要がなくなります。</t>
        <t indent="0" pn="section-1.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  +--------+                               +---------------+
  |        |--(A)- Authorization Request ->|   Resource    |
  |        |                               |     Owner     |
  |        |<-(B)-- Authorization Grant ---|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(C)-- Authorization Grant -->| Authorization |
  | Client |                               |     Server    |
  |        |<-(D)----- Access Token -------|               |
  |        |                               +---------------+
  |        |
  |        |                               +---------------+
  |        |--(E)----- Access Token ------>|    Resource   |
  |        |                               |     Server    |
  |        |<-(F)--- Protected Resource ---|               |
  +--------+                               +---------------+
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-4"><artwork name="" type="" align="left" alt=""><![CDATA[
                  図1: 抽象プロトコルフロー
]]></artwork>
</t>
        <t indent="0" pn="section-1.3-5">図1に示す抽象的なOAuth 2.0フローは、クライアント、リソースオーナー、認可サーバー、およびリソースサーバー（<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>で説明されている）の間の相互作用を説明しています。このドキュメントでは、次の2つのステップが指定されています。</t>
        <t indent="0" pn="section-1.3-6">(E) クライアントは、アクセストークンを提示して認証し、リソースサーバーから保護されたリソースを要求します。</t>
        <t indent="0" pn="section-1.3-7">(F) リソースサーバーはアクセストークンを検証し、有効であればリクエストを処理します。</t>
        <t indent="0" pn="section-1.3-8">このドキュメントは、ステップ(D)で返されるアクセストークンに対して意味的な要件を課します。</t>
      </section>
    </section>
    <section anchor="authenticated-requests" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-authenticated-requests">Authenticated Requests</name>
      <t indent="0" pn="section-2-1">このセクションでは、リソースサーバーに対するリソースリクエストでBearerアクセストークンを送信する3つの方法を定義しています。クライアントは、各リクエストでトークンを転送するために複数の方法を使用<bcp14>してはなりません（MUST NOT）</bcp14>。</t>
      <section anchor="authorization-request-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-2.1">
        <name slugifiedName="name-authorization-request-header-field">Authorization Request Header Field</name>
        <t indent="0" pn="section-2.1-1">HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>で定義された「Authorization」リクエストヘッダーフィールドにアクセストークンを送信する場合、クライアントは「Bearer」認証スキームを使用してアクセストークンを送信します。</t>
        <t indent="0" pn="section-2.1-2">例:</t>
        <t indent="0" pn="section-2.1-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource HTTP/1.1
  Host: server.example.com
  Authorization: Bearer mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-4">このスキームの「Authorization」ヘッダーフィールドの構文は、<xref target="RFC2617" section="2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-2" derivedContent="RFC2617"/>で定義されたBasicスキームの使用方法にしたがいます。Basicと同様に、<xref target="RFC2617" section="1.2" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc2617#section-1.2" derivedContent="RFC2617"/>で定義された一般的な構文には準拠していませんが、HTTP 1.1で開発されている一般的な認証フレームワークには互換性があります。ただし、既存の展開を反映するために、そこで概説されている推奨される方法にはしたがいません。Bearer資格情報の構文は次のとおりです。</t>
        <t indent="0" pn="section-2.1-5"><artwork name="" type="" align="left" alt=""><![CDATA[
  b64token    = 1*( ALPHA / DIGIT /
                    "-" / "." / "_" / "~" / "+" / "/" ) *"="
  credentials = "Bearer" 1*SP b64token
]]></artwork>
</t>
        <t indent="0" pn="section-2.1-6">クライアントは、Bearerトークンを使用して認証されたリクエストを「Authorization」リクエストヘッダーフィールドを使用して送信<bcp14>すべきです（SHOULD）</bcp14>（HTTP認証スキーム「Bearer」を使用）。リソースサーバーは、この方法をサポート<bcp14>しなければなりません（MUST）</bcp14>。 </t>
      </section>
      <section anchor="form-encoded-body-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.2">
        <name slugifiedName="name-form-encoded-body-parameter">フォームエンコードされたボディパラメータ</name>
        <t indent="0" pn="section-2.2-1">HTTPリクエストエンティティボディにアクセストークンを送信する場合、クライアントは「access_token」パラメータを使用してリクエストボディにアクセストークンを追加します。以下の条件がすべて満たされない限り、クライアントはこの方法を使用しては<bcp14>なりません（MUST NOT）</bcp14>。</t>
       <t indent="0" pn="section-2.2-2">o  HTTPリクエストエンティティヘッダーには、「Content-Type」ヘッダーフィールドが含まれ、値が「application/x-www-form-urlencoded」に設定されている。</t>
        <t indent="0" pn="section-2.2-3">o  エンティティボディは、HTML 4.01 <xref target="W3C.REC-html401-19991224" format="default" sectionFormat="of" derivedContent="W3C.REC-html401-19991224"/>で定義された「application/x-www-form-urlencoded」コンテンツタイプのエンコーディング要件にしたがう。</t>
        <t indent="0" pn="section-2.2-4">o  HTTPリクエストエンティティボディは、単一パートです。</t>
        <t indent="0" pn="section-2.2-5">o  エンティティボディにエンコードされるコンテンツは、ASCII <xref target="USASCII" format="default" sectionFormat="of" derivedContent="USASCII"/> 文字のみで構成されている<bcp14>必要があります（MUST）</bcp14>。</t>
        <t indent="0" pn="section-2.2-6">o  HTTPリクエストメソッドは、リクエストボディに定義された意味があるものである必要があります。特に、「GET」メソッドは使用しては<bcp14>なりません（MUST NOT）</bcp14>。</t>
        <t indent="0" pn="section-2.2-7">エンティティボディには、他のリクエスト固有のパラメータを含めることができます。この場合、「access_token」パラメータは、リクエスト固有のパラメータと適切に区別するために、「&amp;」文字（ASCIIコード38）を使用して分離<bcp14>してもよいです（MAY）</bcp14>。ただし、「access_token」パラメータは、リクエスト固有のパラメータと適切に区別するために、「&amp;」文字（ASCIIコード38）を使用して分離<bcp14>しなければなりません（MUST）</bcp14>。</t>
        <t indent="0" pn="section-2.2-8">たとえば、クライアントは、トランスポート層セキュリティを使用して、以下のHTTPリクエストを行います。</t>
        <t indent="0" pn="section-2.2-9"><artwork name="" type="" align="left" alt=""><![CDATA[
  POST /resource HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-10"><artwork name="" type="" align="left" alt=""><![CDATA[
  access_token=mF_9.B5f-4.1JqM
]]></artwork>
</t>
        <t indent="0" pn="section-2.2-11">「application/x-www-form-urlencoded」メソッドは、参加するブラウザが「Authorization」リクエストヘッダーフィールドにアクセスできないアプリケーションコンテキスト以外では、使用<bcp14>すべきではありません（SHOULD NOT）</bcp14>。リソースサーバーは、このメソッドをサポート<bcp14>してもよいです（MAY）</bcp14>。</t>
      </section>
      <section anchor="uri-query-parameter" numbered="true" removeInRFC="false" toc="include" pn="section-2.3">
        <name slugifiedName="name-uri-query-parameter">URIクエリパラメータ</name>
        <t indent="0" pn="section-2.3-1">アクセストークンをHTTPリクエストURIで送信する場合、クライアントは、「Uniform Resource Identifier (URI): Generic Syntax」<xref target="RFC3986" format="default" sectionFormat="of" derivedContent="RFC3986"/>で定義されたリクエストURIクエリコンポーネントに「access_token」パラメータを使用してアクセストークンを追加します。</t>
        <t indent="0" pn="section-2.3-2">たとえば、クライアントは、トランスポート層セキュリティを使用して、以下のHTTPリクエストを行います。</t>
        <t indent="0" pn="section-2.3-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  GET /resource?access_token=mF_9.B5f-4.1JqM HTTP/1.1
  Host: server.example.com
]]></artwork>
</t>
        <t indent="0" pn="section-2.3-4">HTTPリクエストURIクエリには、他のリクエスト固有のパラメータを含めることができます。この場合、「access_token」パラメータは、リクエスト固有のパラメータと適切に区別するために、「&amp;」文字（ASCIIコード38）を使用して分離<bcp14>しなければなりません（MUST）</bcp14>。</t>
        <t indent="0" pn="section-2.3-5">例:</t>
        <t indent="0" pn="section-2.3-6"> https://server.example.com/resource?access_token=mF_9.B5f-4.1JqM&amp;p=q</t>
        <t indent="0" pn="section-2.3-7">URIクエリパラメータメソッドを使用するクライアントは、「no-store」オプションを含むCache-Controlヘッダーを送信<bcp14>すべきです（SHOULD）</bcp14>。これらのリクエストに対するサーバーの成功（2XXステータス）レスポンスは、「private」オプションを含むCache-Controlヘッダーを含む<bcp14>べきです（SHOULD）</bcp14>。</t>
        <t indent="0" pn="section-2.3-8">URIメソッドに関連するセキュリティ上の脆弱性（セクション5を参照）により、アクセストークンを含むURLがログに記録される可能性が高いため、アクセストークンを「Authorization」リクエストヘッダーフィールドまたはHTTPリクエストエンティティボディに輸送することが不可能な場合を除き、このメソッドは使用<bcp14>すべきではありません（SHOULD NOT）</bcp14>。リソースサーバーは、このメソッドをサポート<bcp14>してもよいです（MAY）</bcp14>。</t>
        <t indent="0" pn="section-2.3-9">このメソッドは、現在の使用状況を文書化するために含まれていますが、その使用は推奨されていません。これは、そのセキュリティ上の欠陥（セクション5を参照）と、URI名前空間のベストプラクティスに反する予約済みのクエリパラメータ名を使用するためです。「World Wide Webのアーキテクチャ、第1巻」<xref target="W3C.REC-webarch-20041215" format="default" sectionFormat="of" derivedContent="W3C.REC-webarch-20041215"/>によると、URI名前空間のベストプラクティスに反するためです。</t>
      </section>
    </section>
    <section anchor="the-www-authenticate-response-header-field" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-the-www-authenticate-response-header-field">WWW-Authenticateレスポンスヘッダーフィールド</name>
      <t indent="0" pn="section-3-1">保護されたリソースリクエストに認証資格情報が含まれていない場合、または保護されたリソースへのアクセスを可能にするアクセストークンが含まれていない場合、リソースサーバーはHTTP「WWW-Authenticate」レスポンスヘッダーフィールドを含む。また、他の条件に対するレスポンスとしても含ん<bcp14>でもよいです（MAY）</bcp14>。「WWW-Authenticate」ヘッダーフィールドは、HTTP/1.1<xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>で定義されたフレームワークを使用します。</t>
      <t indent="0" pn="section-3-2">この仕様で定義されたすべてのチャレンジは、認証スキーム値「Bearer」を使用<bcp14>しなければなりません（MUST）</bcp14>。このスキームは、1つ以上のauth-param値に続く<bcp14>必要があります（MUST）</bcp14>。この仕様で使用されるまたは定義されるauth-param属性は、次のとおりです。他のauth-param属性を使用<bcp14>してもよいです（MAY）</bcp14>。</t>
      <t indent="0" pn="section-3-3">HTTP/1.1 <xref target="RFC2617" format="default" sectionFormat="of" derivedContent="RFC2617"/>で説明されている方法で、保護の範囲を示すために「realm」属性を含めることができます。「realm」属性は複数回出現<bcp14>してはなりません（MUST NOT）</bcp14>。</t>
      <t indent="0" pn="section-3-4">「scope」という属性は、<xref target="RFC6749" section="3.3" format="default" sectionFormat="of" derivedLink="https://www.rfc-editor.org/rfc/rfc6749#section-3.3" derivedContent="RFC6749"/>で定義されています。「scope」という属性は、アクセスされるリソースにアクセスするために必要なアクセストークンの大文字と小文字を区別する「scope」値のスペース区切りリストです。「scope」値は実装によって定義されます。これらのための中央集権的なレジストリはありません。許可される値は認可サーバーによって定義されます。「scope」値の順序は重要ではありません。</t>
      <t indent="0" pn="section-3-5">保護されたリソースを利用するために十分なアクセススコープを持つ新しいアクセストークンを要求する場合、「scope」値を使用します。 「scope」属性の使用は<bcp14>選択できます（OPTIONAL）</bcp14>。「scope」属性は複数回出現<bcp14>してはなりません（MUST NOT）</bcp14>。 「scope」値はプログラムで使用することを意図しており、エンドユーザーに表示することはできません。</t>
      <t indent="0" pn="section-3-6">以下に、OpenID Connect <xref target="OpenID.Messages" format="default" sectionFormat="of" derivedContent="OpenID.Messages"/>とオンラインマルチメディア認証プロトコル（Online Multimedia Authorization Protocol）<xref target="OMAP" format="default" sectionFormat="of" derivedContent="OMAP"/>OAuth 2.0の使用例から取得した2つのスコープ値の例をしめします。</t>
      <t indent="0" pn="section-3-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  scope="openid profile email"
  scope="urn:example:channel=HBO&urn:example:rating=G,PG-13"
]]></artwork>
</t>
      <t indent="0" pn="section-3-8">保護されたリソースのリクエストにアクセストークンが含まれていて、認証に失敗した場合、リソースサーバーは「error」属性を含めて、アクセスリクエストが拒否された理由をクライアントに提供<bcp14>すべきです（SHOULD）</bcp14>。パラメータの値は3.1節で説明されています。さらに、リソースサーバーは、開発者に表示されない人間が読める説明を提供するために、「error_description」属性を含め<bcp14>てもよいです（MAY）</bcp14>。また、「error_uri」属性を含めて、エラーを説明する人間が読めるWebページを識別する絶対URIを指定<bcp14>してもよいです（MAY）</bcp14>。 「error」、「error_description」、および「error_uri」属性は、複数回出現<bcp14>してはなりません（MUST NOT）</bcp14>。</t>
      <t indent="0" pn="section-3-9">「scope」属性の値（<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>の付録A.4で指定されている）は、スコープ値を表すための%x21 / %x23-5B / %x5D-7Eのセットと、スコープ値の区切りに使用される%x20のセット以外の文字を含んでは<bcp14>いけません（MUST NOT）</bcp14>。 「error」と「error_description」属性の値（<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>の付録A.7およびA.8で指定されている）は、%x20-21 / %x23-5B / %x5D-7Eのセット以外の文字を含んでは<bcp14>いけません（MUST NOT）</bcp14>。 「error_uri」属性の値（<xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>の付録A.9で指定されている）は、URI参照構文に準拠する必要があり、したがって、%x21 / %x23-5B / %x5D-7Eのセット以外の文字を含んでは<bcp14>いけません(MUST NOT)</bcp14>。</t>
      <t indent="0" pn="section-3-10">たとえば、保護されたリソースに対して認証なしでリクエストした場合の応答例です：</t>
      <t indent="0" pn="section-3-11"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      <t indent="0" pn="section-3-12">保護されたリソースに対して期限切れのアクセストークンを使用を試みた場合の応答例です：</t>
      <t indent="0" pn="section-3-13"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example",
                    error="invalid_token",
                    error_description="The access token expired"
]]></artwork>
</t>
      <section anchor="error-codes" numbered="true" removeInRFC="false" toc="include" pn="section-3.1">
        <name slugifiedName="name-error-codes">Error Codes</name>
        <t indent="0" pn="section-3.1-1">When a request fails, the resource server responds using the
appropriate HTTP status code (typically, 400, 401, 403, or 405) and
includes one of the following error codes in the response:</t>
        <t indent="0" pn="section-3.1-2">invalid_request
      The request is missing a required parameter, includes an
      unsupported parameter or parameter value, repeats the same
      parameter, uses more than one method for including an access
      token, or is otherwise malformed.  The resource server <bcp14>SHOULD</bcp14>
      respond with the HTTP 400 (Bad Request) status code.</t>
        <t indent="0" pn="section-3.1-3">invalid_token
      The access token provided is expired, revoked, malformed, or
      invalid for other reasons.  The resource <bcp14>SHOULD</bcp14> respond with
      the HTTP 401 (Unauthorized) status code.  The client <bcp14>MAY</bcp14>
      request a new access token and retry the protected resource
      request.</t>
        <t indent="0" pn="section-3.1-4">insufficient_scope
      The request requires higher privileges than provided by the
      access token.  The resource server <bcp14>SHOULD</bcp14> respond with the HTTP
      403 (Forbidden) status code and <bcp14>MAY</bcp14> include the &quot;scope&quot;
      attribute with the scope necessary to access the protected
      resource.</t>
        <t indent="0" pn="section-3.1-5">If the request lacks any authentication information (e.g., the client
was unaware that authentication is necessary or attempted using an
unsupported authentication method), the resource server <bcp14>SHOULD NOT</bcp14>
include an error code or other error information.</t>
        <t indent="0" pn="section-3.1-6">For example:</t>
        <t indent="0" pn="section-3.1-7"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: Bearer realm="example"
]]></artwork>
</t>
      </section>
    </section>
    <section anchor="example-access-token-response" numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-example-access-token-response">Example Access Token Response</name>
      <t indent="0" pn="section-4-1">Typically, a bearer token is returned to the client as part of an
OAuth 2.0 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/> access token response.  An example of such a
response is:</t>
      <t indent="0" pn="section-4-2"><artwork name="" type="" align="left" alt=""><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json;charset=UTF-8
  Cache-Control: no-store
  Pragma: no-cache
]]></artwork>
</t>
      <t indent="0" pn="section-4-3"><artwork name="" type="" align="left" alt=""><![CDATA[
  {
    "access_token":"mF_9.B5f-4.1JqM",
    "token_type":"Bearer",
    "expires_in":3600,
    "refresh_token":"tGzv3JOkF0XG5Qx2TlKWIA"
  }
]]></artwork>
</t>
    </section>
    <section anchor="security-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-5-1">This section describes the relevant security threats regarding token
handling when using bearer tokens and describes how to mitigate these
threats.</t>
      <section anchor="security-threats" numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-security-threats">Security Threats</name>
        <t indent="0" pn="section-5.1-1">The following list presents several common threats against protocols
utilizing some form of tokens.  This list of threats is based on NIST
Special Publication 800-63 <xref target="NIST800-63" format="default" sectionFormat="of" derivedContent="NIST800-63"/>.  Since this document builds
on the OAuth 2.0 Authorization specification <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>, we exclude a
discussion of threats that are described there or in related
documents.</t>
        <t indent="0" pn="section-5.1-2">Token manufacture/modification:  An attacker may generate a bogus
   token or modify the token contents (such as the authentication or
   attribute statements) of an existing token, causing the resource
   server to grant inappropriate access to the client.  For example,
   an attacker may modify the token to extend the validity period; a
   malicious client may modify the assertion to gain access to
   information that they should not be able to view.</t>
        <t indent="0" pn="section-5.1-3">Token disclosure:  Tokens may contain authentication and attribute
   statements that include sensitive information.</t>
        <t indent="0" pn="section-5.1-4">Token redirect:  An attacker uses a token generated for consumption
   by one resource server to gain access to a different resource
   server that mistakenly believes the token to be for it.</t>
        <t indent="0" pn="section-5.1-5">Token replay:  An attacker attempts to use a token that has already
   been used with that resource server in the past.</t>
      </section>
      <section anchor="threat-mitigation" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-threat-mitigation">Threat Mitigation</name>
        <t indent="0" pn="section-5.2-1">A large range of threats can be mitigated by protecting the contents
of the token by using a digital signature or a Message Authentication
Code (MAC).  Alternatively, a bearer token can contain a reference to
authorization information, rather than encoding the information
directly.  Such references <bcp14>MUST</bcp14> be infeasible for an attacker to
guess; using a reference may require an extra interaction between a
server and the token issuer to resolve the reference to the
authorization information.  The mechanics of such an interaction are
not defined by this specification.</t>
        <t indent="0" pn="section-5.2-2">This document does not specify the encoding or the contents of the
token; hence, detailed recommendations about the means of
guaranteeing token integrity protection are outside the scope of this
document.  The token integrity protection <bcp14>MUST</bcp14> be sufficient to
prevent the token from being modified.</t>
        <t indent="0" pn="section-5.2-3">To deal with token redirect, it is important for the authorization
server to include the identity of the intended recipients (the
audience), typically a single resource server (or a list of resource
servers), in the token.  Restricting the use of the token to a
specific scope is also <bcp14>RECOMMENDED</bcp14>.</t>
        <t indent="0" pn="section-5.2-4">The authorization server <bcp14>MUST</bcp14> implement TLS.  Which version(s) ought
to be implemented will vary over time and will depend on the
widespread deployment and known security vulnerabilities at the time
of implementation.  At the time of this writing, TLS version 1.2
<xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/> is the most recent version, but it has very limited actual
deployment and might not be readily available in implementation
toolkits.  TLS version 1.0 <xref target="RFC2246" format="default" sectionFormat="of" derivedContent="RFC2246"/> is the most widely deployed
version and will give the broadest interoperability.</t>
        <t indent="0" pn="section-5.2-5">To protect against token disclosure, confidentiality protection <bcp14>MUST</bcp14>
be applied using TLS <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/> with a ciphersuite that provides
confidentiality and integrity protection.  This requires that the
communication interaction between the client and the authorization
server, as well as the interaction between the client and the
resource server, utilize confidentiality and integrity protection.
Since TLS is mandatory to implement and to use with this
specification, it is the preferred approach for preventing token</t>
        <t indent="0" pn="section-5.2-6">disclosure via the communication channel.  For those cases where the
client is prevented from observing the contents of the token, token
encryption <bcp14>MUST</bcp14> be applied in addition to the usage of TLS
protection.  As a further defense against token disclosure, the
client <bcp14>MUST</bcp14> validate the TLS certificate chain when making requests
to protected resources, including checking the Certificate Revocation
List (CRL) <xref target="RFC5280" format="default" sectionFormat="of" derivedContent="RFC5280"/>.</t>
        <t indent="0" pn="section-5.2-7">Cookies are typically transmitted in the clear.  Thus, any
information contained in them is at risk of disclosure.  Therefore,
bearer tokens <bcp14>MUST NOT</bcp14> be stored in cookies that can be sent in the
clear.  See &quot;HTTP State Management Mechanism&quot; <xref target="RFC6265" format="default" sectionFormat="of" derivedContent="RFC6265"/> for security
considerations about cookies.</t>
        <t indent="0" pn="section-5.2-8">In some deployments, including those utilizing load balancers, the
TLS connection to the resource server terminates prior to the actual
server that provides the resource.  This could leave the token
unprotected between the front-end server where the TLS connection
terminates and the back-end server that provides the resource.  In
such deployments, sufficient measures <bcp14>MUST</bcp14> be employed to ensure
confidentiality of the token between the front-end and back-end
servers; encryption of the token is one such possible measure.</t>
        <t indent="0" pn="section-5.2-9">To deal with token capture and replay, the following recommendations
are made: First, the lifetime of the token <bcp14>MUST</bcp14> be limited; one means
of achieving this is by putting a validity time field inside the
protected part of the token.  Note that using short-lived (one hour
or less) tokens reduces the impact of them being leaked.  Second,
confidentiality protection of the exchanges between the client and
the authorization server and between the client and the resource
server <bcp14>MUST</bcp14> be applied.  As a consequence, no eavesdropper along the
communication path is able to observe the token exchange.
Consequently, such an on-path adversary cannot replay the token.
Furthermore, when presenting the token to a resource server, the
client <bcp14>MUST</bcp14> verify the identity of that resource server, as per
Section 3.1 of &quot;HTTP Over TLS&quot; <xref target="RFC2818" format="default" sectionFormat="of" derivedContent="RFC2818"/>.  Note that the client <bcp14>MUST</bcp14>
validate the TLS certificate chain when making these requests to
protected resources.  Presenting the token to an unauthenticated and
unauthorized resource server or failing to validate the certificate
chain will allow adversaries to steal the token and gain unauthorized
access to protected resources.</t>
      </section>
      <section anchor="summary-of-recommendations" numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-summary-of-recommendations">Summary of Recommendations</name>
        <t indent="0" pn="section-5.3-1">Safeguard bearer tokens:  Client implementations <bcp14>MUST</bcp14> ensure that
   bearer tokens are not leaked to unintended parties, as they will
   be able to use them to gain access to protected resources.  This
   is the primary security consideration when using bearer tokens and
   underlies all the more specific recommendations that follow.</t>
        <t indent="0" pn="section-5.3-2">Validate TLS certificate chains:  The client <bcp14>MUST</bcp14> validate the TLS
   certificate chain when making requests to protected resources.
   Failing to do so may enable DNS hijacking attacks to steal the
   token and gain unintended access.</t>
        <t indent="0" pn="section-5.3-3">Always use TLS (https):  Clients <bcp14>MUST</bcp14> always use TLS <xref target="RFC5246" format="default" sectionFormat="of" derivedContent="RFC5246"/>
   (https) or equivalent transport security when making requests with
   bearer tokens.  Failing to do so exposes the token to numerous
   attacks that could give attackers unintended access.</t>
        <t indent="0" pn="section-5.3-4">Don't store bearer tokens in cookies:  Implementations <bcp14>MUST NOT</bcp14> store
   bearer tokens within cookies that can be sent in the clear (which
   is the default transmission mode for cookies).  Implementations
   that do store bearer tokens in cookies <bcp14>MUST</bcp14> take precautions
   against cross-site request forgery.</t>
        <t indent="0" pn="section-5.3-5">Issue short-lived bearer tokens:  Token servers <bcp14>SHOULD</bcp14> issue
   short-lived (one hour or less) bearer tokens, particularly when
   issuing tokens to clients that run within a web browser or other
   environments where information leakage may occur.  Using
   short-lived bearer tokens can reduce the impact of them being
   leaked.</t>
        <t indent="0" pn="section-5.3-6">Issue scoped bearer tokens:  Token servers <bcp14>SHOULD</bcp14> issue bearer tokens
   that contain an audience restriction, scoping their use to the
   intended relying party or set of relying parties.</t>
        <t indent="0" pn="section-5.3-7">Don't pass bearer tokens in page URLs:  Bearer tokens <bcp14>SHOULD NOT</bcp14> be
   passed in page URLs (for example, as query string parameters).
   Instead, bearer tokens <bcp14>SHOULD</bcp14> be passed in HTTP message headers or
   message bodies for which confidentiality measures are taken.
   Browsers, web servers, and other software may not adequately
   secure URLs in the browser history, web server logs, and other
   data structures.  If bearer tokens are passed in page URLs,
   attackers might be able to steal them from the history data, logs,
   or other unsecured locations.</t>
      </section>
    </section>
    <section anchor="iana-considerations" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <section anchor="oauth-access-token-type-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.1">
        <name slugifiedName="name-oauth-access-token-type-registration">OAuth Access Token Type Registration</name>
        <t indent="0" pn="section-6.1-1">This specification registers the following access token type in the
OAuth Access Token Types registry defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <section anchor="the-&quot;bearer&quot;-oauth-access-token-type" numbered="true" removeInRFC="false" toc="include" pn="section-6.1.1">
          <name slugifiedName="name-the-&quot;bearer&quot;-oauth-access-token-type">The &quot;Bearer&quot; OAuth Access Token Type</name>
          <t indent="0" pn="section-6.1.1-1">Type name:
   Bearer</t>
          <t indent="0" pn="section-6.1.1-2">Additional Token Endpoint Response Parameters:
   (none)</t>
          <t indent="0" pn="section-6.1.1-3">HTTP Authentication Scheme(s):
   Bearer</t>
          <t indent="0" pn="section-6.1.1-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.1.1-5">Specification document(s):
   RFC 6750</t>
        </section>
      </section>
      <section anchor="oauth-extensions-error-registration" numbered="true" removeInRFC="false" toc="include" pn="section-6.2">
        <name slugifiedName="name-oauth-extensions-error-registration">OAuth Extensions Error Registration</name>
        <t indent="0" pn="section-6.2-1">This specification registers the following error values in the OAuth
Extensions Error registry defined in <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.</t>
        <section anchor="the-&quot;invalid_request&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.1">
          <name slugifiedName="name-the-&quot;invalid_request&quot;-error-value">The &quot;invalid_request&quot; Error Value</name>
          <t indent="0" pn="section-6.2.1-1">Error name:
   invalid_request</t>
          <t indent="0" pn="section-6.2.1-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.1-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.1-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.1-5">Specification document(s):
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;invalid_token&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.2">
          <name slugifiedName="name-the-&quot;invalid_token&quot;-error-value">The &quot;invalid_token&quot; Error Value</name>
          <t indent="0" pn="section-6.2.2-1">Error name:
   invalid_token</t>
          <t indent="0" pn="section-6.2.2-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.2-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.2-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.2-5">Specification document(s):
   RFC 6750</t>
        </section>
        <section anchor="the-&quot;insufficient_scope&quot;-error-value" numbered="true" removeInRFC="false" toc="include" pn="section-6.2.3">
          <name slugifiedName="name-the-&quot;insufficient_scope&quot;-error-value">The &quot;insufficient_scope&quot; Error Value</name>
          <t indent="0" pn="section-6.2.3-1">Error name:
   insufficient_scope</t>
          <t indent="0" pn="section-6.2.3-2">Error usage location:
   Resource access error response</t>
          <t indent="0" pn="section-6.2.3-3">Related protocol extension:
   Bearer access token type</t>
          <t indent="0" pn="section-6.2.3-4">Change controller:
   IETF</t>
          <t indent="0" pn="section-6.2.3-5">Specification document(s):
   RFC 6750</t>
        </section>
      </section>
    </section>
  </middle>
  <back>
    <references pn="section-7">
      <name slugifiedName="name-references">References</name>
      <references pn="section-7.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <date year="1997" month="March"/>
          </front>
          <seriesInfo name="BCP">14</seriesInfo>
          <seriesInfo name="RFC">2119</seriesInfo>
        </reference>
        <reference anchor="RFC2246" quoteTitle="true" derivedAnchor="RFC2246">
          <front>
            <title>The TLS Protocol Version 1.0</title>
            <date year="1999" month="January"/>
          </front>
          <seriesInfo name="RFC">2246</seriesInfo>
        </reference>
        <reference anchor="RFC2616" quoteTitle="true" derivedAnchor="RFC2616">
          <front>
            <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2616</seriesInfo>
        </reference>
        <reference anchor="RFC2617" quoteTitle="true" derivedAnchor="RFC2617">
          <front>
            <title>HTTP Authentication: Basic and Digest Access Authentication</title>
            <date year="1999" month="June"/>
          </front>
          <seriesInfo name="RFC">2617</seriesInfo>
        </reference>
        <reference anchor="RFC2818" quoteTitle="true" derivedAnchor="RFC2818">
          <front>
            <title>HTTP Over TLS</title>
            <date year="2000" month="May"/>
          </front>
          <seriesInfo name="RFC">2818</seriesInfo>
        </reference>
        <reference anchor="RFC3986" quoteTitle="true" derivedAnchor="RFC3986">
          <front>
            <title>Uniform Resource Identifier (URI): Generic Syntax</title>
            <date year="2005" month="January"/>
          </front>
          <seriesInfo name="STD">66</seriesInfo>
          <seriesInfo name="RFC">3986</seriesInfo>
        </reference>
        <reference anchor="RFC5234" quoteTitle="true" derivedAnchor="RFC5234">
          <front>
            <title>Augmented BNF for Syntax Specifications: ABNF</title>
            <date year="2008" month="January"/>
          </front>
          <seriesInfo name="STD">68</seriesInfo>
          <seriesInfo name="RFC">5234</seriesInfo>
        </reference>
        <reference anchor="RFC5246" quoteTitle="true" derivedAnchor="RFC5246">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
            <date year="2008" month="August"/>
          </front>
          <seriesInfo name="RFC">5246</seriesInfo>
        </reference>
        <reference anchor="RFC5280" quoteTitle="true" derivedAnchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <date year="2008" month="May"/>
          </front>
          <seriesInfo name="RFC">5280</seriesInfo>
        </reference>
        <reference anchor="RFC6265" quoteTitle="true" derivedAnchor="RFC6265">
          <front>
            <title>HTTP State Management Mechanism</title>
            <date year="2011" month="April"/>
          </front>
          <seriesInfo name="RFC">6265</seriesInfo>
        </reference>
        <reference anchor="RFC6749" quoteTitle="true" derivedAnchor="RFC6749">
          <front>
            <title>The OAuth 2.0 Authorization Framework</title>
            <date year="2012" month="October"/>
          </front>
          <seriesInfo name="RFC">6749</seriesInfo>
        </reference>
        <reference anchor="USASCII" quoteTitle="true" derivedAnchor="USASCII">
          <front>
            <title>Coded Character Set -- 7-bit American Standard Code for Information Interchange</title>
            <date year="1986"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-html401-19991224" target="http://www.w3.org/TR/1999/REC-html401-19991224" quoteTitle="true" derivedAnchor="W3C.REC-html401-19991224">
          <front>
            <title>HTML 4.01 Specification</title>
            <date year="1999" month="December"/>
          </front>
        </reference>
        <reference anchor="W3C.REC-webarch-20041215" target="http://www.w3.org/TR/2004/REC-webarch-20041215" quoteTitle="true" derivedAnchor="W3C.REC-webarch-20041215">
          <front>
            <title>Architecture of the World Wide Web, Volume One</title>
            <date year="2004" month="December"/>
          </front>
        </reference>
      </references>
      <references pn="section-7.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="HTTP-AUTH" quoteTitle="true" derivedAnchor="HTTP-AUTH">
          <front>
            <title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
            <date year="2012" month="October"/>
          </front>
        </reference>
        <reference anchor="NIST800-63" target="http://csrc.nist.gov/publications/" quoteTitle="true" derivedAnchor="NIST800-63">
          <front>
            <title>NIST Special Publication 800-63-1, INFORMATION SECURITY</title>
            <date year="2011" month="December"/>
          </front>
        </reference>
        <reference anchor="OMAP" target="http://www.oatc.us/Standards/Download.aspx" quoteTitle="true" derivedAnchor="OMAP">
          <front>
            <title>Online Multimedia Authorization Protocol: An Industry Standard for Authorized Access to Internet Multimedia Resources</title>
            <date year="2012" month="April"/>
          </front>
        </reference>
        <reference anchor="OpenID.Messages" target="http://openid.net/specs/ openid-connect-messages-1_0.html" quoteTitle="true" derivedAnchor="OpenID.Messages">
          <front>
            <title>OpenID Connect Messages 1.0</title>
            <date year="2012" month="June"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="acknowledgements" numbered="true" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgements">Acknowledgements</name>
      <t indent="0" pn="section-appendix.a-1">The following people contributed to preliminary versions of this
document: Blaine Cook (BT), Brian Eaton (Google), Yaron Y. Goland
(Microsoft), Brent Goldman (Facebook), Raffi Krikorian (Twitter),
Luke Shepard (Facebook), and Allen Tom (Yahoo!).  The content and
concepts within are a product of the OAuth community, the Web
Resource Authorization Profiles (WRAP) community, and the OAuth
Working Group.  David Recordon created a preliminary version of this
specification based upon an early draft of the specification that
evolved into OAuth 2.0 <xref target="RFC6749" format="default" sectionFormat="of" derivedContent="RFC6749"/>.  Michael B. Jones in turn created
the first version (00) of this specification using portions of
David's preliminary document and edited all subsequent versions.</t>
      <t indent="0" pn="section-appendix.a-2">The OAuth Working Group has dozens of very active contributors who
proposed ideas and wording for this document, including Michael
Adams, Amanda Anganes, Andrew Arnott, Derek Atkins, Dirk Balfanz,
John Bradley, Brian Campbell, Francisco Corella, Leah Culver, Bill de
hOra, Breno de Medeiros, Brian Ellin, Stephen Farrell, Igor Faynberg,
George Fletcher, Tim Freeman, Evan Gilbert, Yaron Y. Goland, Eran
Hammer, Thomas Hardjono, Dick Hardt, Justin Hart, Phil Hunt, John
Kemp, Chasen Le Hara, Barry Leiba, Amos Jeffries, Michael B. Jones,
Torsten Lodderstedt, Paul Madsen, Eve Maler, James Manger, Laurence
Miao, William J. Mills, Chuck Mortimore, Anthony Nadalin, Axel
Nennker, Mark Nottingham, David Recordon, Julian Reschke, Rob
Richards, Justin Richer, Peter Saint-Andre, Nat Sakimura, Rob Sayre,
Marius Scurtescu, Naitik Shah, Justin Smith, Christian Stuebner,
Jeremy Suriel, Doug Tangren, Paul Tarjan, Hannes Tschofenig, Franklin
Tse, Sean Turner, Paul Walker, Shane Weeden, Skylar Woodward, and
Zachary Zeltsan.</t>
    </section>
  </back>
</rfc>
