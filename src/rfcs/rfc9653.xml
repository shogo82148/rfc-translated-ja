<?xml version='1.0' encoding='utf-8'?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" version="3" xml:lang="en" ipr="trust200902" submissionType="IETF" consensus="true" category="std" docName="draft-ietf-tsvwg-sctp-zero-checksum-11" number="9653" updates="" obsoletes="" tocInclude="true" sortRefs="true" symRefs="true" prepTime="2024-09-27T08:47:52" indexInclude="true" scripts="Common,Latin" tocDepth="3">
  <link href="https://datatracker.ietf.org/doc/draft-ietf-tsvwg-sctp-zero-checksum-11" rel="prev"/>
  <link href="https://dx.doi.org/10.17487/rfc9653" rel="alternate"/>
  <link href="urn:issn:2070-1721" rel="alternate"/>
  <front>
    <title abbrev="Zero Checksum for SCTP">Zero Checksum for the Stream Control Transmission Protocol</title>
    <seriesInfo name="RFC" value="9653" stream="IETF"/>
    <author initials="M." surname="Tüxen" fullname="Michael Tüxen">
      <organization abbrev="Münster Univ. of Appl. Sciences" showOnFrontPage="true">Münster University of Applied Sciences</organization>
      <address>
        <postal>
          <street>Stegerwaldstrasse 39</street>
          <city>48565 Steinfurt</city>
          <country>Germany</country>
        </postal>
        <email>tuexen@fh-muenster.de</email>
      </address>
    </author>
    <author initials="V." surname="Boivie" fullname="Victor Boivie">
      <organization showOnFrontPage="true">Google</organization>
      <address>
        <postal>
          <street>Kungsbron 2</street>
          <city>Stockholm</city>
          <code>11122</code>
          <country>Sweden</country>
        </postal>
        <email>boivie@google.com</email>
      </address>
    </author>
    <author initials="F." surname="Castelli" fullname="Florent Castelli">
      <organization showOnFrontPage="true">Google</organization>
      <address>
        <postal>
          <street>Kungsbron 2</street>
          <city>Stockholm</city>
          <code>11122</code>
          <country>Sweden</country>
        </postal>
        <email>orphis@google.com</email>
      </address>
    </author>
    <author initials="R." surname="Jesup" fullname="Randell Jesup">
      <organization abbrev="Mozilla" showOnFrontPage="true">Mozilla Corporation</organization>
      <address>
        <postal>
          <street>1835 Horse Shoe Trl</street>
          <city>Malvern</city>
          <region>PA</region>
          <code>19355</code>
          <country>United States of America</country>
        </postal>
        <email>randell-ietf@jesup.org</email>
      </address>
    </author>
    <date month="09" year="2024"/>
    <area>WIT</area>
    <workgroup>tsvwg</workgroup>
    <abstract pn="section-abstract">
      <t indent="0" pn="section-abstract-1">The Stream Control Transmission Protocol (SCTP) uses a 32-bit checksum in
the common header of each packet to provide some level of data integrity.
If another method used by SCTP already provides the same or a higher level of
data integrity, computing this checksum does not provide any additional
protection but does consume computing resources.</t>
      <t indent="0" pn="section-abstract-2">This document provides a simple extension allowing SCTP to save these
computing resources by using zero as the checksum in a backwards-compatible
way.
It also defines how this feature can be used when SCTP packets are encapsulated
in Datagram Transport Layer Security (DTLS) packets.</t>
    </abstract>
    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This is an Internet Standards Track document.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document is a product of the Internet Engineering Task Force
            (IETF).  It represents the consensus of the IETF community.  It has
            received public review and has been approved for publication by
            the Internet Engineering Steering Group (IESG).  Further
            information on Internet Standards is available in Section 2 of 
            RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc9653" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2024 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Revised BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Revised BSD License.
        </t>
      </section>
    </boilerplate>
    <toc>
      <section anchor="toc" numbered="false" removeInRFC="false" toc="exclude" pn="section-toc.1">
        <name slugifiedName="name-table-of-contents">Table of Contents</name>
        <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1">
          <li pn="section-toc.1-1.1">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.1.1"><xref derivedContent="1" format="counter" sectionFormat="of" target="section-1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-introduction">Introduction</xref></t>
          </li>
          <li pn="section-toc.1-1.2">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.2.1"><xref derivedContent="2" format="counter" sectionFormat="of" target="section-2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-conventions">Conventions</xref></t>
          </li>
          <li pn="section-toc.1-1.3">
            <t indent="0" keepWithNext="true" pn="section-toc.1-1.3.1"><xref derivedContent="3" format="counter" sectionFormat="of" target="section-3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-alternate-error-detection-m">Alternate Error Detection Methods</xref></t>
          </li>
          <li pn="section-toc.1-1.4">
            <t indent="0" pn="section-toc.1-1.4.1"><xref derivedContent="4" format="counter" sectionFormat="of" target="section-4"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-a-new-chunk-parameter">A New Chunk Parameter</xref></t>
          </li>
          <li pn="section-toc.1-1.5">
            <t indent="0" pn="section-toc.1-1.5.1"><xref derivedContent="5" format="counter" sectionFormat="of" target="section-5"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-procedures">Procedures</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.5.2">
              <li pn="section-toc.1-1.5.2.1">
                <t indent="0" pn="section-toc.1-1.5.2.1.1"><xref derivedContent="5.1" format="counter" sectionFormat="of" target="section-5.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-declaration-of-feature-supp">Declaration of Feature Support</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.2">
                <t indent="0" pn="section-toc.1-1.5.2.2.1"><xref derivedContent="5.2" format="counter" sectionFormat="of" target="section-5.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-sender-side-considerations">Sender-Side Considerations</xref></t>
              </li>
              <li pn="section-toc.1-1.5.2.3">
                <t indent="0" pn="section-toc.1-1.5.2.3.1"><xref derivedContent="5.3" format="counter" sectionFormat="of" target="section-5.3"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-receiver-side-consideration">Receiver-Side Considerations</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.6">
            <t indent="0" pn="section-toc.1-1.6.1"><xref derivedContent="6" format="counter" sectionFormat="of" target="section-6"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-error-detection-via-sctp-ov">Error Detection via SCTP over DTLS</xref></t>
          </li>
          <li pn="section-toc.1-1.7">
            <t indent="0" pn="section-toc.1-1.7.1"><xref derivedContent="7" format="counter" sectionFormat="of" target="section-7"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-socket-api-considerations">Socket API Considerations</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.7.2">
              <li pn="section-toc.1-1.7.2.1">
                <t indent="0" pn="section-toc.1-1.7.2.1.1"><xref derivedContent="7.1" format="counter" sectionFormat="of" target="section-7.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-set-accepting-a-zero-checks">Set Accepting a Zero Checksum (SCTP_ACCEPT_ZERO_CHECKSUM)</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.8">
            <t indent="0" pn="section-toc.1-1.8.1"><xref derivedContent="8" format="counter" sectionFormat="of" target="section-8"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-iana-considerations">IANA Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.9">
            <t indent="0" pn="section-toc.1-1.9.1"><xref derivedContent="9" format="counter" sectionFormat="of" target="section-9"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-security-considerations">Security Considerations</xref></t>
          </li>
          <li pn="section-toc.1-1.10">
            <t indent="0" pn="section-toc.1-1.10.1"><xref derivedContent="10" format="counter" sectionFormat="of" target="section-10"/>. <xref derivedContent="" format="title" sectionFormat="of" target="name-references">References</xref></t>
            <ul bare="true" empty="true" indent="2" spacing="compact" pn="section-toc.1-1.10.2">
              <li pn="section-toc.1-1.10.2.1">
                <t indent="0" pn="section-toc.1-1.10.2.1.1"><xref derivedContent="10.1" format="counter" sectionFormat="of" target="section-10.1"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-normative-references">Normative References</xref></t>
              </li>
              <li pn="section-toc.1-1.10.2.2">
                <t indent="0" pn="section-toc.1-1.10.2.2.1"><xref derivedContent="10.2" format="counter" sectionFormat="of" target="section-10.2"/>.  <xref derivedContent="" format="title" sectionFormat="of" target="name-informative-references">Informative References</xref></t>
              </li>
            </ul>
          </li>
          <li pn="section-toc.1-1.11">
            <t indent="0" pn="section-toc.1-1.11.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.a"/><xref derivedContent="" format="title" sectionFormat="of" target="name-acknowledgments">Acknowledgments</xref></t>
          </li>
          <li pn="section-toc.1-1.12">
            <t indent="0" pn="section-toc.1-1.12.1"><xref derivedContent="" format="none" sectionFormat="of" target="section-appendix.b"/><xref derivedContent="" format="title" sectionFormat="of" target="name-authors-addresses">Authors' Addresses</xref></t>
          </li>
        </ul>
      </section>
    </toc>
  </front>
  <middle>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-1">
      <name slugifiedName="name-introduction">Introduction</name>
      <t indent="0" pn="section-1-1">SCTP as specified in <xref target="RFC9260" format="default" sectionFormat="of" derivedContent="RFC9260"/> uses a CRC32c checksum to
provide some level of data integrity.
When using, for example, Datagram Transport Layer Security (DTLS) as the
lower layer for SCTP as specified in <xref target="RFC8261" format="default" sectionFormat="of" derivedContent="RFC8261"/>, using the CRC32c
checksum does not provide any additional protection over that already provided
by DTLS.
However, computing the CRC32c checksum at the sender and receiver sides does
consume computational resources for no benefit.
This is particularly important for endpoints that are computationally limited
and use SCTP over DTLS.</t>
      <t indent="0" pn="section-1-2">The extension described in this document allows an SCTP endpoint to declare
that it accepts SCTP packets with a checksum of zero when using a specific
alternate error detection method.
   This declaration
   happens during the setup of the SCTP association and allows endpoints
   that support this extension to be interoperable with endpoints that don't.
To provide this backwards compatibility, endpoints using this extension still
need to implement the CRC32c checksum algorithm.</t>
    </section>
    <section anchor="conventions" numbered="true" removeInRFC="false" toc="include" pn="section-2">
      <name slugifiedName="name-conventions">Conventions</name>
      <t indent="0" pn="section-2-1">
    The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
    "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
    "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
    "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
    "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
    interpreted as described in BCP 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/> <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only when, they appear in all capitals, as
    shown here.
      </t>
    </section>
    <section anchor="alternate_error_detection_methods" numbered="true" removeInRFC="false" toc="include" pn="section-3">
      <name slugifiedName="name-alternate-error-detection-m">Alternate Error Detection Methods</name>
      <t indent="0" pn="section-3-1">SCTP uses a CRC32c checksum to provide some level of data integrity.
The CRC32c checksum is computed based on the SCTP common header and the chunks
contained in the packet.
In particular, the computation of the CRC32c checksum does not involve a pseudo
header for IPv4 or IPv6 like the computation of the TCP checksum, as specified
in <xref target="RFC9293" format="default" sectionFormat="of" derivedContent="RFC9293"/>, or the UDP checksum, as specified in
<xref target="RFC0768" format="default" sectionFormat="of" derivedContent="RFC0768"/>.</t>
      <t indent="0" pn="section-3-2">Zero is a valid result of the CRC32c checksum algorithm.
For example, the following figure depicts an SCTP packet containing a minimal
INIT chunk with a correct CRC32c checksum of zero.</t>
      <figure align="left" suppress-title="false" pn="figure-1">
        <name slugifiedName="name-sctp-packet-with-a-correct-">SCTP Packet with a Correct CRC32c Checksum of Zero</name>
        <artwork align="center" pn="section-3-3.1">
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Source Port Number = 5001   |Destination Port Number = 5001 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Verification Tag = 0                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Checksum = 0                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Type = 1    |Chunk Flags = 0|       Chunk Length = 20       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                   Initiate Tag = 0xFCB75CCA                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       Advertised Receiver Window Credit (a_rwnd) = 1500       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|Number of Outbound Streams = 1 | Number of Inbound Streams = 1 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Initial TSN = 0                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
      </figure>
      <t indent="0" pn="section-3-4">Using SCTP in combination with other mechanisms or protocol extensions might
provide data integrity protection with an equal or lower probability of false
negatives than the one provided by using the CRC32c checksum algorithm.
When using such alternate error detection methods, the SCTP common header
containing the 32-bit checksum field might or might not be visible to
middleboxes on the paths between the two endpoints.</t>
      <t indent="0" pn="section-3-5">Alternate error detection methods have two requirements:</t>
      <ol indent="adaptive" spacing="normal" start="1" type="1" pn="section-3-6">
  <li pn="section-3-6.1" derivedCounter="1.">
          <t indent="0" pn="section-3-6.1.1">An alternate error detection method <bcp14>MUST</bcp14> provide an equal
  or lower probability of false negatives than the one provided by using the
  CRC32c checksum algorithm.
  This <bcp14>MAY</bcp14> only apply to packets satisfying some method-specific
  constraints.</t>
        </li>
        <li pn="section-3-6.2" derivedCounter="2.">
          <t indent="0" pn="section-3-6.2.1">Using an alternate error detection method <bcp14>MUST NOT</bcp14>
  result in a path failure for more than two retransmission timeouts (RTOs)
  due to middleboxes on the path expecting correct CRC32c checksums.</t>
        </li>
      </ol>
      <t indent="0" pn="section-3-7">To fulfill the second requirement, alternate error detection methods could
use a heuristic to detect the existence of such middleboxes and use correct
CRC32c checksums on these affected paths.</t>
      <t indent="0" pn="section-3-8">
   Using DTLS as the lower layer of SCTP as specified in <xref target="RFC8261" format="default" sectionFormat="of" derivedContent="RFC8261"/>
   is one example that fulfills the first requirement.
Another example is using SCTP Authentication as specified in
<xref target="RFC4895" format="default" sectionFormat="of" derivedContent="RFC4895"/>.
Of course, this only applies to each SCTP packet having an AUTH chunk as its
first chunk.
However, using SCTP Authentication without any heuristic does not fulfill the
second requirement.
Since using DTLS as the lower layer of SCTP as specified in
<xref target="RFC8261" format="default" sectionFormat="of" derivedContent="RFC8261"/> also fulfills the second requirement, it can be used
as an alternate error detection method
(see <xref target="edm_sctp_over_dtls" format="default" sectionFormat="of" derivedContent="Section 6"/>).</t>
      <t indent="0" pn="section-3-9">If an alternate error detection method is used, the computation of the
CRC32c checksum consumes computational resources without providing any benefit.
To avoid this, an SCTP endpoint could be willing to accept SCTP packets with
an incorrect CRC32c checksum value of zero in addition to SCTP packets with
correct CRC32c checksum values.</t>
      <t indent="0" pn="section-3-10">Because zero is a valid result of the CRC32c checksum algorithm, a receiver
of an SCTP packet containing a checksum value of zero cannot determine whether
the sender included an incorrect CRC32c checksum of zero to reduce the CPU cost
or the result of the CRC32c checksum computation was actually zero.
However, if the receiver is willing to use an alternate error detection method,
this ambiguity is irrelevant, since the receiver is fine with not using the
CRC32c checksum to protect incoming packets.</t>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-4">
      <name slugifiedName="name-a-new-chunk-parameter">A New Chunk Parameter</name>
      <t indent="0" pn="section-4-1">The Zero Checksum Acceptable Chunk Parameter is defined by the
following figure.</t>
      <figure align="left" suppress-title="false" pn="figure-2">
        <name slugifiedName="name-zero-checksum-acceptable-ch">Zero Checksum Acceptable Chunk Parameter</name>
        <artwork align="center" pn="section-4-2.1">
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Type = 0x8001        |          Length = 8           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Error Detection Method Identifier (EDMID)           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
      </figure>
      <dl newline="true" indent="3" spacing="normal" pn="section-4-3">
        <dt pn="section-4-3.1">Type: 16 bits (unsigned integer)</dt>
        <dd pn="section-4-3.2">
    This field holds the IANA-defined parameter type for the
    "Zero Checksum Acceptable" chunk parameter.
    IANA has assigned the value 32769 (0x8001) for this
    parameter type.
  </dd>
        <dt pn="section-4-3.3">Length: 16 bits (unsigned integer)</dt>
        <dd pn="section-4-3.4">
    This field holds the length in bytes of the chunk parameter;
    the value <bcp14>MUST</bcp14> be 8.
  </dd>
        <dt pn="section-4-3.5">Error Detection Method Identifier (EDMID): 32 bits (unsigned integer)</dt>
        <dd pn="section-4-3.6">
    An IANA-registered value specifying the alternate error detection method
    the sender of this parameter is willing to use for received packets.
  </dd>
      </dl>
      <t indent="0" pn="section-4-4">All transported integer numbers are in network byte order, a.k.a.
big endian.</t>
      <t indent="0" pn="section-4-5">The Zero Checksum Acceptable Chunk Parameter <bcp14>MAY</bcp14> appear
in INIT and INIT ACK chunks and <bcp14>MUST NOT</bcp14> appear in any other
chunk.
The Parameter <bcp14>MUST NOT</bcp14> appear more than once in any chunk.</t>
      <t indent="0" pn="section-4-6">If an endpoint not supporting the extension described in this document
receives this parameter in an INIT or INIT ACK chunk, it is
<bcp14>REQUIRED</bcp14> to skip this parameter and continue to process further
parameters in the chunk.
This behavior is specified by <xref target="RFC9260" format="default" sectionFormat="of" derivedContent="RFC9260"/> because the highest-order
two bits of the Type are '10'.</t>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-5">
      <name slugifiedName="name-procedures">Procedures</name>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-5.1">
        <name slugifiedName="name-declaration-of-feature-supp">Declaration of Feature Support</name>
        <t indent="0" pn="section-5.1-1">An endpoint willing to accept SCTP packets with an incorrect checksum of
zero <bcp14>MUST</bcp14> include the Zero Checksum Acceptable Chunk Parameter
indicating the alternate error detection method it is willing to use in the
INIT or INIT ACK chunk it sends.</t>
        <t indent="0" pn="section-5.1-2">An SCTP implementation <bcp14>MAY</bcp14> also require the upper layer to
indicate that it is fine to use a specific alternate error detection method
before including the corresponding Zero Checksum Acceptable Chunk Parameter.</t>
      </section>
      <section anchor="sender_side_considerations" numbered="true" removeInRFC="false" toc="include" pn="section-5.2">
        <name slugifiedName="name-sender-side-considerations">Sender-Side Considerations</name>
        <t indent="0" pn="section-5.2-1">An SCTP endpoint cannot just use an incorrect CRC32c checksum value of zero
for all SCTP packets it sends.
The following restrictions apply:</t>
        <ol indent="adaptive" spacing="normal" start="1" type="1" pn="section-5.2-2">
<li pn="section-5.2-2.1" derivedCounter="1.">
            <t indent="0" pn="section-5.2-2.1.1">If an endpoint has not received an INIT or INIT ACK chunk containing a
Zero Checksum Acceptable Chunk Parameter indicating an alternate error detection
method it supports from its peer during the association setup,
it <bcp14>MUST</bcp14> use a correct CRC32c checksum.
In particular, when an endpoint</t>
            <ol type="%c." indent="adaptive" spacing="normal" start="1" pn="section-5.2-2.1.2">
<li pn="section-5.2-2.1.2.1" derivedCounter="a.">
                <t indent="0" pn="section-5.2-2.1.2.1.1">sends a packet containing an INIT chunk, it <bcp14>MUST</bcp14> include
a correct CRC32c checksum in the packet containing the INIT chunk.</t>
              </li>
              <li pn="section-5.2-2.1.2.2" derivedCounter="b.">
                <t indent="0" pn="section-5.2-2.1.2.2.1">responds to an "Out of the Blue" (OOTB) SCTP packet, it
<bcp14>MUST</bcp14> include a correct CRC32c checksum in the response
packet.</t>
              </li>
            </ol>
          </li>
          <li pn="section-5.2-2.2" derivedCounter="2.">
            <t indent="0" pn="section-5.2-2.2.1">When an endpoint sends a packet containing a COOKIE ECHO chunk, it
<bcp14>MUST</bcp14> include a correct CRC32c checksum in the packet containing
the COOKIE ECHO chunk.</t>
          </li>
          <li pn="section-5.2-2.3" derivedCounter="3.">
            <t indent="0" pn="section-5.2-2.3.1">When an endpoint supports the dynamic address reconfiguration specified
in <xref target="RFC5061" format="default" sectionFormat="of" derivedContent="RFC5061"/> and sends a packet containing an ASCONF chunk, it
<bcp14>MUST</bcp14> include a correct CRC32c checksum in the packet containing
the ASCONF chunk.</t>
          </li>
          <li pn="section-5.2-2.4" derivedCounter="4.">
            <t indent="0" pn="section-5.2-2.4.1">If an alternate error detection method has some method-specific
constraints, the sender <bcp14>MUST</bcp14> include a correct CRC32c checksum
in all packets that don't fulfill these method-specific constraints.</t>
          </li>
        </ol>
        <t indent="0" pn="section-5.2-3">The first restriction allows backwards compatibility.
The second and third restrictions allow a simpler implementation of the
extension defined in this document, because looking up the association
for SCTP packets containing a COOKIE ECHO chunk or an ASCONF chunk might
be more complex than for other packets.
Finally, the last restriction covers constraints specific to the alternate error detection method.</t>
        <t indent="0" pn="section-5.2-4">An SCTP endpoint <bcp14>MAY</bcp14> require that the upper layer allow
the use of the alternate error detection method that was announced by the peer
before sending packets with an incorrect checksum of zero.</t>
        <t indent="0" pn="section-5.2-5">If none of the above restrictions apply, an endpoint <bcp14>SHOULD</bcp14>
use zero as the checksum when sending an SCTP packet.</t>
      </section>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-5.3">
        <name slugifiedName="name-receiver-side-consideration">Receiver-Side Considerations</name>
        <t indent="0" pn="section-5.3-1">If an endpoint has sent the Zero Checksum Acceptable Chunk Parameter
indicating the support of an alternate error detection method in an INIT or     
INIT ACK chunk, in addition to SCTP packets containing the
correct CRC32c checksum value it <bcp14>MUST</bcp14> accept SCTP packets that have an
incorrect checksum value of zero and that fulfill the requirements of
the announced alternate error detection method used for this association.

Otherwise, the endpoint <bcp14>MUST</bcp14> drop all SCTP packets with an
incorrect CRC32c checksum.</t>
        <t indent="0" pn="section-5.3-2">In addition to processing OOTB packets with a correct CRC32c checksum as
specified in <xref target="RFC9260" format="default" sectionFormat="of" derivedContent="RFC9260"/>, an SCTP implementation
<bcp14>MAY</bcp14> also process OOTB packets having an incorrect zero checksum.
Doing so might result in faster SCTP association failure detection.</t>
      </section>
    </section>
    <section anchor="edm_sctp_over_dtls" numbered="true" removeInRFC="false" toc="include" pn="section-6">
      <name slugifiedName="name-error-detection-via-sctp-ov">Error Detection via SCTP over DTLS</name>
      <t indent="0" pn="section-6-1">Using SCTP over DTLS as specified in <xref target="RFC8261" format="default" sectionFormat="of" derivedContent="RFC8261"/> provides
a stronger error detection method than using the CRC32c checksum algorithm.
Since middleboxes will not observe the unencrypted SCTP packet, there is
no risk in interfering with using zero as an incorrect checksum.
There are no additional constraints (specific to the error detection method) on packets
when using DTLS encapsulation.</t>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-7">
      <name slugifiedName="name-socket-api-considerations">Socket API Considerations</name>
      <t indent="0" pn="section-7-1">This section describes how the socket API defined in
<xref target="RFC6458" format="default" sectionFormat="of" derivedContent="RFC6458"/> needs to be extended to provide a way for the
application to control the acceptance of a zero checksum.</t>
      <t indent="0" pn="section-7-2">A 'Socket API Considerations' section is contained in all SCTP-related
specifications published after <xref target="RFC6458" format="default" sectionFormat="of" derivedContent="RFC6458"/> describing an extension
for which implementations using the socket API as specified in
<xref target="RFC6458" format="default" sectionFormat="of" derivedContent="RFC6458"/> would require some extension of the socket API.
Please note that this section is informational only.</t>
      <t indent="0" pn="section-7-3">A socket API implementation based on <xref target="RFC6458" format="default" sectionFormat="of" derivedContent="RFC6458"/> is extended by
supporting one new write-only IPPROTO_SCTP-level socket option.</t>
      <section numbered="true" removeInRFC="false" toc="include" pn="section-7.1">
        <name slugifiedName="name-set-accepting-a-zero-checks">Set Accepting a Zero Checksum (SCTP_ACCEPT_ZERO_CHECKSUM)</name>
        <t indent="0" pn="section-7.1-1">This IPPROTO_SCTP-level socket option with the name SCTP_ACCEPT_ZERO_CHECKSUM
can be used to control the acceptance of a zero checksum.
It is a write-only socket option and applies only to future SCTP associations
on the socket.</t>
        <t indent="0" pn="section-7.1-2">This option expects an unsigned integer.
Possible values include:</t>
        <dl indent="3" newline="false" spacing="normal" pn="section-7.1-3">
          <dt pn="section-7.1-3.1">SCTP_EDMID_NONE:</dt>
          <dd pn="section-7.1-3.2">
            <t indent="0" pn="section-7.1-3.2.1">Disable the use of any alternate error detection method.
This means that all SCTP packets being received are only accepted if they
have a correct CRC32c checksum value.</t>
          </dd>
          <dt pn="section-7.1-3.3">SCTP_EDMID_LOWER_LAYER_DTLS:</dt>
          <dd pn="section-7.1-3.4">
            <t indent="0" pn="section-7.1-3.4.1">Use the alternate error detection method described in
<xref target="edm_sctp_over_dtls" format="default" sectionFormat="of" derivedContent="Section 6"/>.</t>
          </dd>
        </dl>
        <t indent="0" pn="section-7.1-4">An implementation might only send packets with an incorrect checksum of zero,
if the alternate error detection method announced by the peer is also enabled
locally via this socket option.</t>
        <t indent="0" pn="section-7.1-5">The default for this socket option is that the use of alternate error
detection methods is disabled.</t>
      </section>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-8">
      <name slugifiedName="name-iana-considerations">IANA Considerations</name>
      <t indent="0" pn="section-8-1">A new chunk parameter type has been assigned by IANA in the "Chunk Parameter Types" registry for SCTP:</t>
      <table align="center" pn="table-1">
        <name slugifiedName="name-new-entry-in-chunk-paramete">New Entry in "Chunk Parameter Types" Registry</name>
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">ID Value</th>
            <th align="left" colspan="1" rowspan="1">Chunk Parameter Type</th>
            <th align="left" colspan="1" rowspan="1">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left" colspan="1" rowspan="1">32769</td>
            <td align="left" colspan="1" rowspan="1">Zero Checksum Acceptable (0x8001)</td>
            <td align="left" colspan="1" rowspan="1">RFC 9653</td>
          </tr>
        </tbody>
      </table>
      <t indent="0" pn="section-8-3">Furthermore, IANA has established a new "Error Detection Method"
registry for SCTP.
The assignment of new error detection methods is done through the Specification
Required policy as defined in <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/>.
Documentation for a new error detection method <bcp14>MUST</bcp14> contain the
following information:</t>
      <ol indent="adaptive" spacing="normal" start="1" type="1" pn="section-8-4">
  <li pn="section-8-4.1" derivedCounter="1.">
          <t indent="0" pn="section-8-4.1.1">A name of an alternate error detection method.</t>
        </li>
        <li pn="section-8-4.2" derivedCounter="2.">
          <t indent="0" pn="section-8-4.2.1">A reference to a specification describing:</t>
          <ol type="(%c)" indent="adaptive" spacing="normal" start="1" pn="section-8-4.2.2">
    <li pn="section-8-4.2.2.1" derivedCounter="(a)">
              <t indent="0" pn="section-8-4.2.2.1.1">the alternate error detection method,</t>
            </li>
            <li pn="section-8-4.2.2.2" derivedCounter="(b)">
              <t indent="0" pn="section-8-4.2.2.2.1">why the alternate error detection method provides an equal or
    lower probability of false negatives than the one provided by using the CRC32c
    checksum,</t>
            </li>
            <li pn="section-8-4.2.2.3" derivedCounter="(c)">
              <t indent="0" pn="section-8-4.2.2.3.1">any constraints (specific to the alternate error detection method) that are referred to in the fourth exception in <xref target="sender_side_considerations" format="default" sectionFormat="of" derivedContent="Section 5.2"/>, and</t>
            </li>
            <li pn="section-8-4.2.2.4" derivedCounter="(d)">
              <t indent="0" pn="section-8-4.2.2.4.1">why using the alternate error detection method does not result in
    path failures due to middleboxes expecting correct CRC32c checksums for more
    than two RTOs.
    In case the alternate error detection method uses a heuristic for detecting
    such middleboxes, this heuristic needs to be described.</t>
            </li>
          </ol>
        </li>
      </ol>
      <t indent="0" pn="section-8-5">The initial contents of the registry are as follows:</t>
      <table align="center" pn="table-2">
        <name slugifiedName="name-initial-contents-of-the-err">Initial Contents of the "Error Detection Method" Registry</name>
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">ID Value</th>
            <th align="left" colspan="1" rowspan="1">Error Detection Method</th>
            <th align="left" colspan="1" rowspan="1">Reference</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left" colspan="1" rowspan="1">0             </td>
            <td align="left" colspan="1" rowspan="1">Reserved</td>
            <td align="left" colspan="1" rowspan="1">RFC 9653</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">1             </td>
            <td align="left" colspan="1" rowspan="1">SCTP over DTLS</td>
            <td align="left" colspan="1" rowspan="1">RFC 9653</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">2 - 4294967295</td>
            <td align="left" colspan="1" rowspan="1">Unassigned</td>
            <td align="left" colspan="1" rowspan="1"/>
          </tr>
        </tbody>
      </table>
      <t indent="0" pn="section-8-7">A designated expert (DE) is expected to ascertain the existence of suitable
documentation (a specification) as described in <xref target="RFC8126" format="default" sectionFormat="of" derivedContent="RFC8126"/> and to
verify that the document is permanently and publicly available.
Furthermore, the DE is expected to ensure that the above four points have been
addressed appropriately.</t>
    </section>
    <section numbered="true" removeInRFC="false" toc="include" pn="section-9">
      <name slugifiedName="name-security-considerations">Security Considerations</name>
      <t indent="0" pn="section-9-1">This document does not change the considerations given in
<xref target="RFC9260" format="default" sectionFormat="of" derivedContent="RFC9260"/>.</t>
      <t indent="0" pn="section-9-2">Due to the first requirement in <xref target="alternate_error_detection_methods" format="default" sectionFormat="of" derivedContent="Section 3"/>, using an alternate error 
   detection method provides an equal or better level of data integrity
   than the one provided by using the CRC32c checksum algorithm.  The
   second requirement in <xref target="alternate_error_detection_methods" format="default" sectionFormat="of" derivedContent="Section 3"/> ensures that the
existence of middleboxes expecting correct CRC32c checksums does not result in
permanent path failures.</t>
    </section>
  </middle>
  <back>
    <references pn="section-10">
      <name slugifiedName="name-references">References</name>
      <references pn="section-10.1">
        <name slugifiedName="name-normative-references">Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119" quoteTitle="true" derivedAnchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t indent="0">In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC5061" target="https://www.rfc-editor.org/info/rfc5061" quoteTitle="true" derivedAnchor="RFC5061">
          <front>
            <title>Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration</title>
            <author fullname="R. Stewart" initials="R." surname="Stewart"/>
            <author fullname="Q. Xie" initials="Q." surname="Xie"/>
            <author fullname="M. Tuexen" initials="M." surname="Tuexen"/>
            <author fullname="S. Maruyama" initials="S." surname="Maruyama"/>
            <author fullname="M. Kozuka" initials="M." surname="Kozuka"/>
            <date month="September" year="2007"/>
            <abstract>
              <t indent="0">A local host may have multiple points of attachment to the Internet, giving it a degree of fault tolerance from hardware failures. Stream Control Transmission Protocol (SCTP) (RFC 4960) was developed to take full advantage of such a multi-homed host to provide a fast failover and association survivability in the face of such hardware failures. This document describes an extension to SCTP that will allow an SCTP stack to dynamically add an IP address to an SCTP association, dynamically delete an IP address from an SCTP association, and to request to set the primary address the peer will use when sending to an endpoint. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5061"/>
          <seriesInfo name="DOI" value="10.17487/RFC5061"/>
        </reference>
        <reference anchor="RFC8126" target="https://www.rfc-editor.org/info/rfc8126" quoteTitle="true" derivedAnchor="RFC8126">
          <front>
            <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
            <author fullname="M. Cotton" initials="M." surname="Cotton"/>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <author fullname="T. Narten" initials="T." surname="Narten"/>
            <date month="June" year="2017"/>
            <abstract>
              <t indent="0">Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
              <t indent="0">To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
              <t indent="0">This is the third edition of this document; it obsoletes RFC 5226.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="26"/>
          <seriesInfo name="RFC" value="8126"/>
          <seriesInfo name="DOI" value="10.17487/RFC8126"/>
        </reference>
        <reference anchor="RFC8174" target="https://www.rfc-editor.org/info/rfc8174" quoteTitle="true" derivedAnchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t indent="0">RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC8261" target="https://www.rfc-editor.org/info/rfc8261" quoteTitle="true" derivedAnchor="RFC8261">
          <front>
            <title>Datagram Transport Layer Security (DTLS) Encapsulation of SCTP Packets</title>
            <author fullname="M. Tuexen" initials="M." surname="Tuexen"/>
            <author fullname="R. Stewart" initials="R." surname="Stewart"/>
            <author fullname="R. Jesup" initials="R." surname="Jesup"/>
            <author fullname="S. Loreto" initials="S." surname="Loreto"/>
            <date month="November" year="2017"/>
            <abstract>
              <t indent="0">The Stream Control Transmission Protocol (SCTP) is a transport protocol originally defined to run on top of the network protocols IPv4 or IPv6. This document specifies how SCTP can be used on top of the Datagram Transport Layer Security (DTLS) protocol. Using the encapsulation method described in this document, SCTP is unaware of the protocols being used below DTLS; hence, explicit IP addresses cannot be used in the SCTP control chunks. As a consequence, the SCTP associations carried over DTLS can only be single-homed.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8261"/>
          <seriesInfo name="DOI" value="10.17487/RFC8261"/>
        </reference>
        <reference anchor="RFC9260" target="https://www.rfc-editor.org/info/rfc9260" quoteTitle="true" derivedAnchor="RFC9260">
          <front>
            <title>Stream Control Transmission Protocol</title>
            <author fullname="R. Stewart" initials="R." surname="Stewart"/>
            <author fullname="M. Tüxen" initials="M." surname="Tüxen"/>
            <author fullname="K. Nielsen" initials="K." surname="Nielsen"/>
            <date month="June" year="2022"/>
            <abstract>
              <t indent="0">This document describes the Stream Control Transmission Protocol (SCTP) and obsoletes RFC 4960. It incorporates the specification of the chunk flags registry from RFC 6096 and the specification of the I bit of DATA chunks from RFC 7053. Therefore, RFCs 6096 and 7053 are also obsoleted by this document. In addition, RFCs 4460 and 8540, which describe errata for SCTP, are obsoleted by this document.</t>
              <t indent="0">SCTP was originally designed to transport Public Switched Telephone Network (PSTN) signaling messages over IP networks. It is also suited to be used for other applications, for example, WebRTC.</t>
              <t indent="0">SCTP is a reliable transport protocol operating on top of a connectionless packet network, such as IP. It offers the following services to its users:</t>
              <t indent="0">The design of SCTP includes appropriate congestion avoidance behavior and resistance to flooding and masquerade attacks.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9260"/>
          <seriesInfo name="DOI" value="10.17487/RFC9260"/>
        </reference>
      </references>
      <references pn="section-10.2">
        <name slugifiedName="name-informative-references">Informative References</name>
        <reference anchor="RFC0768" target="https://www.rfc-editor.org/info/rfc768" quoteTitle="true" derivedAnchor="RFC0768">
          <front>
            <title>User Datagram Protocol</title>
            <author fullname="J. Postel" initials="J." surname="Postel"/>
            <date month="August" year="1980"/>
          </front>
          <seriesInfo name="STD" value="6"/>
          <seriesInfo name="RFC" value="768"/>
          <seriesInfo name="DOI" value="10.17487/RFC0768"/>
        </reference>
        <reference anchor="RFC4895" target="https://www.rfc-editor.org/info/rfc4895" quoteTitle="true" derivedAnchor="RFC4895">
          <front>
            <title>Authenticated Chunks for the Stream Control Transmission Protocol (SCTP)</title>
            <author fullname="M. Tuexen" initials="M." surname="Tuexen"/>
            <author fullname="R. Stewart" initials="R." surname="Stewart"/>
            <author fullname="P. Lei" initials="P." surname="Lei"/>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
            <date month="August" year="2007"/>
            <abstract>
              <t indent="0">This document describes a new chunk type, several parameters, and procedures for the Stream Control Transmission Protocol (SCTP). This new chunk type can be used to authenticate SCTP chunks by using shared keys between the sender and receiver. The new parameters are used to establish the shared keys. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4895"/>
          <seriesInfo name="DOI" value="10.17487/RFC4895"/>
        </reference>
        <reference anchor="RFC6458" target="https://www.rfc-editor.org/info/rfc6458" quoteTitle="true" derivedAnchor="RFC6458">
          <front>
            <title>Sockets API Extensions for the Stream Control Transmission Protocol (SCTP)</title>
            <author fullname="R. Stewart" initials="R." surname="Stewart"/>
            <author fullname="M. Tuexen" initials="M." surname="Tuexen"/>
            <author fullname="K. Poon" initials="K." surname="Poon"/>
            <author fullname="P. Lei" initials="P." surname="Lei"/>
            <author fullname="V. Yasevich" initials="V." surname="Yasevich"/>
            <date month="December" year="2011"/>
            <abstract>
              <t indent="0">This document describes a mapping of the Stream Control Transmission Protocol (SCTP) into a sockets API. The benefits of this mapping include compatibility for TCP applications, access to new SCTP features, and a consolidated error and event notification scheme. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6458"/>
          <seriesInfo name="DOI" value="10.17487/RFC6458"/>
        </reference>
        <reference anchor="RFC9293" target="https://www.rfc-editor.org/info/rfc9293" quoteTitle="true" derivedAnchor="RFC9293">
          <front>
            <title>Transmission Control Protocol (TCP)</title>
            <author fullname="W. Eddy" initials="W." role="editor" surname="Eddy"/>
            <date month="August" year="2022"/>
            <abstract>
              <t indent="0">This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="7"/>
          <seriesInfo name="RFC" value="9293"/>
          <seriesInfo name="DOI" value="10.17487/RFC9293"/>
        </reference>
      </references>
    </references>
    <section numbered="false" removeInRFC="false" toc="include" pn="section-appendix.a">
      <name slugifiedName="name-acknowledgments">Acknowledgments</name>
      <t indent="0" pn="section-appendix.a-1">The authors wish to thank
<contact fullname="Bernard Aboba"/>,
<contact fullname="Deb Cooley"/>,
<contact fullname="Martin Duke"/>,
<contact fullname="Gorry Fairhurst"/>,
<contact fullname="Mike Heard"/>,
<contact fullname="Peter Lei"/>,
<contact fullname="Nils Ohlmeier"/>,
<contact fullname="Claudio Porfiri"/>,
<contact fullname="Greg Skinner"/>,
<contact fullname="Timo Völker"/>,
<contact fullname="Éric Vyncke"/>, and
<contact fullname="Magnus Westerlund"/>
for their invaluable comments.</t>
    </section>
    <section anchor="authors-addresses" numbered="false" removeInRFC="false" toc="include" pn="section-appendix.b">
      <name slugifiedName="name-authors-addresses">Authors' Addresses</name>
      <author initials="M." surname="Tüxen" fullname="Michael Tüxen">
        <organization abbrev="Münster Univ. of Appl. Sciences" showOnFrontPage="true">Münster University of Applied Sciences</organization>
        <address>
          <postal>
            <street>Stegerwaldstrasse 39</street>
            <city>48565 Steinfurt</city>
            <country>Germany</country>
          </postal>
          <email>tuexen@fh-muenster.de</email>
        </address>
      </author>
      <author initials="V." surname="Boivie" fullname="Victor Boivie">
        <organization showOnFrontPage="true">Google</organization>
        <address>
          <postal>
            <street>Kungsbron 2</street>
            <city>Stockholm</city>
            <code>11122</code>
            <country>Sweden</country>
          </postal>
          <email>boivie@google.com</email>
        </address>
      </author>
      <author initials="F." surname="Castelli" fullname="Florent Castelli">
        <organization showOnFrontPage="true">Google</organization>
        <address>
          <postal>
            <street>Kungsbron 2</street>
            <city>Stockholm</city>
            <code>11122</code>
            <country>Sweden</country>
          </postal>
          <email>orphis@google.com</email>
        </address>
      </author>
      <author initials="R." surname="Jesup" fullname="Randell Jesup">
        <organization abbrev="Mozilla" showOnFrontPage="true">Mozilla Corporation</organization>
        <address>
          <postal>
            <street>1835 Horse Shoe Trl</street>
            <city>Malvern</city>
            <region>PA</region>
            <code>19355</code>
            <country>United States of America</country>
          </postal>
          <email>randell-ietf@jesup.org</email>
        </address>
      </author>
    </section>
  </back>
</rfc>
